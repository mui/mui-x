[
  {
    "projects": ["x-data-grid-premium"],
    "name": "aggregationModelChange",
    "description": "Fired when the aggregation model changes.",
    "params": "GridAggregationModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellClick",
    "description": "Fired when a cell is clicked.",
    "params": "GridCellParams<any>",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>",
    "componentProp": "onCellClick"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellDoubleClick",
    "description": "Fired when a cell is double-clicked.",
    "params": "GridCellParams<any>",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>",
    "componentProp": "onCellDoubleClick"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellEditStart",
    "description": "Fired when the cell turns to edit mode.",
    "params": "GridCellEditStartParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>>",
    "componentProp": "onCellEditStart"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellEditStop",
    "description": "Fired when the cell turns back to view mode.",
    "params": "GridCellEditStopParams",
    "event": "MuiEvent<MuiBaseEvent>",
    "componentProp": "onCellEditStop"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellKeyDown",
    "description": "Fired when a <code>keydown</code> event happens in a cell.",
    "params": "GridCellParams<any>",
    "event": "MuiEvent<React.KeyboardEvent<HTMLElement>>",
    "componentProp": "onCellKeyDown"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellKeyUp",
    "description": "Fired when a <code>keyup</code> event happens in a cell.",
    "params": "GridCellParams<any>",
    "event": "MuiEvent<React.KeyboardEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellModesModelChange",
    "description": "Fired when the model that controls the cell modes changes.",
    "params": "GridCellModesModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellMouseDown",
    "description": "Fired when a <code>mousedown</code> event happens in a cell.",
    "params": "GridCellParams<any>",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellMouseOver",
    "description": "Fired when a <code>mouseover</code> event happens in a cell.",
    "params": "GridCellParams<any>",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "cellMouseUp",
    "description": "Fired when a <code>mouseup</code> event happens in a cell.",
    "params": "GridCellParams<any>",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid-premium"],
    "name": "cellSelectionChange",
    "description": "Fired when the selection state of one or multiple cells change.",
    "params": "GridCellSelectionModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "clipboardCopy",
    "description": "Fired when the data is copied to the clipboard.",
    "params": "string",
    "event": "MuiEvent<{}>",
    "componentProp": "onClipboardCopy"
  },
  {
    "projects": ["x-data-grid-premium"],
    "name": "clipboardPasteEnd",
    "description": "Fired when the clipboard paste operation ends.",
    "params": "",
    "event": "MuiEvent<{}>",
    "componentProp": "onClipboardPasteEnd"
  },
  {
    "projects": ["x-data-grid-premium"],
    "name": "clipboardPasteStart",
    "description": "Fired when the clipboard paste operation starts.",
    "params": "{ data: string[][] }",
    "event": "MuiEvent<{}>",
    "componentProp": "onClipboardPasteStart"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnGroupHeaderKeyDown",
    "description": "Fired when a key is pressed in a column group header. It&#39;s mapped do the <code>keydown</code> DOM event.",
    "params": "GridColumnGroupHeaderParams",
    "event": "MuiEvent<React.KeyboardEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnHeaderClick",
    "description": "Fired when a column header is clicked",
    "params": "GridColumnHeaderParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>",
    "componentProp": "onColumnHeaderClick"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnHeaderContextMenu",
    "description": "Fired when the user attempts to open a context menu in the column header.",
    "params": "GridColumnHeaderParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>",
    "componentProp": "onColumnHeaderContextMenu"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnHeaderDoubleClick",
    "description": "Fired when a column header is double-clicked.",
    "params": "GridColumnHeaderParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>",
    "componentProp": "onColumnHeaderDoubleClick"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnHeaderKeyDown",
    "description": "Fired when a key is pressed in a column header. It&#39;s mapped do the <code>keydown</code> DOM event.",
    "params": "GridColumnHeaderParams",
    "event": "MuiEvent<React.KeyboardEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnOrderChange",
    "description": "Fired when the user ends reordering a column.",
    "params": "GridColumnOrderChangeParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onColumnOrderChange"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnResize",
    "description": "Fired during the resizing of a column.",
    "params": "GridColumnResizeParams",
    "event": "MuiEvent<MouseEvent>",
    "componentProp": "onColumnResize"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnResizeStart",
    "description": "Fired when the user starts resizing a column.",
    "params": "{ field: string }",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnResizeStop",
    "description": "Fired when the user stops resizing a column.",
    "params": "null",
    "event": "MuiEvent<MouseEvent>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnsChange",
    "description": "Fired when the columns state is changed.",
    "params": "string[]",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnVisibilityModelChange",
    "description": "Fired when the column visibility model changes.",
    "params": "GridColumnVisibilityModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "columnWidthChange",
    "description": "Fired when the width of a column is changed.",
    "params": "GridColumnResizeParams",
    "event": "MuiEvent<MouseEvent | {}>",
    "componentProp": "onColumnWidthChange"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "debouncedResize",
    "description": "Fired when the grid is resized with a debounced time of 60ms.",
    "params": "ElementSize",
    "event": "MuiEvent<{}>",
    "componentProp": "onResize"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "densityChange",
    "description": "Fired when the density changes.",
    "params": "GridDensity",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid-premium"],
    "name": "excelExportStateChange",
    "description": "Fired when the state of the Excel export task changes",
    "params": "'pending' | 'finished'",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid-pro", "x-data-grid-premium"],
    "name": "fetchRows",
    "description": "Fired when a new batch of rows is requested to be loaded. Called with a GridFetchRowsParams object. Used to trigger <code>onFetchRows</code>.",
    "params": "GridFetchRowsParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onFetchRows"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "filterModelChange",
    "description": "Fired when the filter model changes.",
    "params": "GridFilterModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "headerSelectionCheckboxChange",
    "description": "Fired when the value of the selection checkbox of the header is changed.",
    "params": "GridHeaderSelectionCheckboxParams",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "menuClose",
    "description": "Fired when the grid menu is closed.",
    "params": "GridMenuParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onMenuClose"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "menuOpen",
    "description": "Fired when the menu is opened.",
    "params": "GridMenuParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onMenuOpen"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "paginationMetaChange",
    "description": "Fired when the pagination meta change.",
    "params": "GridPaginationMeta",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "paginationModelChange",
    "description": "Fired when the pagination model changes.",
    "params": "GridPaginationModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "preferencePanelClose",
    "description": "Fired when the preference panel is closed.",
    "params": "GridPreferencePanelParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onPreferencePanelClose"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "preferencePanelOpen",
    "description": "Fired when the preference panel is opened.",
    "params": "GridPreferencePanelParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onPreferencePanelOpen"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "renderedRowsIntervalChange",
    "description": "Fired when the rendered rows index interval changes. Called with a GridRenderContext object.",
    "params": "GridRenderContext",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "resize",
    "description": "Fired when the grid is resized.",
    "params": "ElementSize",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowClick",
    "description": "Fired when a row is clicked. Not fired if the cell clicked is from an interactive column (actions, checkbox, etc).",
    "params": "GridRowParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>",
    "componentProp": "onRowClick"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowCountChange",
    "description": "Fired when the row count change.",
    "params": "number",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowDoubleClick",
    "description": "Fired when a row is double-clicked.",
    "params": "GridRowParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>",
    "componentProp": "onRowDoubleClick"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowEditStart",
    "description": "Fired when the row turns to edit mode.",
    "params": "GridRowEditStartParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>>",
    "componentProp": "onRowEditStart"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowEditStop",
    "description": "Fired when the row turns back to view mode.",
    "params": "GridRowEditStopParams",
    "event": "MuiEvent<MuiBaseEvent>",
    "componentProp": "onRowEditStop"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowExpansionChange",
    "description": "Fired when the expansion of a row is changed. Called with a GridGroupNode object.",
    "params": "GridGroupNode",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid-premium"],
    "name": "rowGroupingModelChange",
    "description": "Fired when the row grouping model changes.",
    "params": "GridRowGroupingModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowModesModelChange",
    "description": "Fired when the model that controls the row modes changes.",
    "params": "GridRowModesModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowMouseEnter",
    "description": "Fired when the mouse enters the row. Called with a <a href=\"/x/api/data-grid/grid-row-params/\">GridRowParams</a> object.",
    "params": "GridRowParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowMouseLeave",
    "description": "Fired when the mouse leaves the row. Called with a <a href=\"/x/api/data-grid/grid-row-params/\">GridRowParams</a> object.",
    "params": "GridRowParams",
    "event": "MuiEvent<React.MouseEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowOrderChange",
    "description": "Fired when the user ends reordering a row.",
    "params": "GridRowOrderChangeParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onRowOrderChange"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowSelectionChange",
    "description": "Fired when the selection state of one or multiple rows changes.",
    "params": "GridRowSelectionModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowSelectionCheckboxChange",
    "description": "Fired when the value of the selection checkbox of a row is changed.",
    "params": "GridRowSelectionCheckboxParams",
    "event": "MuiEvent<React.ChangeEvent<HTMLElement>>"
  },
  {
    "projects": ["x-data-grid-pro", "x-data-grid-premium"],
    "name": "rowsScrollEnd",
    "description": "Fired when scrolling to the bottom of the grid viewport.",
    "params": "GridRowScrollEndParams",
    "event": "MuiEvent<{}>",
    "componentProp": "onRowsScrollEnd"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "scrollPositionChange",
    "description": "Fired during the scroll of the grid viewport.",
    "params": "GridScrollParams",
    "event": "MuiEvent<React.UIEvent | MuiBaseEvent>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "sortModelChange",
    "description": "Fired when the sort model changes.",
    "params": "GridSortModel",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "stateChange",
    "description": "Fired when the state of the grid is updated.",
    "params": "any",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "unmount",
    "description": "Fired when the grid is unmounted.",
    "params": "",
    "event": "MuiEvent<{}>"
  },
  {
    "projects": ["x-data-grid", "x-data-grid-pro", "x-data-grid-premium"],
    "name": "viewportInnerSizeChange",
    "description": "Fired when the inner size of the viewport changes. Called with an ElementSize object.",
    "params": "ElementSize",
    "event": "MuiEvent<{}>"
  }
]
