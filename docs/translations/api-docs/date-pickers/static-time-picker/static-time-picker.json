{
  "componentDescription": "",
  "propDescriptions": {
    "ampm": { "description": "12h/24h view for hour selection clock." },
    "ampmInClock": {
      "description": "Display ampm controls under the clock (instead of in the toolbar)."
    },
    "autoFocus": {
      "description": "If <code>true</code>, the main element is focused during the first mount. This main element is: - the element chosen by the visible view if any (i.e: the selected day on the <code>day</code> view). - the <code>input</code> element if there is a field rendered."
    },
    "defaultValue": {
      "description": "The default value. Used when the component is not controlled."
    },
    "disabled": {
      "description": "If <code>true</code>, the component is disabled. When disabled, the value cannot be changed and no interaction is possible."
    },
    "disableFuture": {
      "description": "If <code>true</code>, disable values after the current date for date components, time for time components and both for date time components."
    },
    "disableIgnoringDatePartForTimeValidation": {
      "description": "Do not ignore date part when validating min/max time."
    },
    "disablePast": {
      "description": "If <code>true</code>, disable values before the current date for date components, time for time components and both for date time components."
    },
    "displayStaticWrapperAs": {
      "description": "Force static wrapper inner components to be rendered in mobile or desktop mode."
    },
    "localeText": {
      "description": "Locale for components texts. Allows overriding texts coming from <code>LocalizationProvider</code> and <code>theme</code>."
    },
    "maxTime": {
      "description": "Maximal selectable time. The date part of the object will be ignored unless <code>props.disableIgnoringDatePartForTimeValidation === true</code>."
    },
    "minTime": {
      "description": "Minimal selectable time. The date part of the object will be ignored unless <code>props.disableIgnoringDatePartForTimeValidation === true</code>."
    },
    "minutesStep": { "description": "Step over minutes." },
    "onAccept": {
      "description": "Callback fired when the value is accepted.",
      "typeDescriptions": {
        "value": "The value that was just accepted.",
        "context": "The context containing the validation result of the current value."
      }
    },
    "onChange": {
      "description": "Callback fired when the value changes.",
      "typeDescriptions": {
        "value": "The new value.",
        "context": "The context containing the validation result of the current value."
      }
    },
    "onClose": {
      "description": "Callback fired when component requests to be closed. Can be fired when selecting (by default on <code>desktop</code> mode) or clearing a value."
    },
    "onError": {
      "description": "Callback fired when the error associated with the current value changes. When a validation error is detected, the <code>error</code> parameter contains a non-null value. This can be used to render an appropriate form error.",
      "typeDescriptions": {
        "error": "The reason why the current value is not valid.",
        "value": "The value associated with the error."
      }
    },
    "onViewChange": {
      "description": "Callback fired on view change.",
      "typeDescriptions": { "view": "The new view." }
    },
    "openTo": {
      "description": "The default visible view. Used when the component view is not controlled. Must be a valid option from <code>views</code> list."
    },
    "orientation": { "description": "Force rendering in particular orientation." },
    "readOnly": {
      "description": "If <code>true</code>, the component is read-only. When read-only, the value cannot be changed but the user can interact with the interface."
    },
    "reduceAnimations": { "description": "If <code>true</code>, disable heavy animations." },
    "referenceDate": {
      "description": "The date used to generate the new value when both <code>value</code> and <code>defaultValue</code> are empty."
    },
    "shouldDisableTime": {
      "description": "Disable specific time.",
      "typeDescriptions": {
        "value": "The value to check.",
        "view": "The clock type of the timeValue.",
        "boolean": "If <code>true</code> the time will be disabled."
      }
    },
    "slotProps": { "description": "The props used for each component slot." },
    "slots": { "description": "Overridable component slots." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "timezone": {
      "description": "Choose which timezone to use for the value. Example: &quot;default&quot;, &quot;system&quot;, &quot;UTC&quot;, &quot;America/New_York&quot;. If you pass values from other timezones to some props, they will be converted to this timezone before being used.",
      "seeMoreText": "See the {{link}} for more details."
    },
    "value": { "description": "The selected value. Used when the component is controlled." },
    "view": {
      "description": "The visible view. Used when the component view is controlled. Must be a valid option from <code>views</code> list."
    },
    "viewRenderers": {
      "description": "Define custom view renderers for each section. If <code>null</code>, the section will only have field editing. If <code>undefined</code>, internally defined view will be used."
    },
    "views": { "description": "Available views." }
  },
  "classDescriptions": {},
  "slotDescriptions": {
    "actionBar": "Custom component for the action bar, it is placed below the picker views.",
    "layout": "Custom component for wrapping the layout. It wraps the toolbar, views, action bar, and shortcuts.",
    "leftArrowIcon": "Icon displayed in the left view switch button.",
    "nextIconButton": "Button allowing to switch to the right view.",
    "previousIconButton": "Button allowing to switch to the left view.",
    "rightArrowIcon": "Icon displayed in the right view switch button.",
    "shortcuts": "Custom component for the shortcuts.",
    "toolbar": "Custom component for the toolbar rendered above the views."
  }
}
