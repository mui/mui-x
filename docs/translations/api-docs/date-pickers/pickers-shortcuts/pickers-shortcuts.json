{
  "componentDescription": "",
  "propDescriptions": {
    "changeImportance": {
      "description": "Importance of the change when picking a shortcut: - &quot;accept&quot;: fires <code>onChange</code>, fires <code>onAccept</code> and closes the Picker. - &quot;set&quot;: fires <code>onChange</code> but do not fire <code>onAccept</code> and does not close the Picker."
    },
    "dense": {
      "description": "If <code>true</code>, compact vertical padding designed for keyboard and mouse input is used for the list and list items. The prop is available to descendant components as the <code>dense</code> context."
    },
    "disablePadding": {
      "description": "If <code>true</code>, vertical padding is removed from the list."
    },
    "items": {
      "description": "Ordered array of shortcuts to display. If empty, does not display the shortcuts."
    },
    "subheader": {
      "description": "The content of the subheader, normally <code>ListSubheader</code>."
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    }
  },
  "classDescriptions": {
    "dense": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "dense"
    },
    "padding": {
      "description": "Styles applied to {{nodeName}} unless {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disablePadding={true}</code>"
    },
    "root": { "description": "Styles applied to the root element." },
    "subheader": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "a <code>subheader</code> is provided"
    }
  }
}
