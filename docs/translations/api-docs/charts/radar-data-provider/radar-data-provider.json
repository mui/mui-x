{
  "componentDescription": "",
  "propDescriptions": {
    "colors": { "description": "Color palette used to colorize multiple series." },
    "height": {
      "description": "The height of the chart in px. If not defined, it takes the height of the parent element."
    },
    "highlight": {
      "description": "Indicates if the chart should highlight items per axis or per series."
    },
    "id": {
      "description": "This prop is used to help implement the accessibility logic. If you don&#39;t provide this prop. It falls back to a randomly generated id."
    },
    "localeText": { "description": "Localized text for chart components." },
    "margin": {
      "description": "The margin between the SVG and the drawing area. It&#39;s used for leaving some space for extra information such as the x- and y-axis or legend.<br>Accepts a <code>number</code> to be used on all sides or an object with the optional properties: <code>top</code>, <code>bottom</code>, <code>left</code>, and <code>right</code>."
    },
    "plugins": { "description": "Array of plugins used to add features to the chart." },
    "radar": { "description": "The configuration of the radar scales." },
    "series": {
      "description": "The series to display in the bar chart. An array of RadarSeriesType objects."
    },
    "skipAnimation": {
      "description": "If <code>true</code>, animations are skipped. If unset or <code>false</code>, the animations respects the user&#39;s <code>prefers-reduced-motion</code> setting."
    },
    "slotProps": { "description": "The props for the slots." },
    "slots": { "description": "Slots to customize charts&#39; components." },
    "width": {
      "description": "The width of the chart in px. If not defined, it takes the width of the parent element."
    }
  },
  "classDescriptions": {}
}
