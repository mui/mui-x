{
  "componentDescription": "Orchestrates the data providers for the chart components and hooks.\n\nUse this component if you have custom HTML components that need to access the chart data.",
  "propDescriptions": {
    "colors": { "description": "Color palette used to colorize multiple series." },
    "height": {
      "description": "The height of the chart in px. If not defined, it takes the height of the parent element."
    },
    "highlightedItem": {
      "description": "The item currently highlighted. Turns highlighting into a controlled prop."
    },
    "id": {
      "description": "This prop is used to help implement the accessibility logic. If you don&#39;t provide this prop. It falls back to a randomly generated id."
    },
    "margin": {
      "description": "The margin between the SVG and the drawing area. It&#39;s used for leaving some space for extra information such as the x- and y-axis or legend. Accepts an object with the optional properties: <code>top</code>, <code>bottom</code>, <code>left</code>, and <code>right</code>."
    },
    "onHighlightChange": { "description": "The callback fired when the highlighted item changes." },
    "series": {
      "description": "The array of series to display. Each type of series has its own specificity. Please refer to the appropriate docs page to learn more about it."
    },
    "skipAnimation": {
      "description": "If <code>true</code>, animations are skipped. If unset or <code>false</code>, the animations respects the user&#39;s <code>prefers-reduced-motion</code> setting."
    },
    "width": {
      "description": "The width of the chart in px. If not defined, it takes the width of the parent element."
    }
  },
  "classDescriptions": {}
}
