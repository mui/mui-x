{
  "props": {
    "itemId": { "type": { "name": "string" }, "required": true },
    "children": { "type": { "name": "any" } },
    "classes": { "type": { "name": "object" }, "additionalInfo": { "cssApi": true } },
    "disabled": { "type": { "name": "bool" }, "default": "false" },
    "id": { "type": { "name": "string" } },
    "label": { "type": { "name": "node" } },
    "onBlur": { "type": { "name": "func" } },
    "onFocus": { "type": { "name": "custom", "description": "unsupportedProp" } },
    "onKeyDown": { "type": { "name": "func" } },
    "slotProps": { "type": { "name": "object" }, "default": "{}" },
    "slots": {
      "type": { "name": "object" },
      "default": "{}",
      "additionalInfo": { "slotsApi": true }
    }
  },
  "name": "TreeItem",
  "imports": [
    "import { TreeItem } from '@mui/x-tree-view/TreeItem';",
    "import { TreeItem } from '@mui/x-tree-view';",
    "import { TreeItem } from '@mui/x-tree-view-pro';"
  ],
  "slots": [
    {
      "name": "root",
      "description": "The component that renders the root.",
      "default": "TreeItemRoot",
      "class": "MuiTreeItem-root"
    },
    {
      "name": "content",
      "description": "The component that renders the content of the item.\n(e.g.: everything related to this item, not to its children).",
      "default": "TreeItemContent",
      "class": "MuiTreeItem-content"
    },
    {
      "name": "groupTransition",
      "description": "The component that renders the children of the item.",
      "default": "TreeItemGroupTransition",
      "class": "MuiTreeItem-groupTransition"
    },
    {
      "name": "iconContainer",
      "description": "The component that renders the icon.",
      "default": "TreeItemIconContainer",
      "class": "MuiTreeItem-iconContainer"
    },
    {
      "name": "checkbox",
      "description": "The component that renders the item checkbox for selection.",
      "default": "TreeItemCheckbox",
      "class": "MuiTreeItem-checkbox"
    },
    {
      "name": "label",
      "description": "The component that renders the item label.",
      "default": "TreeItemLabel",
      "class": "MuiTreeItem-label"
    },
    {
      "name": "labelInput",
      "description": "The component that renders the input to edit the label when the item is editable and is currently being edited.",
      "default": "TreeItemLabelInput",
      "class": "MuiTreeItem-labelInput"
    },
    {
      "name": "dragAndDropOverlay",
      "description": "The component that renders the overlay when an item reordering is ongoing.\nWarning: This slot is only useful when using the `<RichTreeViewPro />` component.",
      "default": "TreeItemDragAndDropOverlay",
      "class": "MuiTreeItem-dragAndDropOverlay"
    },
    { "name": "collapseIcon", "description": "The icon used to collapse the item.", "class": null },
    { "name": "expandIcon", "description": "The icon used to expand the item.", "class": null },
    { "name": "endIcon", "description": "The icon displayed next to an end item.", "class": null },
    {
      "name": "icon",
      "description": "The icon to display next to the Tree Item's label.",
      "class": null
    }
  ],
  "classes": [
    {
      "key": "disabled",
      "className": "Mui-disabled",
      "description": "State class applied to the element when disabled.",
      "isGlobal": true
    },
    {
      "key": "editable",
      "className": "MuiTreeItem-editable",
      "description": "Styles applied to the content of the items that are editable.",
      "isGlobal": false
    },
    {
      "key": "editing",
      "className": "MuiTreeItem-editing",
      "description": "Styles applied to the content element when editing is enabled.",
      "isGlobal": false
    },
    {
      "key": "expanded",
      "className": "Mui-expanded",
      "description": "State class applied to the content element when expanded.",
      "isGlobal": true
    },
    {
      "key": "focused",
      "className": "Mui-focused",
      "description": "State class applied to the content element when focused.",
      "isGlobal": true
    },
    {
      "key": "selected",
      "className": "Mui-selected",
      "description": "State class applied to the content element when selected.",
      "isGlobal": true
    }
  ],
  "spread": true,
  "themeDefaultProps": true,
  "muiName": "MuiTreeItem",
  "forwardsRefTo": "HTMLLIElement",
  "filename": "/packages/x-tree-view/src/TreeItem/TreeItem.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-tree-view/getting-started/\">Tree View - Getting Started</a></li>\n<li><a href=\"/x/react-tree-view/rich-tree-view/customization/\">Rich Tree View - Customization</a></li>\n<li><a href=\"/x/react-tree-view/rich-tree-view/editing/\">Rich Tree View - Label editing</a></li>\n<li><a href=\"/x/react-tree-view/rich-tree-view/expansion/\">Rich Tree View - Expansion</a></li>\n<li><a href=\"/x/react-tree-view/rich-tree-view/focus/\">Rich Tree View - Focus</a></li>\n<li><a href=\"/x/react-tree-view/rich-tree-view/items/\">Rich Tree View - Items</a></li>\n<li><a href=\"/x/react-tree-view/rich-tree-view/ordering/\">Rich Tree View - Ordering <a href=\"/x/introduction/licensing/#pro-plan\" title=\"Pro plan\"><span class=\"plan-pro\"></span></a></a></li>\n<li><a href=\"/x/react-tree-view/rich-tree-view/selection/\">Rich Tree View - Selection</a></li>\n<li><a href=\"/x/react-tree-view/simple-tree-view/customization/\">Simple Tree View - Customization</a></li>\n<li><a href=\"/x/react-tree-view/simple-tree-view/expansion/\">Simple Tree View - Expansion</a></li>\n<li><a href=\"/x/react-tree-view/simple-tree-view/focus/\">Simple Tree View - Focus</a></li>\n<li><a href=\"/x/react-tree-view/simple-tree-view/items/\">Simple Tree View - Items</a></li>\n<li><a href=\"/x/react-tree-view/simple-tree-view/selection/\">Simple Tree View - Selection</a></li>\n<li><a href=\"/x/react-tree-view/tree-item-customization/\">Tree Item Customization</a></li></ul>",
  "cssComponent": false
}
