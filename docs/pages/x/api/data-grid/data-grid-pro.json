{
  "props": {
    "columns": {
      "type": { "name": "arrayOf", "description": "Array&lt;object&gt;" },
      "required": true
    },
    "apiRef": { "type": { "name": "shape", "description": "{ current: object }" } },
    "aria-label": { "type": { "name": "string" } },
    "aria-labelledby": { "type": { "name": "string" } },
    "autoHeight": {
      "type": { "name": "bool" },
      "default": "false",
      "deprecated": true,
      "deprecationInfo": "Use flex parent container instead: <a href=\"https://mui.com/x/react-data-grid/layout/#flex-parent-container\">https://mui.com/x/react-data-grid/layout/#flex-parent-container</a>"
    },
    "autoPageSize": { "type": { "name": "bool" }, "default": "false" },
    "autosizeOnMount": { "type": { "name": "bool" }, "default": "false" },
    "autosizeOptions": {
      "type": {
        "name": "shape",
        "description": "{ columns?: Array&lt;string&gt;, disableColumnVirtualization?: bool, expand?: bool, includeHeaders?: bool, includeOutliers?: bool, outliersFactor?: number }"
      }
    },
    "cellModesModel": { "type": { "name": "object" } },
    "checkboxSelection": { "type": { "name": "bool" }, "default": "false" },
    "checkboxSelectionVisibleOnly": { "type": { "name": "bool" }, "default": "false" },
    "classes": { "type": { "name": "object" }, "additionalInfo": { "cssApi": true } },
    "clipboardCopyCellDelimiter": { "type": { "name": "string" }, "default": "'\\t'" },
    "columnBufferPx": { "type": { "name": "number" }, "default": "150" },
    "columnGroupHeaderHeight": { "type": { "name": "number" } },
    "columnHeaderHeight": { "type": { "name": "number" }, "default": "56" },
    "columnVisibilityModel": { "type": { "name": "object" } },
    "defaultGroupingExpansionDepth": { "type": { "name": "number" }, "default": "0" },
    "density": {
      "type": {
        "name": "enum",
        "description": "'comfortable'<br>&#124;&nbsp;'compact'<br>&#124;&nbsp;'standard'"
      },
      "default": "\"standard\""
    },
    "detailPanelExpandedRowIds": { "type": { "name": "instanceOf", "description": "Set" } },
    "disableAutosize": { "type": { "name": "bool" }, "default": "false" },
    "disableChildrenFiltering": { "type": { "name": "bool" }, "default": "false" },
    "disableChildrenSorting": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnFilter": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnMenu": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnPinning": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnReorder": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnResize": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnSelector": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnSorting": { "type": { "name": "bool" }, "default": "false" },
    "disableDensitySelector": { "type": { "name": "bool" }, "default": "false" },
    "disableEval": { "type": { "name": "bool" }, "default": "false" },
    "disableMultipleColumnsFiltering": { "type": { "name": "bool" }, "default": "false" },
    "disableMultipleColumnsSorting": { "type": { "name": "bool" }, "default": "false" },
    "disableMultipleRowSelection": {
      "type": { "name": "bool" },
      "default": "false (`!props.checkboxSelection` for MIT Data Grid)"
    },
    "disableRowSelectionOnClick": { "type": { "name": "bool" }, "default": "false" },
    "disableVirtualization": { "type": { "name": "bool" }, "default": "false" },
    "editMode": {
      "type": { "name": "enum", "description": "'cell'<br>&#124;&nbsp;'row'" },
      "default": "\"cell\""
    },
    "estimatedRowCount": { "type": { "name": "number" } },
    "experimentalFeatures": {
      "type": { "name": "shape", "description": "{ warnIfFocusStateIsNotSynced?: bool }" }
    },
    "filterDebounceMs": { "type": { "name": "number" }, "default": "150" },
    "filterMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" },
      "default": "\"client\""
    },
    "filterModel": {
      "type": {
        "name": "shape",
        "description": "{ items: Array&lt;{ field: string, id?: number<br>&#124;&nbsp;string, operator: string, value?: any }&gt;, logicOperator?: 'and'<br>&#124;&nbsp;'or', quickFilterExcludeHiddenColumns?: bool, quickFilterLogicOperator?: 'and'<br>&#124;&nbsp;'or', quickFilterValues?: array }"
      }
    },
    "getCellClassName": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams) => string",
        "describedArgs": ["params"],
        "returned": "string"
      }
    },
    "getDetailPanelContent": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams) => React.JSX.Element",
        "describedArgs": ["params"],
        "returned": "React.JSX.Element"
      }
    },
    "getDetailPanelHeight": {
      "type": { "name": "func" },
      "default": "\"() => 500\"",
      "signature": {
        "type": "function(params: GridRowParams) => number | string",
        "describedArgs": ["params"],
        "returned": "number | string"
      }
    },
    "getEstimatedRowHeight": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowHeightParams) => number | null",
        "describedArgs": ["params"],
        "returned": "number | null"
      }
    },
    "getRowClassName": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowClassNameParams) => string",
        "describedArgs": ["params"],
        "returned": "string"
      }
    },
    "getRowHeight": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowHeightParams) => GridRowHeightReturnValue",
        "describedArgs": ["params"],
        "returned": "GridRowHeightReturnValue"
      }
    },
    "getRowId": { "type": { "name": "func" } },
    "getRowSpacing": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowSpacingParams) => GridRowSpacing",
        "describedArgs": ["params"],
        "returned": "GridRowSpacing"
      }
    },
    "getTreeDataPath": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(row: R) => Array<string>",
        "describedArgs": ["row"],
        "returned": "Array<string>"
      }
    },
    "groupingColDef": { "type": { "name": "union", "description": "func<br>&#124;&nbsp;object" } },
    "headerFilterHeight": { "type": { "name": "number" } },
    "headerFilters": { "type": { "name": "bool" }, "default": "false" },
    "hideFooter": { "type": { "name": "bool" }, "default": "false" },
    "hideFooterPagination": { "type": { "name": "bool" }, "default": "false" },
    "hideFooterRowCount": { "type": { "name": "bool" }, "default": "false" },
    "hideFooterSelectedRowCount": { "type": { "name": "bool" }, "default": "false" },
    "ignoreDiacritics": { "type": { "name": "bool" }, "default": "false" },
    "ignoreValueFormatterDuringExport": {
      "type": {
        "name": "union",
        "description": "{ clipboardExport?: bool, csvExport?: bool }<br>&#124;&nbsp;bool"
      },
      "default": "false"
    },
    "initialState": { "type": { "name": "object" } },
    "isCellEditable": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams) => boolean",
        "describedArgs": ["params"],
        "returned": "boolean"
      }
    },
    "isGroupExpandedByDefault": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(node: GridGroupNode) => boolean",
        "describedArgs": ["node"],
        "returned": "boolean"
      }
    },
    "isRowSelectable": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams) => boolean",
        "describedArgs": ["params"],
        "returned": "boolean"
      }
    },
    "keepColumnPositionIfDraggedOutside": { "type": { "name": "bool" }, "default": "false" },
    "keepNonExistentRowsSelected": { "type": { "name": "bool" }, "default": "false" },
    "loading": { "type": { "name": "bool" }, "default": "false" },
    "localeText": { "type": { "name": "object" } },
    "logger": {
      "type": {
        "name": "shape",
        "description": "{ debug: func, error: func, info: func, warn: func }"
      },
      "default": "console"
    },
    "logLevel": {
      "type": {
        "name": "enum",
        "description": "'debug'<br>&#124;&nbsp;'error'<br>&#124;&nbsp;'info'<br>&#124;&nbsp;'warn'<br>&#124;&nbsp;false"
      },
      "default": "\"error\" (\"warn\" in dev mode)"
    },
    "nonce": { "type": { "name": "string" } },
    "onCellClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onCellDoubleClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onCellEditStart": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.KeyboardEvent | React.MouseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onCellEditStop": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<MuiBaseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onCellKeyDown": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.KeyboardEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onCellModesModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(cellModesModel: GridCellModesModel, details: GridCallbackDetails) => void",
        "describedArgs": ["cellModesModel", "details"]
      }
    },
    "onClipboardCopy": {
      "type": { "name": "func" },
      "signature": { "type": "function(data: string) => void", "describedArgs": ["data"] }
    },
    "onColumnHeaderClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderContextMenu": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onColumnHeaderDoubleClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderEnter": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderLeave": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderOut": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderOver": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnOrderChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnOrderChangeParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnResize": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnResizeParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnVisibilityModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridColumnVisibilityModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onColumnWidthChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnResizeParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onDensityChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(density: GridDensity) => void",
        "describedArgs": ["density"]
      }
    },
    "onDetailPanelExpandedRowIdsChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(ids: Array<GridRowId>, details: GridCallbackDetails) => void",
        "describedArgs": ["ids", "details"]
      }
    },
    "onFetchRows": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridFetchRowsParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onFilterModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridFilterModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onMenuClose": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridMenuParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onMenuOpen": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridMenuParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onPaginationMetaChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(paginationMeta: GridPaginationMeta) => void",
        "describedArgs": ["paginationMeta"]
      }
    },
    "onPaginationModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridPaginationModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onPinnedColumnsChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(pinnedColumns: GridPinnedColumnFields, details: GridCallbackDetails) => void",
        "describedArgs": ["pinnedColumns", "details"]
      }
    },
    "onPreferencePanelClose": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridPreferencePanelParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onPreferencePanelOpen": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridPreferencePanelParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onProcessRowUpdateError": {
      "type": { "name": "func" },
      "signature": { "type": "function(error: any) => void", "describedArgs": ["error"] }
    },
    "onResize": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(containerSize: ElementSize, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["containerSize", "event", "details"]
      }
    },
    "onRowClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onRowCountChange": {
      "type": { "name": "func" },
      "signature": { "type": "function(count: number) => void", "describedArgs": ["count"] }
    },
    "onRowDoubleClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onRowEditStart": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<React.KeyboardEvent | React.MouseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onRowEditStop": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<MuiBaseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onRowModesModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(rowModesModel: GridRowModesModel, details: GridCallbackDetails) => void",
        "describedArgs": ["rowModesModel", "details"]
      }
    },
    "onRowOrderChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowOrderChangeParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onRowSelectionModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(rowSelectionModel: GridRowSelectionModel, details: GridCallbackDetails) => void",
        "describedArgs": ["rowSelectionModel", "details"]
      }
    },
    "onRowsScrollEnd": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowScrollEndParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onSortModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridSortModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "pageSizeOptions": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;number<br>&#124;&nbsp;{ label: string, value: number }&gt;"
      },
      "default": "[25, 50, 100]"
    },
    "pagination": { "type": { "name": "bool" }, "default": "false" },
    "paginationMeta": { "type": { "name": "shape", "description": "{ hasNextPage?: bool }" } },
    "paginationMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" },
      "default": "\"client\""
    },
    "paginationModel": {
      "type": { "name": "shape", "description": "{ page: number, pageSize: number }" }
    },
    "pinnedColumns": { "type": { "name": "object" } },
    "pinnedRows": {
      "type": {
        "name": "shape",
        "description": "{ bottom?: Array&lt;object&gt;, top?: Array&lt;object&gt; }"
      }
    },
    "processRowUpdate": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(newRow: R, oldRow: R, params: { rowId: GridRowId }) => Promise<R> | R",
        "describedArgs": ["newRow", "oldRow", "params"],
        "returned": "Promise<R> | R"
      }
    },
    "resizeThrottleMs": { "type": { "name": "number" }, "default": "60" },
    "rowBufferPx": { "type": { "name": "number" }, "default": "150" },
    "rowCount": { "type": { "name": "number" } },
    "rowHeight": { "type": { "name": "number" }, "default": "52" },
    "rowModesModel": { "type": { "name": "object" } },
    "rowReordering": { "type": { "name": "bool" }, "default": "false" },
    "rows": {
      "type": { "name": "arrayOf", "description": "Array&lt;object&gt;" },
      "default": "[]"
    },
    "rowSelection": { "type": { "name": "bool" }, "default": "true" },
    "rowSelectionModel": {
      "type": {
        "name": "union",
        "description": "Array&lt;number<br>&#124;&nbsp;string&gt;<br>&#124;&nbsp;number<br>&#124;&nbsp;string"
      }
    },
    "rowSelectionPropagation": {
      "type": { "name": "shape", "description": "{ descendants?: bool, parents?: bool }" },
      "default": "{ parents: true, descendants: true }"
    },
    "rowsLoadingMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" },
      "default": "\"client\""
    },
    "rowSpacingType": {
      "type": { "name": "enum", "description": "'border'<br>&#124;&nbsp;'margin'" },
      "default": "\"margin\""
    },
    "rowSpanning": { "type": { "name": "bool" }, "default": "false" },
    "scrollbarSize": { "type": { "name": "number" } },
    "scrollEndThreshold": { "type": { "name": "number" }, "default": "80" },
    "showCellVerticalBorder": { "type": { "name": "bool" }, "default": "false" },
    "showColumnVerticalBorder": { "type": { "name": "bool" }, "default": "false" },
    "slotProps": { "type": { "name": "object" } },
    "slots": { "type": { "name": "object" }, "additionalInfo": { "slotsApi": true } },
    "sortingMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" },
      "default": "\"client\""
    },
    "sortingOrder": {
      "type": { "name": "arrayOf", "description": "Array&lt;'asc'<br>&#124;&nbsp;'desc'&gt;" },
      "default": "['asc', 'desc', null]"
    },
    "sortModel": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;{ field: string, sort?: 'asc'<br>&#124;&nbsp;'desc' }&gt;"
      }
    },
    "sx": {
      "type": {
        "name": "union",
        "description": "Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"
      },
      "additionalInfo": { "sx": true }
    },
    "throttleRowsMs": { "type": { "name": "number" }, "default": "0" },
    "treeData": { "type": { "name": "bool" }, "default": "false" },
    "unstable_lazyLoading": { "type": { "name": "bool" }, "default": "false" },
    "unstable_lazyLoadingRequestThrottleMs": { "type": { "name": "number" }, "default": "500" },
    "unstable_listColumn": {
      "type": {
        "name": "shape",
        "description": "{ align?: 'center'<br>&#124;&nbsp;'left'<br>&#124;&nbsp;'right', cellClassName?: func<br>&#124;&nbsp;string, display?: 'flex'<br>&#124;&nbsp;'text', field: string, renderCell?: func }"
      }
    },
    "unstable_listView": { "type": { "name": "bool" } },
    "virtualizeColumnsWithAutoRowHeight": { "type": { "name": "bool" }, "default": "false" }
  },
  "name": "DataGridPro",
  "imports": [
    "import { DataGridPro } from '@mui/x-data-grid-pro/DataGridPro';",
    "import { DataGridPro } from '@mui/x-data-grid-pro';",
    "import { DataGridPro } from '@mui/x-data-grid-premium';"
  ],
  "slots": [
    {
      "name": "headerFilterCell",
      "description": "Component responsible for showing menu adornment in Header filter row",
      "default": "GridHeaderFilterCell",
      "class": null
    },
    {
      "name": "headerFilterMenu",
      "description": "Component responsible for showing menu in Header filter row",
      "default": "GridHeaderFilterMenu",
      "class": null
    },
    {
      "name": "baseChip",
      "description": "The custom Chip component used in the grid.",
      "default": "Chip",
      "class": null
    },
    {
      "name": "cell",
      "description": "Component rendered for each cell.",
      "default": "GridCell",
      "class": "MuiDataGridPro-cell"
    },
    {
      "name": "skeletonCell",
      "description": "Component rendered for each skeleton cell.",
      "default": "GridSkeletonCell",
      "class": null
    },
    {
      "name": "columnHeaderFilterIconButton",
      "description": "Filter icon component rendered in each column header.",
      "default": "GridColumnHeaderFilterIconButton",
      "class": null
    },
    {
      "name": "columnHeaderSortIcon",
      "description": "Sort icon component rendered in each column header.",
      "default": "GridColumnHeaderSortIcon",
      "class": null
    },
    {
      "name": "columnMenu",
      "description": "Column menu component rendered by clicking on the 3 dots \"kebab\" icon in column headers.",
      "default": "GridColumnMenu",
      "class": null
    },
    {
      "name": "columnHeaders",
      "description": "Component responsible for rendering the column headers.",
      "default": "GridColumnHeaders",
      "class": "MuiDataGridPro-columnHeaders"
    },
    {
      "name": "detailPanels",
      "description": "Component responsible for rendering the detail panels.",
      "default": "GridDetailPanels",
      "class": "MuiDataGridPro-detailPanels"
    },
    {
      "name": "footer",
      "description": "Footer component rendered at the bottom of the grid viewport.",
      "default": "GridFooter",
      "class": null
    },
    {
      "name": "footerRowCount",
      "description": "Row count component rendered in the footer",
      "default": "GridRowCount",
      "class": null
    },
    {
      "name": "toolbar",
      "description": "Toolbar component rendered inside the Header component.",
      "default": "null",
      "class": null
    },
    {
      "name": "loadingOverlay",
      "description": "Loading overlay component rendered when the grid is in a loading state.",
      "default": "GridLoadingOverlay",
      "class": null
    },
    {
      "name": "noResultsOverlay",
      "description": "No results overlay component rendered when the grid has no results after filtering.",
      "default": "GridNoResultsOverlay",
      "class": null
    },
    {
      "name": "noRowsOverlay",
      "description": "No rows overlay component rendered when the grid has no rows.",
      "default": "GridNoRowsOverlay",
      "class": null
    },
    {
      "name": "pagination",
      "description": "Pagination component rendered in the grid footer by default.",
      "default": "Pagination",
      "class": null
    },
    {
      "name": "filterPanel",
      "description": "Filter panel component rendered when clicking the filter button.",
      "default": "GridFilterPanel",
      "class": null
    },
    {
      "name": "columnsPanel",
      "description": "GridColumns panel component rendered when clicking the columns button.",
      "default": "GridColumnsPanel",
      "class": null
    },
    {
      "name": "columnsManagement",
      "description": "Component used inside Grid Columns panel to manage columns.",
      "default": "GridColumnsManagement",
      "class": "MuiDataGridPro-columnsManagement"
    },
    {
      "name": "panel",
      "description": "Panel component wrapping the filters and columns panels.",
      "default": "GridPanel",
      "class": "MuiDataGridPro-panel"
    },
    {
      "name": "row",
      "description": "Component rendered for each row.",
      "default": "GridRow",
      "class": "MuiDataGridPro-row"
    },
    {
      "name": "baseBadge",
      "description": "The custom Badge component used in the grid for both header and cells.",
      "default": "Badge",
      "class": null
    },
    {
      "name": "baseCheckbox",
      "description": "The custom Checkbox component used in the grid for both header and cells.",
      "default": "Checkbox",
      "class": null
    },
    {
      "name": "baseCircularProgress",
      "description": "The custom CircularProgress component used in the grid.",
      "default": "CircularProgress",
      "class": null
    },
    {
      "name": "baseDivider",
      "description": "The custom Divider component used in the grid.",
      "default": "Divider",
      "class": null
    },
    {
      "name": "baseLinearProgress",
      "description": "The custom LinearProgress component used in the grid.",
      "default": "LinearProgress",
      "class": null
    },
    {
      "name": "baseMenuList",
      "description": "The custom MenuList component used in the grid.",
      "default": "MenuList",
      "class": null
    },
    {
      "name": "baseMenuItem",
      "description": "The custom MenuItem component used in the grid.",
      "default": "MenuItem",
      "class": null
    },
    {
      "name": "baseInputAdornment",
      "description": "The custom InputAdornment component used in the grid.",
      "default": "InputAdornment",
      "class": null
    },
    {
      "name": "baseTextField",
      "description": "The custom TextField component used in the grid.",
      "default": "TextField",
      "class": null
    },
    {
      "name": "baseFormControl",
      "description": "The custom FormControl component used in the grid.",
      "default": "FormControl",
      "class": null
    },
    {
      "name": "baseSelect",
      "description": "The custom Select component used in the grid.",
      "default": "Select",
      "class": null
    },
    {
      "name": "baseButton",
      "description": "The custom Button component used in the grid.",
      "default": "Button",
      "class": null
    },
    {
      "name": "baseIconButton",
      "description": "The custom IconButton component used in the grid.",
      "default": "IconButton",
      "class": null
    },
    {
      "name": "baseTooltip",
      "description": "The custom Tooltip component used in the grid.",
      "default": "Tooltip",
      "class": null
    },
    {
      "name": "basePopper",
      "description": "The custom Popper component used in the grid.",
      "default": "Popper",
      "class": null
    },
    {
      "name": "baseInputLabel",
      "description": "The custom InputLabel component used in the grid.",
      "default": "InputLabel",
      "class": null
    },
    {
      "name": "baseSelectOption",
      "description": "The custom SelectOption component used in the grid.",
      "default": "SelectOption",
      "class": null
    },
    {
      "name": "baseSkeleton",
      "description": "The custom Skeleton component used in the grid.",
      "default": "Skeleton",
      "class": null
    },
    {
      "name": "booleanCellTrueIcon",
      "description": "Icon displayed on the boolean cell to represent the true value.",
      "default": "GridCheckIcon",
      "class": null
    },
    {
      "name": "booleanCellFalseIcon",
      "description": "Icon displayed on the boolean cell to represent the false value.",
      "default": "GridCloseIcon",
      "class": null
    },
    {
      "name": "columnMenuIcon",
      "description": "Icon displayed on the side of the column header title to display the filter input component.",
      "default": "GridTripleDotsVerticalIcon",
      "class": null
    },
    {
      "name": "openFilterButtonIcon",
      "description": "Icon displayed on the open filter button present in the toolbar by default.",
      "default": "GridFilterListIcon",
      "class": null
    },
    {
      "name": "columnFilteredIcon",
      "description": "Icon displayed on the column header menu to show that a filter has been applied to the column.",
      "default": "GridFilterAltIcon",
      "class": null
    },
    {
      "name": "columnSelectorIcon",
      "description": "Icon displayed on the column menu selector tab.",
      "default": "GridColumnIcon",
      "class": null
    },
    {
      "name": "columnUnsortedIcon",
      "description": "Icon displayed on the side of the column header title when unsorted.",
      "default": "GridColumnUnsortedIcon",
      "class": null
    },
    {
      "name": "columnSortedAscendingIcon",
      "description": "Icon displayed on the side of the column header title when sorted in ascending order.",
      "default": "GridArrowUpwardIcon",
      "class": null
    },
    {
      "name": "columnSortedDescendingIcon",
      "description": "Icon displayed on the side of the column header title when sorted in descending order.",
      "default": "GridArrowDownwardIcon",
      "class": null
    },
    {
      "name": "columnResizeIcon",
      "description": "Icon displayed in between two column headers that allows to resize the column header.",
      "default": "GridSeparatorIcon",
      "class": null
    },
    {
      "name": "densityCompactIcon",
      "description": "Icon displayed on the compact density option in the toolbar.",
      "default": "GridViewHeadlineIcon",
      "class": null
    },
    {
      "name": "densityStandardIcon",
      "description": "Icon displayed on the standard density option in the toolbar.",
      "default": "GridTableRowsIcon",
      "class": null
    },
    {
      "name": "densityComfortableIcon",
      "description": "Icon displayed on the \"comfortable\" density option in the toolbar.",
      "default": "GridViewStreamIcon",
      "class": null
    },
    {
      "name": "exportIcon",
      "description": "Icon displayed on the open export button present in the toolbar by default.",
      "default": "GridSaveAltIcon",
      "class": null
    },
    {
      "name": "moreActionsIcon",
      "description": "Icon displayed on the `actions` column type to open the menu.",
      "default": "GridMoreVertIcon",
      "class": null
    },
    {
      "name": "treeDataExpandIcon",
      "description": "Icon displayed on the tree data toggling column when the children are collapsed",
      "default": "GridKeyboardArrowRight",
      "class": null
    },
    {
      "name": "treeDataCollapseIcon",
      "description": "Icon displayed on the tree data toggling column when the children are expanded",
      "default": "GridExpandMoreIcon",
      "class": null
    },
    {
      "name": "groupingCriteriaExpandIcon",
      "description": "Icon displayed on the grouping column when the children are collapsed",
      "default": "GridKeyboardArrowRight",
      "class": null
    },
    {
      "name": "groupingCriteriaCollapseIcon",
      "description": "Icon displayed on the grouping column when the children are expanded",
      "default": "GridExpandMoreIcon",
      "class": null
    },
    {
      "name": "detailPanelExpandIcon",
      "description": "Icon displayed on the detail panel toggle column when collapsed.",
      "default": "GridAddIcon",
      "class": null
    },
    {
      "name": "detailPanelCollapseIcon",
      "description": "Icon displayed on the detail panel toggle column when expanded.",
      "default": "GridRemoveIcon",
      "class": null
    },
    {
      "name": "filterPanelAddIcon",
      "description": "Icon displayed for deleting the filter from filter panel.",
      "default": "GridAddIcon",
      "class": null
    },
    {
      "name": "filterPanelDeleteIcon",
      "description": "Icon displayed for deleting the filter from filter panel.",
      "default": "GridDeleteIcon",
      "class": null
    },
    {
      "name": "filterPanelRemoveAllIcon",
      "description": "Icon displayed for deleting all the active filters from filter panel.",
      "default": "GridDeleteForeverIcon",
      "class": null
    },
    {
      "name": "rowReorderIcon",
      "description": "Icon displayed on the `reorder` column type to reorder a row.",
      "default": "GridDragIcon",
      "class": null
    },
    {
      "name": "quickFilterIcon",
      "description": "Icon displayed on the quick filter input.",
      "default": "GridSearchIcon",
      "class": null
    },
    {
      "name": "quickFilterClearIcon",
      "description": "Icon displayed on the quick filter reset input.",
      "default": "GridCloseIcon",
      "class": null
    },
    {
      "name": "columnMenuHideIcon",
      "description": "Icon displayed in column menu for hiding column",
      "default": "GridVisibilityOffIcon",
      "class": null
    },
    {
      "name": "columnMenuSortAscendingIcon",
      "description": "Icon displayed in column menu for ascending sort",
      "default": "GridArrowUpwardIcon",
      "class": null
    },
    {
      "name": "columnMenuSortDescendingIcon",
      "description": "Icon displayed in column menu for descending sort",
      "default": "GridArrowDownwardIcon",
      "class": null
    },
    {
      "name": "columnMenuFilterIcon",
      "description": "Icon displayed in column menu for filter",
      "default": "GridFilterAltIcon",
      "class": null
    },
    {
      "name": "columnMenuManageColumnsIcon",
      "description": "Icon displayed in column menu for showing all columns",
      "default": "GridViewColumnIcon",
      "class": null
    },
    {
      "name": "columnMenuClearIcon",
      "description": "Icon displayed in column menu for clearing values",
      "default": "GridClearIcon",
      "class": null
    },
    {
      "name": "loadIcon",
      "description": "Icon displayed on the input while processing.",
      "default": "GridLoadIcon",
      "class": null
    },
    {
      "name": "columnReorderIcon",
      "description": "Icon displayed on the column reorder button.",
      "default": "GridDragIcon",
      "class": null
    },
    {
      "name": "menuItemCheckIcon",
      "description": "Icon displayed to indicate that a menu item is selected.",
      "default": "GridCheckIcon",
      "class": null
    },
    {
      "name": "columnMenuPinLeftIcon",
      "description": "Icon displayed in column menu for left pinning",
      "default": "GridPushPinLeftIcon",
      "class": null
    },
    {
      "name": "columnMenuPinRightIcon",
      "description": "Icon displayed in column menu for right pinning",
      "default": "GridPushPinRightIcon",
      "class": null
    }
  ],
  "classes": [
    {
      "key": "actionsCell",
      "className": "MuiDataGridPro-actionsCell",
      "description": "Styles applied to the root element of the cell with type=\"actions\".",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader",
      "className": "MuiDataGridPro-aggregationColumnHeader",
      "description": "Styles applied to the root element of the column header when aggregated.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader--alignCenter",
      "className": "MuiDataGridPro-aggregationColumnHeader--alignCenter",
      "description": "Styles applied to the root element of the header when aggregation if `headerAlign=\"center\"`.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader--alignLeft",
      "className": "MuiDataGridPro-aggregationColumnHeader--alignLeft",
      "description": "Styles applied to the root element of the header when aggregation if `headerAlign=\"left\"`.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader--alignRight",
      "className": "MuiDataGridPro-aggregationColumnHeader--alignRight",
      "description": "Styles applied to the root element of the header when aggregation if `headerAlign=\"right\"`.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeaderLabel",
      "className": "MuiDataGridPro-aggregationColumnHeaderLabel",
      "description": "Styles applied to the aggregation label in the column header when aggregated.",
      "isGlobal": false
    },
    {
      "key": "autoHeight",
      "className": "MuiDataGridPro-autoHeight",
      "description": "Styles applied to the root element if `autoHeight={true}`.",
      "isGlobal": false
    },
    {
      "key": "autosizing",
      "className": "MuiDataGridPro-autosizing",
      "description": "Styles applied to the root element while it is being autosized.",
      "isGlobal": false
    },
    {
      "key": "booleanCell",
      "className": "MuiDataGridPro-booleanCell",
      "description": "Styles applied to the icon of the boolean cell.",
      "isGlobal": false
    },
    {
      "key": "cell--editable",
      "className": "MuiDataGridPro-cell--editable",
      "description": "Styles applied to the cell element if the cell is editable.",
      "isGlobal": false
    },
    {
      "key": "cell--editing",
      "className": "MuiDataGridPro-cell--editing",
      "description": "Styles applied to the cell element if the cell is in edit mode.",
      "isGlobal": false
    },
    {
      "key": "cell--flex",
      "className": "MuiDataGridPro-cell--flex",
      "description": "Styles applied to the cell element in flex display mode.",
      "isGlobal": false
    },
    {
      "key": "cell--pinnedLeft",
      "className": "MuiDataGridPro-cell--pinnedLeft",
      "description": "Styles applied to the cell element if it is pinned to the left.",
      "isGlobal": false
    },
    {
      "key": "cell--pinnedRight",
      "className": "MuiDataGridPro-cell--pinnedRight",
      "description": "Styles applied to the cell element if it is pinned to the right.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeBottom",
      "className": "MuiDataGridPro-cell--rangeBottom",
      "description": "Styles applied to the cell element if it is at the bottom edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeLeft",
      "className": "MuiDataGridPro-cell--rangeLeft",
      "description": "Styles applied to the cell element if it is at the left edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeRight",
      "className": "MuiDataGridPro-cell--rangeRight",
      "description": "Styles applied to the cell element if it is at the right edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeTop",
      "className": "MuiDataGridPro-cell--rangeTop",
      "description": "Styles applied to the cell element if it is at the top edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--selectionMode",
      "className": "MuiDataGridPro-cell--selectionMode",
      "description": "Styles applied to the cell element if it is in a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--textCenter",
      "className": "MuiDataGridPro-cell--textCenter",
      "description": "Styles applied to the cell element if `align=\"center\"`.",
      "isGlobal": false
    },
    {
      "key": "cell--textLeft",
      "className": "MuiDataGridPro-cell--textLeft",
      "description": "Styles applied to the cell element if `align=\"left\"`.",
      "isGlobal": false
    },
    {
      "key": "cell--textRight",
      "className": "MuiDataGridPro-cell--textRight",
      "description": "Styles applied to the cell element if `align=\"right\"`.",
      "isGlobal": false
    },
    {
      "key": "cell--withLeftBorder",
      "className": "MuiDataGridPro-cell--withLeftBorder",
      "description": "Styles applied the cell if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    },
    {
      "key": "cell--withRightBorder",
      "className": "MuiDataGridPro-cell--withRightBorder",
      "description": "Styles applied the cell if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    },
    {
      "key": "cellCheckbox",
      "className": "MuiDataGridPro-cellCheckbox",
      "description": "Styles applied to the cell checkbox element.",
      "isGlobal": false
    },
    {
      "key": "cellEmpty",
      "className": "MuiDataGridPro-cellEmpty",
      "description": "Styles applied to the empty cell element.",
      "isGlobal": false
    },
    {
      "key": "cellSkeleton",
      "className": "MuiDataGridPro-cellSkeleton",
      "description": "Styles applied to the skeleton cell element.",
      "isGlobal": false
    },
    {
      "key": "checkboxInput",
      "className": "MuiDataGridPro-checkboxInput",
      "description": "Styles applied to the selection checkbox element.",
      "isGlobal": false
    },
    {
      "key": "columnHeader",
      "className": "MuiDataGridPro-columnHeader",
      "description": "Styles applied to the column header element.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--alignCenter",
      "className": "MuiDataGridPro-columnHeader--alignCenter",
      "description": "Styles applied to the column header if `headerAlign=\"center\"`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--alignLeft",
      "className": "MuiDataGridPro-columnHeader--alignLeft",
      "description": "Styles applied to the column header if `headerAlign=\"left\"`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--alignRight",
      "className": "MuiDataGridPro-columnHeader--alignRight",
      "description": "Styles applied to the column header if `headerAlign=\"right\"`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--dragging",
      "className": "MuiDataGridPro-columnHeader--dragging",
      "description": "Styles applied to the floating column header element when it is dragged.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--emptyGroup",
      "className": "MuiDataGridPro-columnHeader--emptyGroup",
      "description": "Styles applied to the empty column group header cell.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--filledGroup",
      "className": "MuiDataGridPro-columnHeader--filledGroup",
      "description": "Styles applied to the column group header cell if not empty.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--filter",
      "className": "MuiDataGridPro-columnHeader--filter",
      "description": "Styles applied to the header filter cell.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--filtered",
      "className": "MuiDataGridPro-columnHeader--filtered",
      "description": "Styles applied to the column header if the column has a filter applied to it.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--last",
      "className": "MuiDataGridPro-columnHeader--last",
      "description": "Styles applied to the last column header element.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--moving",
      "className": "MuiDataGridPro-columnHeader--moving",
      "description": "Styles applied to the column header if it is being dragged.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--numeric",
      "className": "MuiDataGridPro-columnHeader--numeric",
      "description": "Styles applied to the column header if the type of the column is `number`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--pinnedLeft",
      "className": "MuiDataGridPro-columnHeader--pinnedLeft",
      "description": "",
      "isGlobal": false
    },
    {
      "key": "columnHeader--pinnedRight",
      "className": "MuiDataGridPro-columnHeader--pinnedRight",
      "description": "",
      "isGlobal": false
    },
    {
      "key": "columnHeader--sortable",
      "className": "MuiDataGridPro-columnHeader--sortable",
      "description": "Styles applied to the column header if the column is sortable.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--sorted",
      "className": "MuiDataGridPro-columnHeader--sorted",
      "description": "Styles applied to the column header if the column is sorted.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--withLeftBorder",
      "className": "MuiDataGridPro-columnHeader--withLeftBorder",
      "description": "",
      "isGlobal": false
    },
    {
      "key": "columnHeader--withRightBorder",
      "className": "MuiDataGridPro-columnHeader--withRightBorder",
      "description": "Styles applied the column header if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderCheckbox",
      "className": "MuiDataGridPro-columnHeaderCheckbox",
      "description": "Styles applied to the header checkbox cell element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderDraggableContainer",
      "className": "MuiDataGridPro-columnHeaderDraggableContainer",
      "description": "Styles applied to the column header's draggable container element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderFilterInput",
      "className": "MuiDataGridPro-columnHeaderFilterInput",
      "description": "Styles applied to the header filter input element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderFilterOperatorLabel",
      "className": "MuiDataGridPro-columnHeaderFilterOperatorLabel",
      "description": "Styles applied to the header filter operator label element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderTitle",
      "className": "MuiDataGridPro-columnHeaderTitle",
      "description": "Styles applied to the column header's title element;",
      "isGlobal": false
    },
    {
      "key": "columnHeaderTitleContainer",
      "className": "MuiDataGridPro-columnHeaderTitleContainer",
      "description": "Styles applied to the column header's title container element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderTitleContainerContent",
      "className": "MuiDataGridPro-columnHeaderTitleContainerContent",
      "description": "Styles applied to the column header's title excepted buttons.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator",
      "className": "MuiDataGridPro-columnSeparator",
      "description": "Styles applied to the column header separator element.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--resizable",
      "className": "MuiDataGridPro-columnSeparator--resizable",
      "description": "Styles applied to the column header separator if the column is resizable.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--resizing",
      "className": "MuiDataGridPro-columnSeparator--resizing",
      "description": "Styles applied to the column header separator if the column is being resized.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--sideLeft",
      "className": "MuiDataGridPro-columnSeparator--sideLeft",
      "description": "Styles applied to the column header separator if the side is \"left\".",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--sideRight",
      "className": "MuiDataGridPro-columnSeparator--sideRight",
      "description": "Styles applied to the column header separator if the side is \"right\".",
      "isGlobal": false
    },
    {
      "key": "columnsManagementFooter",
      "className": "MuiDataGridPro-columnsManagementFooter",
      "description": "Styles applied to the columns management footer element.",
      "isGlobal": false
    },
    {
      "key": "columnsManagementHeader",
      "className": "MuiDataGridPro-columnsManagementHeader",
      "description": "Styles applied to the columns management header element.",
      "isGlobal": false
    },
    {
      "key": "columnsManagementRow",
      "className": "MuiDataGridPro-columnsManagementRow",
      "description": "Styles applied to the columns management row element.",
      "isGlobal": false
    },
    {
      "key": "columnsManagementSearchInput",
      "className": "MuiDataGridPro-columnsManagementSearchInput",
      "description": "Styles applied to the columns management search input element.",
      "isGlobal": false
    },
    {
      "key": "container--bottom",
      "className": "MuiDataGridPro-container--bottom",
      "description": "Styles applied to the bottom container.",
      "isGlobal": false
    },
    {
      "key": "container--top",
      "className": "MuiDataGridPro-container--top",
      "description": "Styles applied to the top container.",
      "isGlobal": false
    },
    {
      "key": "detailPanel",
      "className": "MuiDataGridPro-detailPanel",
      "description": "Styles applied to the detail panel element.",
      "isGlobal": false
    },
    {
      "key": "detailPanelToggleCell",
      "className": "MuiDataGridPro-detailPanelToggleCell",
      "description": "Styles applied to the detail panel toggle cell element.",
      "isGlobal": false
    },
    {
      "key": "detailPanelToggleCell--expanded",
      "className": "MuiDataGridPro-detailPanelToggleCell--expanded",
      "description": "Styles applied to the detail panel toggle cell element if expanded.",
      "isGlobal": false
    },
    {
      "key": "editBooleanCell",
      "className": "MuiDataGridPro-editBooleanCell",
      "description": "Styles applied to root of the boolean edit component.",
      "isGlobal": false
    },
    {
      "key": "editInputCell",
      "className": "MuiDataGridPro-editInputCell",
      "description": "Styles applied to the root of the input component.",
      "isGlobal": false
    },
    {
      "key": "filterForm",
      "className": "MuiDataGridPro-filterForm",
      "description": "Styles applied to the root of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormColumnInput",
      "className": "MuiDataGridPro-filterFormColumnInput",
      "description": "Styles applied to the column input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormDeleteIcon",
      "className": "MuiDataGridPro-filterFormDeleteIcon",
      "description": "Styles applied to the delete icon of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormLogicOperatorInput",
      "className": "MuiDataGridPro-filterFormLogicOperatorInput",
      "description": "Styles applied to the link operator input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormOperatorInput",
      "className": "MuiDataGridPro-filterFormOperatorInput",
      "description": "Styles applied to the operator input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormValueInput",
      "className": "MuiDataGridPro-filterFormValueInput",
      "description": "Styles applied to the value input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterIcon",
      "className": "MuiDataGridPro-filterIcon",
      "description": "Styles applied to the filter icon element.",
      "isGlobal": false
    },
    {
      "key": "footerCell",
      "className": "MuiDataGridPro-footerCell",
      "description": "Styles applied to the root element of the cell inside a footer row.",
      "isGlobal": false
    },
    {
      "key": "footerContainer",
      "className": "MuiDataGridPro-footerContainer",
      "description": "Styles applied to the footer container element.",
      "isGlobal": false
    },
    {
      "key": "groupingCriteriaCell",
      "className": "MuiDataGridPro-groupingCriteriaCell",
      "description": "Styles applied to the root element of the grouping criteria cell",
      "isGlobal": false
    },
    {
      "key": "groupingCriteriaCellToggle",
      "className": "MuiDataGridPro-groupingCriteriaCellToggle",
      "description": "Styles applied to the toggle of the grouping criteria cell",
      "isGlobal": false
    },
    {
      "key": "headerFilterRow",
      "className": "MuiDataGridPro-headerFilterRow",
      "description": "Styles applied to the column header filter row.",
      "isGlobal": false
    },
    {
      "key": "iconButtonContainer",
      "className": "MuiDataGridPro-iconButtonContainer",
      "description": "Styles applied to the column header icon's container.",
      "isGlobal": false
    },
    {
      "key": "iconSeparator",
      "className": "MuiDataGridPro-iconSeparator",
      "description": "Styles applied to the column header separator icon element.",
      "isGlobal": false
    },
    {
      "key": "main",
      "className": "MuiDataGridPro-main",
      "description": "Styles applied to the main container element.",
      "isGlobal": false
    },
    {
      "key": "main--hasPinnedRight",
      "className": "MuiDataGridPro-main--hasPinnedRight",
      "description": "Styles applied to the main container element when it has right pinned columns.",
      "isGlobal": false
    },
    {
      "key": "menu",
      "className": "MuiDataGridPro-menu",
      "description": "Styles applied to the menu element.",
      "isGlobal": false
    },
    {
      "key": "menuIcon",
      "className": "MuiDataGridPro-menuIcon",
      "description": "Styles applied to the menu icon element.",
      "isGlobal": false
    },
    {
      "key": "menuIconButton",
      "className": "MuiDataGridPro-menuIconButton",
      "description": "Styles applied to the menu icon button element.",
      "isGlobal": false
    },
    {
      "key": "menuList",
      "className": "MuiDataGridPro-menuList",
      "description": "Styles applied to the menu list element.",
      "isGlobal": false
    },
    {
      "key": "menuOpen",
      "className": "MuiDataGridPro-menuOpen",
      "description": "Styles applied to the menu icon element if the menu is open.",
      "isGlobal": false
    },
    {
      "key": "overlay",
      "className": "MuiDataGridPro-overlay",
      "description": "Styles applied to the overlay element.",
      "isGlobal": false
    },
    {
      "key": "overlayWrapper",
      "className": "MuiDataGridPro-overlayWrapper",
      "description": "Styles applied to the overlay wrapper element.",
      "isGlobal": false
    },
    {
      "key": "overlayWrapperInner",
      "className": "MuiDataGridPro-overlayWrapperInner",
      "description": "Styles applied to the overlay wrapper inner element.",
      "isGlobal": false
    },
    {
      "key": "panelContent",
      "className": "MuiDataGridPro-panelContent",
      "description": "Styles applied to the panel content element.",
      "isGlobal": false
    },
    {
      "key": "panelFooter",
      "className": "MuiDataGridPro-panelFooter",
      "description": "Styles applied to the panel footer element.",
      "isGlobal": false
    },
    {
      "key": "panelHeader",
      "className": "MuiDataGridPro-panelHeader",
      "description": "Styles applied to the panel header element.",
      "isGlobal": false
    },
    {
      "key": "panelWrapper",
      "className": "MuiDataGridPro-panelWrapper",
      "description": "Styles applied to the panel wrapper element.",
      "isGlobal": false
    },
    {
      "key": "paper",
      "className": "MuiDataGridPro-paper",
      "description": "Styles applied to the paper element.",
      "isGlobal": false
    },
    {
      "key": "pinnedColumns",
      "className": "MuiDataGridPro-pinnedColumns",
      "description": "Styles applied to the pinned columns.",
      "isGlobal": false
    },
    {
      "key": "pinnedRows",
      "className": "MuiDataGridPro-pinnedRows",
      "description": "Styles applied to the pinned rows container.",
      "isGlobal": false
    },
    {
      "key": "pinnedRows--bottom",
      "className": "MuiDataGridPro-pinnedRows--bottom",
      "description": "Styles applied to the bottom pinned rows container.",
      "isGlobal": false
    },
    {
      "key": "pinnedRows--top",
      "className": "MuiDataGridPro-pinnedRows--top",
      "description": "Styles applied to the top pinned rows container.",
      "isGlobal": false
    },
    {
      "key": "pinnedRowsRenderZone",
      "className": "MuiDataGridPro-pinnedRowsRenderZone",
      "description": "Styles applied to pinned rows render zones.",
      "isGlobal": false
    },
    {
      "key": "root",
      "className": "MuiDataGridPro-root",
      "description": "Styles applied to the root element.",
      "isGlobal": false
    },
    {
      "key": "root--densityComfortable",
      "className": "MuiDataGridPro-root--densityComfortable",
      "description": "Styles applied to the root element if density is \"comfortable\".",
      "isGlobal": false
    },
    {
      "key": "root--densityCompact",
      "className": "MuiDataGridPro-root--densityCompact",
      "description": "Styles applied to the root element if density is \"compact\".",
      "isGlobal": false
    },
    {
      "key": "root--densityStandard",
      "className": "MuiDataGridPro-root--densityStandard",
      "description": "Styles applied to the root element if density is \"standard\" (default).",
      "isGlobal": false
    },
    {
      "key": "root--disableUserSelection",
      "className": "MuiDataGridPro-root--disableUserSelection",
      "description": "Styles applied to the root element when user selection is disabled.",
      "isGlobal": false
    },
    {
      "key": "row--detailPanelExpanded",
      "className": "MuiDataGridPro-row--detailPanelExpanded",
      "description": "Styles applied to the row if its detail panel is open.",
      "isGlobal": false
    },
    {
      "key": "row--dragging",
      "className": "MuiDataGridPro-row--dragging",
      "description": "Styles applied to the floating special row reorder cell element when it is dragged.",
      "isGlobal": false
    },
    {
      "key": "row--dynamicHeight",
      "className": "MuiDataGridPro-row--dynamicHeight",
      "description": "Styles applied to the row if it has dynamic row height.",
      "isGlobal": false
    },
    {
      "key": "row--editable",
      "className": "MuiDataGridPro-row--editable",
      "description": "Styles applied to the row element if the row is editable.",
      "isGlobal": false
    },
    {
      "key": "row--editing",
      "className": "MuiDataGridPro-row--editing",
      "description": "Styles applied to the row element if the row is in edit mode.",
      "isGlobal": false
    },
    {
      "key": "row--firstVisible",
      "className": "MuiDataGridPro-row--firstVisible",
      "description": "Styles applied to the first visible row element on every page of the grid.",
      "isGlobal": false
    },
    {
      "key": "row--lastVisible",
      "className": "MuiDataGridPro-row--lastVisible",
      "description": "Styles applied to the last visible row element on every page of the grid.",
      "isGlobal": false
    },
    {
      "key": "rowCount",
      "className": "MuiDataGridPro-rowCount",
      "description": "Styles applied to the footer row count element to show the total number of rows.\nOnly works when pagination is disabled.",
      "isGlobal": false
    },
    {
      "key": "rowReorderCell",
      "className": "MuiDataGridPro-rowReorderCell",
      "description": "Styles applied to the root element of the row reorder cell",
      "isGlobal": false
    },
    {
      "key": "rowReorderCell--draggable",
      "className": "MuiDataGridPro-rowReorderCell--draggable",
      "description": "Styles applied to the root element of the row reorder cell when dragging is allowed",
      "isGlobal": false
    },
    {
      "key": "rowReorderCellContainer",
      "className": "MuiDataGridPro-rowReorderCellContainer",
      "description": "Styles applied to the row reorder cell container element.",
      "isGlobal": false
    },
    {
      "key": "rowReorderCellPlaceholder",
      "className": "MuiDataGridPro-rowReorderCellPlaceholder",
      "description": "Styles applied to the row's draggable placeholder element inside the special row reorder cell.",
      "isGlobal": false
    },
    {
      "key": "rowSkeleton",
      "className": "MuiDataGridPro-rowSkeleton",
      "description": "Styles applied to the skeleton row element.",
      "isGlobal": false
    },
    {
      "key": "scrollArea",
      "className": "MuiDataGridPro-scrollArea",
      "description": "Styles applied to both scroll area elements.",
      "isGlobal": false
    },
    {
      "key": "scrollArea--left",
      "className": "MuiDataGridPro-scrollArea--left",
      "description": "Styles applied to the left scroll area element.",
      "isGlobal": false
    },
    {
      "key": "scrollArea--right",
      "className": "MuiDataGridPro-scrollArea--right",
      "description": "Styles applied to the right scroll area element.",
      "isGlobal": false
    },
    {
      "key": "scrollbar",
      "className": "MuiDataGridPro-scrollbar",
      "description": "Styles applied to the scrollbars.",
      "isGlobal": false
    },
    {
      "key": "scrollbar--horizontal",
      "className": "MuiDataGridPro-scrollbar--horizontal",
      "description": "Styles applied to the horizontal scrollbar.",
      "isGlobal": false
    },
    {
      "key": "scrollbar--vertical",
      "className": "MuiDataGridPro-scrollbar--vertical",
      "description": "Styles applied to the horizontal scrollbar.",
      "isGlobal": false
    },
    {
      "key": "selectedRowCount",
      "className": "MuiDataGridPro-selectedRowCount",
      "description": "Styles applied to the footer selected row count element.",
      "isGlobal": false
    },
    {
      "key": "sortIcon",
      "className": "MuiDataGridPro-sortIcon",
      "description": "Styles applied to the sort icon element.",
      "isGlobal": false
    },
    {
      "key": "toolbarContainer",
      "className": "MuiDataGridPro-toolbarContainer",
      "description": "Styles applied to the toolbar container element.",
      "isGlobal": false
    },
    {
      "key": "toolbarFilterList",
      "className": "MuiDataGridPro-toolbarFilterList",
      "description": "Styles applied to the toolbar filter list element.",
      "isGlobal": false
    },
    {
      "key": "toolbarPromptControl",
      "className": "MuiDataGridPro-toolbarPromptControl",
      "description": "Styles applied to the toolbar prompt control element.",
      "isGlobal": false
    },
    {
      "key": "toolbarPromptControl--recording",
      "className": "MuiDataGridPro-toolbarPromptControl--recording",
      "description": "Styles applied to the toolbar prompt control element when recording.",
      "isGlobal": false
    },
    {
      "key": "toolbarPromptControlRecordButton",
      "className": "MuiDataGridPro-toolbarPromptControlRecordButton",
      "description": "Styles applied to the toolbar prompt control record button element.",
      "isGlobal": false
    },
    {
      "key": "toolbarPromptControlRecordingIndicator",
      "className": "MuiDataGridPro-toolbarPromptControlRecordingIndicator",
      "description": "Styles applied to the toolbar prompt control recording indicator element.",
      "isGlobal": false
    },
    {
      "key": "toolbarPromptControlSendButton",
      "className": "MuiDataGridPro-toolbarPromptControlSendButton",
      "description": "Styles applied to the toolbar prompt control send button element.",
      "isGlobal": false
    },
    {
      "key": "treeDataGroupingCell",
      "className": "MuiDataGridPro-treeDataGroupingCell",
      "description": "Styles applied to the root of the grouping column of the tree data.",
      "isGlobal": false
    },
    {
      "key": "treeDataGroupingCellToggle",
      "className": "MuiDataGridPro-treeDataGroupingCellToggle",
      "description": "Styles applied to the toggle of the grouping cell of the tree data.",
      "isGlobal": false
    },
    {
      "key": "virtualScroller",
      "className": "MuiDataGridPro-virtualScroller",
      "description": "Styles applied to the virtualization container.",
      "isGlobal": false
    },
    {
      "key": "virtualScrollerContent",
      "className": "MuiDataGridPro-virtualScrollerContent",
      "description": "Styles applied to the virtualization content.",
      "isGlobal": false
    },
    {
      "key": "virtualScrollerContent--overflowed",
      "className": "MuiDataGridPro-virtualScrollerContent--overflowed",
      "description": "Styles applied to the virtualization content when its height is bigger than the virtualization container.",
      "isGlobal": false
    },
    {
      "key": "virtualScrollerRenderZone",
      "className": "MuiDataGridPro-virtualScrollerRenderZone",
      "description": "Styles applied to the virtualization render zone.",
      "isGlobal": false
    },
    {
      "key": "withBorderColor",
      "className": "MuiDataGridPro-withBorderColor",
      "description": "Styles applied to cells, column header and other elements that have border.\nSets border color only.",
      "isGlobal": false
    },
    {
      "key": "withVerticalBorder",
      "className": "MuiDataGridPro-withVerticalBorder",
      "description": "Styles applied the grid if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    }
  ],
  "muiName": "MuiDataGridPro",
  "forwardsRefTo": "GridRoot",
  "filename": "/packages/x-data-grid-pro/src/DataGridPro/DataGridPro.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-data-grid/#mit-version-free-forever\">DataGrid</a></li>\n<li><a href=\"/x/react-data-grid/#pro-plan\">DataGridPro</a></li>\n<li><a href=\"/x/react-data-grid/#premium-plan\">DataGridPremium</a></li></ul>",
  "cssComponent": false
}
