{
  "props": {
    "autoFocus": { "type": { "name": "bool" } },
    "classes": { "type": { "name": "object" }, "additionalInfo": { "cssApi": true } },
    "dayOfWeekFormatter": {
      "type": { "name": "func" },
      "default": "(date: PickerValidDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()",
      "signature": {
        "type": "function(date: PickerValidDate) => string",
        "describedArgs": ["date"],
        "returned": "string"
      }
    },
    "defaultValue": { "type": { "name": "object" } },
    "disabled": { "type": { "name": "bool" }, "default": "false" },
    "disableFuture": { "type": { "name": "bool" }, "default": "false" },
    "disableHighlightToday": { "type": { "name": "bool" }, "default": "false" },
    "disablePast": { "type": { "name": "bool" }, "default": "false" },
    "displayWeekNumber": { "type": { "name": "bool" } },
    "fixedWeekNumber": { "type": { "name": "number" } },
    "focusedView": {
      "type": {
        "name": "enum",
        "description": "'day'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'year'"
      }
    },
    "loading": { "type": { "name": "bool" }, "default": "false" },
    "maxDate": { "type": { "name": "object" }, "default": "2099-12-31" },
    "minDate": { "type": { "name": "object" }, "default": "1900-01-01" },
    "monthsPerRow": {
      "type": { "name": "enum", "description": "3<br>&#124;&nbsp;4" },
      "default": "3"
    },
    "onChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(value: TValue, selectionState: PickerSelectionState | undefined, selectedView: TView | undefined) => void",
        "describedArgs": ["value", "selectionState", "selectedView"]
      }
    },
    "onFocusedViewChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(view: TView, hasFocus: boolean) => void",
        "describedArgs": ["view", "hasFocus"]
      }
    },
    "onMonthChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(month: PickerValidDate) => void",
        "describedArgs": ["month"]
      }
    },
    "onViewChange": {
      "type": { "name": "func" },
      "signature": { "type": "function(view: TView) => void", "describedArgs": ["view"] }
    },
    "onYearChange": {
      "type": { "name": "func" },
      "signature": { "type": "function(year: PickerValidDate) => void", "describedArgs": ["year"] }
    },
    "openTo": {
      "type": {
        "name": "enum",
        "description": "'day'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'year'"
      }
    },
    "readOnly": { "type": { "name": "bool" }, "default": "false" },
    "reduceAnimations": {
      "type": { "name": "bool" },
      "default": "`@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13"
    },
    "referenceDate": {
      "type": { "name": "object" },
      "default": "The closest valid date using the validation props, except callbacks such as `shouldDisableDate`."
    },
    "renderLoading": {
      "type": { "name": "func" },
      "default": "() => <span>...</span>",
      "signature": {
        "type": "function() => React.ReactNode",
        "describedArgs": [],
        "returned": "React.ReactNode"
      }
    },
    "shouldDisableDate": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(day: PickerValidDate) => boolean",
        "describedArgs": ["day"],
        "returned": "boolean"
      }
    },
    "shouldDisableMonth": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(month: PickerValidDate) => boolean",
        "describedArgs": ["month"],
        "returned": "boolean"
      }
    },
    "shouldDisableYear": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(year: PickerValidDate) => boolean",
        "describedArgs": ["year"],
        "returned": "boolean"
      }
    },
    "showDaysOutsideCurrentMonth": { "type": { "name": "bool" }, "default": "false" },
    "slotProps": { "type": { "name": "object" }, "default": "{}" },
    "slots": {
      "type": { "name": "object" },
      "default": "{}",
      "additionalInfo": { "slotsApi": true }
    },
    "sx": {
      "type": {
        "name": "union",
        "description": "Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"
      },
      "additionalInfo": { "sx": true }
    },
    "timezone": {
      "type": { "name": "string" },
      "default": "The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.",
      "seeMoreLink": {
        "url": "https://mui.com/x/react-date-pickers/timezone/",
        "text": "timezones documentation"
      }
    },
    "value": { "type": { "name": "object" } },
    "view": {
      "type": {
        "name": "enum",
        "description": "'day'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'year'"
      }
    },
    "views": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;'day'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'year'&gt;"
      }
    },
    "yearsOrder": {
      "type": { "name": "enum", "description": "'asc'<br>&#124;&nbsp;'desc'" },
      "default": "'asc'"
    },
    "yearsPerRow": {
      "type": { "name": "enum", "description": "3<br>&#124;&nbsp;4" },
      "default": "3"
    }
  },
  "name": "DateCalendar",
  "imports": [
    "import { DateCalendar } from '@mui/x-date-pickers/DateCalendar';",
    "import { DateCalendar } from '@mui/x-date-pickers';",
    "import { DateCalendar } from '@mui/x-date-pickers-pro';"
  ],
  "slots": [
    {
      "name": "calendarHeader",
      "description": "Custom component for calendar header.\nCheck the [PickersCalendarHeader](https://mui.com/x/api/date-pickers/pickers-calendar-header/) component.",
      "default": "PickersCalendarHeader",
      "class": null
    },
    {
      "name": "day",
      "description": "Custom component for day.\nCheck the [PickersDay](https://mui.com/x/api/date-pickers/pickers-day/) component.",
      "default": "PickersDay",
      "class": null
    },
    {
      "name": "leftArrowIcon",
      "description": "Icon displayed in the left view switch button.",
      "default": "ArrowLeft",
      "class": null
    },
    {
      "name": "monthButton",
      "description": "Button displayed to render a single month in the `month` view.",
      "default": "MonthCalendarButton",
      "class": null
    },
    {
      "name": "nextIconButton",
      "description": "Button allowing to switch to the right view.",
      "default": "IconButton",
      "class": null
    },
    {
      "name": "previousIconButton",
      "description": "Button allowing to switch to the left view.",
      "default": "IconButton",
      "class": null
    },
    {
      "name": "rightArrowIcon",
      "description": "Icon displayed in the right view switch button.",
      "default": "ArrowRight",
      "class": null
    },
    {
      "name": "switchViewButton",
      "description": "Button displayed to switch between different calendar views.",
      "default": "IconButton",
      "class": null
    },
    {
      "name": "switchViewIcon",
      "description": "Icon displayed in the SwitchViewButton. Rotated by 180Â° when the open view is `year`.",
      "default": "ArrowDropDown",
      "class": null
    },
    {
      "name": "yearButton",
      "description": "Button displayed to render a single year in the `year` view.",
      "default": "YearCalendarButton",
      "class": null
    }
  ],
  "classes": [
    {
      "key": "root",
      "className": "MuiDateCalendar-root",
      "description": "Styles applied to the root element.",
      "isGlobal": false
    },
    {
      "key": "viewTransitionContainer",
      "className": "MuiDateCalendar-viewTransitionContainer",
      "description": "Styles applied to the transition group element.",
      "isGlobal": false
    }
  ],
  "spread": true,
  "themeDefaultProps": true,
  "muiName": "MuiDateCalendar",
  "forwardsRefTo": "HTMLDivElement",
  "filename": "/packages/x-date-pickers/src/DateCalendar/DateCalendar.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-date-pickers/custom-components/\">Custom slots and subcomponents</a></li>\n<li><a href=\"/x/react-date-pickers/date-calendar/\">Date Calendar</a></li>\n<li><a href=\"/x/react-date-pickers/date-picker/\">Date Picker</a></li>\n<li><a href=\"/x/react-date-pickers/validation/\">Date and Time Pickers - Validation</a></li></ul>",
  "cssComponent": false
}
