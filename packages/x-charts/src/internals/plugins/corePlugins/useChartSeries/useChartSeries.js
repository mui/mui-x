"use strict";
'use client';
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useChartSeries = void 0;
var React = require("react");
var colorPalettes_1 = require("../../../../colorPalettes");
var processSeries_1 = require("./processSeries");
var useChartSeries = function (_a) {
    var params = _a.params, store = _a.store, seriesConfig = _a.seriesConfig;
    var series = params.series, dataset = params.dataset, theme = params.theme, colors = params.colors;
    // The effect do not track any value defined synchronously during the 1st render by hooks called after `useChartSeries`
    // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one
    var isFirstRender = React.useRef(true);
    React.useEffect(function () {
        if (isFirstRender.current) {
            isFirstRender.current = false;
            return;
        }
        store.update(function (prev) { return (__assign(__assign({}, prev), { series: __assign(__assign({}, prev.series), { processedSeries: (0, processSeries_1.preprocessSeries)({
                    series: series,
                    colors: typeof colors === 'function' ? colors(theme) : colors,
                    seriesConfig: seriesConfig,
                    dataset: dataset,
                }) }) })); });
    }, [colors, dataset, series, theme, seriesConfig, store]);
    return {};
};
exports.useChartSeries = useChartSeries;
exports.useChartSeries.params = {
    dataset: true,
    series: true,
    colors: true,
    theme: true,
};
var EMPTY_ARRAY = [];
exports.useChartSeries.getDefaultizedParams = function (_a) {
    var _b, _c, _d;
    var params = _a.params;
    return (__assign(__assign({}, params), { series: ((_b = params.series) === null || _b === void 0 ? void 0 : _b.length) ? params.series : EMPTY_ARRAY, colors: (_c = params.colors) !== null && _c !== void 0 ? _c : colorPalettes_1.rainbowSurgePalette, theme: (_d = params.theme) !== null && _d !== void 0 ? _d : 'light' }));
};
exports.useChartSeries.getInitialState = function (_a, _, seriesConfig) {
    var _b = _a.series, series = _b === void 0 ? [] : _b, colors = _a.colors, theme = _a.theme, dataset = _a.dataset;
    return {
        series: {
            seriesConfig: seriesConfig,
            processedSeries: (0, processSeries_1.preprocessSeries)({
                series: series,
                colors: typeof colors === 'function' ? colors(theme) : colors,
                seriesConfig: seriesConfig,
                dataset: dataset,
            }),
        },
    };
};
