diff --git a/dist/inlineresources.allinone.js b/dist/inlineresources.allinone.js
index e11e5230e3c4750c25c0a0ff753543b55ceff875..fc9811d1019f24f3a74805d6755338f97d861715 100644
--- a/dist/inlineresources.allinone.js
+++ b/dist/inlineresources.allinone.js
@@ -1,8 +1,7 @@
-/*! inlineresources - v1.0.0 - 2020-10-25
+/*! inlineresources - v1.0.1 - 2025-10-28
 * http://www.github.com/cburgmer/inlineresources
-* Copyright (c) 2020 Christoph Burgmer; Licensed MIT */
+* Copyright (c) 2025 Christoph Burgmer; Licensed MIT */
 /* Integrated dependencies:
  * url (MIT License),
  * css-font-face-src (BSD License) */
-
-!function(t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).inlineresources=t()}(function(){return function n(o,s,a){function u(e,t){if(!s[e]){if(!o[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(i)return i(e,!0);throw(r=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",r}r=s[e]={exports:{}},o[e][0].call(r.exports,function(t){return u(o[e][1][t]||t)},r,r.exports,n,o,s,a)}return s[e].exports}for(var i="function"==typeof require&&require,t=0;t<a.length;t++)u(a[t]);return u}({1:[function(c,r,n){(function(e){!function(t){"object"==typeof n&&void 0!==r?r.exports=t():("undefined"!=typeof window?window:void 0!==e?e:"undefined"!=typeof self?self:this).cssFontFaceSrc=t()}(function(){return function n(o,s,a){function u(r,t){if(!s[r]){if(!o[r]){var e="function"==typeof c&&c;if(!t&&e)return e(r,!0);if(i)return i(r,!0);e=new Error("Cannot find module '"+r+"'");throw e.code="MODULE_NOT_FOUND",e}e=s[r]={exports:{}};o[r][0].call(e.exports,function(t){var e=o[r][1][t];return u(e||t)},e,e.exports,n,o,s,a)}return s[r].exports}for(var i="function"==typeof c&&c,t=0;t<a.length;t++)u(a[t]);return u}({1:[function(H,t,e){"use strict";function K(t,e,r,n){this.message=t,this.expected=e,this.found=r,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,K)}function r(){this.constructor=n}var n,o;n=K,o=Error,r.prototype=o.prototype,n.prototype=new r,K.buildMessage=function(t,e){var r,s={literal:function(t){return'"'+o(t.text)+'"'},class:function(t){for(var e="",r=0;r<t.parts.length;r++)e+=t.parts[r]instanceof Array?a(t.parts[r][0])+"-"+a(t.parts[r][1]):a(t.parts[r]);return"["+(t.inverted?"^":"")+e+"]"},any:function(t){return"any character"},end:function(t){return"end of input"},other:function(t){return t.description}};function n(t){return t.charCodeAt(0).toString(16).toUpperCase()}function o(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(t){return"\\x0"+n(t)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(t){return"\\x"+n(t)})}function a(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(t){return"\\x0"+n(t)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(t){return"\\x"+n(t)})}return"Expected "+function(t){for(var e,r,n=new Array(t.length),o=0;o<t.length;o++)n[o]=(r=t[o],s[r.type](r));if(n.sort(),0<n.length){for(e=o=1;o<n.length;o++)n[o-1]!==n[o]&&(n[e]=n[o],e++);n.length=e}switch(n.length){case 1:return n[0];case 2:return n[0]+" or "+n[1];default:return n.slice(0,-1).join(", ")+", or "+n[n.length-1]}}(t)+" but "+((r=e)?'"'+o(r)+'"':"end of input")+" found."},t.exports={SyntaxError:K,parse:function(u,t){var i={},e={start:L},r=L,n="",o=function(){return[]},c=",",l=T(",",!1),h=function(t,e){return[t].concat(e)},f=function(t){return[t]},s=function(t,e){return{url:t,format:e}},a=function(t){return{url:t}},p="url(",g=T("url(",!1),m=")",d=T(")",!1),y=function(t){return t},v="format(",b=T("format(",!1),x="local(",w=T("local(",!1),C=function(t){return{local:t}},A=/^[^)]/,R=k([")"],!0,!1),U=function(t){return M.extractValue(t.join(""))},j=/^[ \t\r\n\f]/,S=k([" ","\t","\r","\n","\f"],!1,!1),O=0,E=[{line:1,column:1}],I=0,F=[],P=0;if("startRule"in(t=void 0!==t?t:{})){if(!(t.startRule in e))throw new Error("Can't start parsing from rule \""+t.startRule+'".');r=e[t.startRule]}function T(t,e){return{type:"literal",text:t,ignoreCase:e}}function k(t,e,r){return{type:"class",parts:t,inverted:e,ignoreCase:r}}function q(t){var e,r=E[t];if(r)return r;for(e=t-1;!E[e];)e--;for(r={line:(r=E[e]).line,column:r.column};e<t;)10===u.charCodeAt(e)?(r.line++,r.column=1):r.column++,e++;return E[t]=r}function N(t,e){var r=q(t),n=q(e);return{start:{offset:t,line:r.line,column:r.column},end:{offset:e,line:n.line,column:n.column}}}function D(t){O<I||(I<O&&(I=O,F=[]),F.push(t))}function V(t,e,r){return new K(K.buildMessage(t,e),t,e,r)}function L(){var t,e=function t(){var e,r,n,o,s,a;e=O;r=$();if(r!==i){for(n=[],o=_();o!==i;)n.push(o),o=_();if(n!==i)if(44===u.charCodeAt(O)?(o=c,O++):(o=i,0===P&&D(l)),o!==i){for(s=[],a=_();a!==i;)s.push(a),a=_();e=s!==i?(a=t())!==i?r=h(r,a):(O=e,i):(O=e,i)}else O=e,e=i;else O=e,e=i}else O=e,e=i;e===i&&(e=O,(r=$())!==i&&(r=f(r)),e=r);return e}();return e===i&&(e=O,(t=n)!==i&&(t=o()),e=t),e}function $(){var t=function(){var t,e,r,n;if(t=O,(e=B())!==i){if(r=[],(n=_())!==i)for(;n!==i;)r.push(n),n=_();else r=i;t=r!==i?(n=function(){var t,e,r,n;t=O,u.substr(O,7)===v?(e=v,O+=7):(e=i,0===P&&D(b));t=e!==i?(r=z(),r!==i?(41===u.charCodeAt(O)?(n=m,O++):(n=i,0===P&&D(d)),n!==i?e=y(r):(O=t,i)):(O=t,i)):(O=t,i);return t}())!==i?e=s(e,n):(O=t,i):(O=t,i)}else O=t,t=i;t===i&&(t=O,(e=B())!==i&&(e=a(e)),t=e);return t}();return t===i&&(t=function(){var t,e,r,n;t=O,u.substr(O,6)===x?(e=x,O+=6):(e=i,0===P&&D(w));t=e!==i?(r=z(),r!==i?(41===u.charCodeAt(O)?(n=m,O++):(n=i,0===P&&D(d)),n!==i?e=C(r):(O=t,i)):(O=t,i)):(O=t,i);return t}()),t}function B(){var t,e,r,n=O;return u.substr(O,4)===p?(t=p,O+=4):(t=i,0===P&&D(g)),n=t!==i&&(e=z())!==i?(41===u.charCodeAt(O)?(r=m,O++):(r=i,0===P&&D(d)),r!==i?t=y(e):(O=n,i)):(O=n,i)}function z(){var t,e=O,r=[];if(A.test(u.charAt(O))?(t=u.charAt(O),O++):(t=i,0===P&&D(R)),t!==i)for(;t!==i;)r.push(t),A.test(u.charAt(O))?(t=u.charAt(O),O++):(t=i,0===P&&D(R));else r=i;return r!==i&&(r=U(r)),e=r}function _(){var t;return j.test(u.charAt(O))?(t=u.charAt(O),O++):(t=i,0===P&&D(S)),t}var M=H("../util");if((r=r())!==i&&O===u.length)return r;throw r!==i&&O<u.length&&D({type:"end"}),V(F,I<u.length?u.charAt(I):null,I<u.length?N(I,I+1):N(I,I))}}},{"../util":3}],2:[function(t,e,r){var n=t("./grammar");r.SyntaxError=function(t,e){this.message=t,this.offset=e},r.parse=function(t){try{return n.parse(t)}catch(t){throw new r.SyntaxError(t.message,t.offset)}},r.serialize=function(t){return t.map(function(t){var e;return t.url?(e='url("'+t.url+'")',t.format&&(e+=' format("'+t.format+'")')):e='local("'+t.local+'")',e}).join(", ")}},{"./grammar":1}],3:[function(t,e,r){r.extractValue=function(t){return e=t.replace(/^[\t\r\f\n ]*(.+?)[\t\r\f\n ]*$/,"$1"),r=/^'(.*)'$/,(t=/^"(.*)"$/).test(e)?e.replace(t,"$1"):r.test(e)?e.replace(r,"$1"):e;var e,r}},{}]},{},[2])(2)})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(t,P,T){(function(F){!function(t){var e="object"==typeof T&&T&&!T.nodeType&&T,r="object"==typeof P&&P&&!P.nodeType&&P,n="object"==typeof F&&F;n.global!==n&&n.window!==n&&n.self!==n||(t=n);var o,s,y=2147483647,v=36,b=1,x=26,a=38,u=700,w=72,C=128,A="-",i=/^xn--/,c=/[^\x20-\x7E]/,l=/[\x2E\u3002\uFF0E\uFF61]/g,h={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},f=v-b,R=Math.floor,U=String.fromCharCode;function j(t){throw RangeError(h[t])}function p(t,e){for(var r=t.length,n=[];r--;)n[r]=e(t[r]);return n}function g(t,e){var r=t.split("@"),n="";return 1<r.length&&(n=r[0]+"@",t=r[1]),n+p((t=t.replace(l,".")).split("."),e).join(".")}function S(t){for(var e,r,n=[],o=0,s=t.length;o<s;)55296<=(e=t.charCodeAt(o++))&&e<=56319&&o<s?56320==(64512&(r=t.charCodeAt(o++)))?n.push(((1023&e)<<10)+(1023&r)+65536):(n.push(e),o--):n.push(e);return n}function m(t){return p(t,function(t){var e="";return 65535<t&&(e+=U((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+=U(t)}).join("")}function O(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function E(t,e,r){var n=0;for(t=r?R(t/u):t>>1,t+=R(t/e);f*x>>1<t;n+=v)t=R(t/f);return R(n+(f+1)*t/(t+a))}function d(t){var e,r,n,o,s,a,u,i=[],c=t.length,l=0,h=C,f=w,p=t.lastIndexOf(A);for(p<0&&(p=0),r=0;r<p;++r)128<=t.charCodeAt(r)&&j("not-basic"),i.push(t.charCodeAt(r));for(n=0<p?p+1:0;n<c;){for(o=l,s=1,a=v;c<=n&&j("invalid-input"),u=t.charCodeAt(n++),(v<=(u=u-48<10?u-22:u-65<26?u-65:u-97<26?u-97:v)||u>R((y-l)/s))&&j("overflow"),l+=u*s,!(u<(u=a<=f?b:f+x<=a?x:a-f));a+=v)s>R(y/(u=v-u))&&j("overflow"),s*=u;f=E(l-o,e=i.length+1,0==o),R(l/e)>y-h&&j("overflow"),h+=R(l/e),l%=e,i.splice(l++,0,h)}return m(i)}function I(t){for(var e,r,n,o,s,a,u,i,c,l,h,f=[],p=(t=S(t)).length,g=C,m=w,d=e=0;d<p;++d)(i=t[d])<128&&f.push(U(i));for(r=n=f.length,n&&f.push(A);r<p;){for(o=y,d=0;d<p;++d)g<=(i=t[d])&&i<o&&(o=i);for(o-g>R((y-e)/(c=r+1))&&j("overflow"),e+=(o-g)*c,g=o,d=0;d<p;++d)if((i=t[d])<g&&++e>y&&j("overflow"),i==g){for(s=e,a=v;!(s<(u=a<=m?b:m+x<=a?x:a-m));a+=v)h=s-u,l=v-u,f.push(U(O(u+h%l,0))),s=R(h/l);f.push(U(O(s,0))),m=E(e,c,r==n),e=0,++r}++e,++g}return f.join("")}if(o={version:"1.3.2",ucs2:{decode:S,encode:m},decode:d,encode:I,toASCII:function(t){return g(t,function(t){return c.test(t)?"xn--"+I(t):t})},toUnicode:function(t){return g(t,function(t){return i.test(t)?d(t.slice(4).toLowerCase()):t})}},0,e&&r)if(P.exports==e)r.exports=o;else for(s in o)o.hasOwnProperty(s)&&(e[s]=o[s]);else t.punycode=o}(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],3:[function(t,e,r){"use strict";e.exports=function(t,e,r,n){e=e||"&",r=r||"=";var o={};if("string"!=typeof t||0===t.length)return o;var s=/\+/g;t=t.split(e);e=1e3;n&&"number"==typeof n.maxKeys&&(e=n.maxKeys);var a=t.length;0<e&&e<a&&(a=e);for(var u=0;u<a;++u){var i,c=t[u].replace(s,"%20"),l=c.indexOf(r),h=0<=l?(i=c.substr(0,l),c.substr(l+1)):(i=c,""),f=decodeURIComponent(i),l=decodeURIComponent(h);c=o,h=f,Object.prototype.hasOwnProperty.call(c,h)?p(o[f])?o[f].push(l):o[f]=[o[f],l]:o[f]=l}return o};var p=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},{}],4:[function(t,e,r){"use strict";function s(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}}e.exports=function(r,n,o,t){return n=n||"&",o=o||"=",null===r&&(r=void 0),"object"==typeof r?u(i(r),function(t){var e=encodeURIComponent(s(t))+o;return a(r[t])?u(r[t],function(t){return e+encodeURIComponent(s(t))}).join(n):e+encodeURIComponent(s(r[t]))}).join(n):t?encodeURIComponent(s(t))+o+encodeURIComponent(s(r)):""};var a=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function u(t,e){if(t.map)return t.map(e);for(var r=[],n=0;n<t.length;n++)r.push(e(t[n],n));return r}var i=Object.keys||function(t){var e,r=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&r.push(e);return r}},{}],5:[function(t,e,r){"use strict";r.decode=r.parse=t("./decode"),r.encode=r.stringify=t("./encode")},{"./decode":3,"./encode":4}],6:[function(t,e,r){"use strict";var j=t("punycode"),S=t("./util");function w(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}r.parse=o,r.resolve=function(t,e){return o(t,!1,!0).resolve(e)},r.resolveObject=function(t,e){return t?o(t,!1,!0).resolveObject(e):e},r.format=function(t){S.isString(t)&&(t=o(t));return t instanceof w?t.format():w.prototype.format.call(t)},r.Url=w;var O=/^([a-z0-9.+-]+:)/i,n=/:[0-9]*$/,E=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,r=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),I=["'"].concat(r),F=["%","/","?",";","#"].concat(I),P=["/","?","#"],T=/^[+a-z0-9A-Z_-]{0,63}$/,k=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,q={javascript:!0,"javascript:":!0},N={javascript:!0,"javascript:":!0},D={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},V=t("querystring");function o(t,e,r){if(t&&S.isObject(t)&&t instanceof w)return t;var n=new w;return n.parse(t,e,r),n}w.prototype.parse=function(t,e,r){if(!S.isString(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var n=t.indexOf("?"),o=-1!==n&&n<t.indexOf("#")?"?":"#",n=t.split(o);n[0]=n[0].replace(/\\/g,"/");var s=(s=t=n.join(o)).trim();if(!r&&1===t.split("#").length){var a=E.exec(s);if(a)return this.path=s,this.href=s,this.pathname=a[1],a[2]?(this.search=a[2],this.query=e?V.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var u,a=O.exec(s);if(a&&(U=(a=a[0]).toLowerCase(),this.protocol=U,s=s.substr(a.length)),(r||a||s.match(/^\/\/[^@\/]+@[^@\/]+/))&&(!(u="//"===s.substr(0,2))||a&&N[a]||(s=s.substr(2),this.slashes=!0)),!N[a]&&(u||a&&!D[a])){for(var i=-1,c=0;c<P.length;c++)-1!==(l=s.indexOf(P[c]))&&(-1===i||l<i)&&(i=l);-1!==(w=-1===i?s.lastIndexOf("@"):s.lastIndexOf("@",i))&&(C=s.slice(0,w),s=s.slice(w+1),this.auth=decodeURIComponent(C)),i=-1;for(var l,c=0;c<F.length;c++)-1!==(l=s.indexOf(F[c]))&&(-1===i||l<i)&&(i=l);-1===i&&(i=s.length),this.host=s.slice(0,i),s=s.slice(i),this.parseHost(),this.hostname=this.hostname||"";var h="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!h)for(var f=this.hostname.split(/\./),c=0,p=f.length;c<p;c++){var g=f[c];if(g&&!g.match(T)){for(var m="",d=0,y=g.length;d<y;d++)127<g.charCodeAt(d)?m+="x":m+=g[d];if(!m.match(T)){var v=f.slice(0,c),b=f.slice(c+1),x=g.match(k);x&&(v.push(x[1]),b.unshift(x[2])),b.length&&(s="/"+b.join(".")+s),this.hostname=v.join(".");break}}}255<this.hostname.length?this.hostname="":this.hostname=this.hostname.toLowerCase(),h||(this.hostname=j.toASCII(this.hostname));var w=this.port?":"+this.port:"",C=this.hostname||"";this.host=C+w,this.href+=this.host,h&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==s[0]&&(s="/"+s))}if(!q[U])for(c=0,p=I.length;c<p;c++){var A,R=I[c];-1!==s.indexOf(R)&&((A=encodeURIComponent(R))===R&&(A=escape(R)),s=s.split(R).join(A))}h=s.indexOf("#");-1!==h&&(this.hash=s.substr(h),s=s.slice(0,h));var U,h=s.indexOf("?");return-1!==h?(this.search=s.substr(h),this.query=s.substr(h+1),e&&(this.query=V.parse(this.query)),s=s.slice(0,h)):e&&(this.search="",this.query={}),s&&(this.pathname=s),D[U]&&this.hostname&&!this.pathname&&(this.pathname="/"),(this.pathname||this.search)&&(w=this.pathname||"",U=this.search||"",this.path=w+U),this.href=this.format(),this},w.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var e=this.protocol||"",r=this.pathname||"",n=this.hash||"",o=!1,s="";this.host?o=t+this.host:this.hostname&&(o=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(o+=":"+this.port)),this.query&&S.isObject(this.query)&&Object.keys(this.query).length&&(s=V.stringify(this.query));s=this.search||s&&"?"+s||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||D[e])&&!1!==o?(o="//"+(o||""),r&&"/"!==r.charAt(0)&&(r="/"+r)):o=o||"",n&&"#"!==n.charAt(0)&&(n="#"+n),s&&"?"!==s.charAt(0)&&(s="?"+s),e+o+(r=r.replace(/[?#]/g,function(t){return encodeURIComponent(t)}))+(s=s.replace("#","%23"))+n},w.prototype.resolve=function(t){return this.resolveObject(o(t,!1,!0)).format()},w.prototype.resolveObject=function(t){S.isString(t)&&((p=new w).parse(t,!1,!0),t=p);for(var e=new w,r=Object.keys(this),n=0;n<r.length;n++){var o=r[n];e[o]=this[o]}if(e.hash=t.hash,""===t.href)return e.href=e.format(),e;if(t.slashes&&!t.protocol){for(var s=Object.keys(t),a=0;a<s.length;a++){var u=s[a];"protocol"!==u&&(e[u]=t[u])}return D[e.protocol]&&e.hostname&&!e.pathname&&(e.path=e.pathname="/"),e.href=e.format(),e}if(t.protocol&&t.protocol!==e.protocol){if(!D[t.protocol]){for(var i=Object.keys(t),c=0;c<i.length;c++){var l=i[c];e[l]=t[l]}return e.href=e.format(),e}if(e.protocol=t.protocol,t.host||N[t.protocol])e.pathname=t.pathname;else{for(var h=(t.pathname||"").split("/");h.length&&!(t.host=h.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==h[0]&&h.unshift(""),h.length<2&&h.unshift(""),e.pathname=h.join("/")}return e.search=t.search,e.query=t.query,e.host=t.host||"",e.auth=t.auth,e.hostname=t.hostname||t.host,e.port=t.port,(e.pathname||e.search)&&(g=e.pathname||"",m=e.search||"",e.path=g+m),e.slashes=e.slashes||t.slashes,e.href=e.format(),e}var f=e.pathname&&"/"===e.pathname.charAt(0),p=t.host||t.pathname&&"/"===t.pathname.charAt(0),g=p||f||e.host&&t.pathname,m=g,d=e.pathname&&e.pathname.split("/")||[],h=t.pathname&&t.pathname.split("/")||[],f=e.protocol&&!D[e.protocol];if(f&&(e.hostname="",e.port=null,e.host&&(""===d[0]?d[0]=e.host:d.unshift(e.host)),e.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===h[0]?h[0]=t.host:h.unshift(t.host)),t.host=null),g=g&&(""===h[0]||""===d[0])),p)e.host=(t.host||""===t.host?t:e).host,e.hostname=(t.hostname||""===t.hostname?t:e).hostname,e.search=t.search,e.query=t.query,d=h;else if(h.length)(d=d||[]).pop(),d=d.concat(h),e.search=t.search,e.query=t.query;else if(!S.isNullOrUndefined(t.search))return f&&(e.hostname=e.host=d.shift(),(x=!!(e.host&&0<e.host.indexOf("@"))&&e.host.split("@"))&&(e.auth=x.shift(),e.host=e.hostname=x.shift())),e.search=t.search,e.query=t.query,S.isNull(e.pathname)&&S.isNull(e.search)||(e.path=(e.pathname||"")+(e.search||"")),e.href=e.format(),e;if(!d.length)return e.pathname=null,e.search?e.path="/"+e.search:e.path=null,e.href=e.format(),e;for(var y=d.slice(-1)[0],p=(e.host||t.host||1<d.length)&&("."===y||".."===y)||""===y,v=0,b=d.length;0<=b;b--)"."===(y=d[b])?d.splice(b,1):".."===y?(d.splice(b,1),v++):v&&(d.splice(b,1),v--);if(!g&&!m)for(;v--;)d.unshift("..");!g||""===d[0]||d[0]&&"/"===d[0].charAt(0)||d.unshift(""),p&&"/"!==d.join("/").substr(-1)&&d.push("");var x,p=""===d[0]||d[0]&&"/"===d[0].charAt(0);return f&&(e.hostname=e.host=!p&&d.length?d.shift():"",(x=!!(e.host&&0<e.host.indexOf("@"))&&e.host.split("@"))&&(e.auth=x.shift(),e.host=e.hostname=x.shift())),(g=g||e.host&&d.length)&&!p&&d.unshift(""),d.length?e.pathname=d.join("/"):(e.pathname=null,e.path=null),S.isNull(e.pathname)&&S.isNull(e.search)||(e.path=(e.pathname||"")+(e.search||"")),e.auth=t.auth||e.auth,e.slashes=e.slashes||t.slashes,e.href=e.format(),e},w.prototype.parseHost=function(){var t=this.host,e=n.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)}},{"./util":7,punycode:2,querystring:5}],7:[function(t,e,r){"use strict";e.exports={isString:function(t){return"string"==typeof t},isObject:function(t){return"object"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}}},{}],8:[function(t,e,r){"use strict";var n=t("./cssSupport");r.extractCssUrl=function(t){var e=/^url\(("[^"]+"|'[^']+'|[^\)]+)\)/;if(!e.test(t))throw new Error("Invalid url");return t=e.exec(t)[1],n.unquoteString(t.replace(/^[\t\r\f\n ]*(.+?)[\t\r\f\n ]*$/,"$1"))};r.parse=function(t){return function(t){var e,o="(url\\(\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*\\)|[^,\\s]+)",r="(?:\\s*"+o+")+",n=new RegExp(r,"g"),s=[];if(t.match(new RegExp("^\\s*((?:\\s*(url\\(\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*\\)|[^,\\s]+))+)(?:\\s*,\\s*((?:\\s*(url\\(\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*\\)|[^,\\s]+))+))*\\s*$"))){for(e=n.exec(t);e;)s.push(function(t){for(var e=new RegExp(o,"g"),r=[],n=e.exec(t);n;)r.push(n[1]),n=e.exec(t);return r}(e[0])),e=n.exec(t);return s}return[]}(t).map(function(t){var e=function(t){for(var e=0;e<t.length;e++)try{return{url:r.extractCssUrl(t[e]),idx:e}}catch(t){}}(t);return e?{preUrl:t.slice(0,e.idx),url:e.url,postUrl:t.slice(e.idx+1)}:{preUrl:t}})},r.serialize=function(t){return t.map(function(t){var e=[].concat(t.preUrl);return t.url&&e.push('url("'+t.url+'")'),t.postUrl&&(e=e.concat(t.postUrl)),e.join(" ")}).join(", ")}},{"./cssSupport":9}],9:[function(t,e,o){"use strict";o.unquoteString=function(t){var e=/^"(.*)"$/,r=/^'(.*)'$/;return e.test(t)?t.replace(e,"$1"):r.test(t)?t.replace(r,"$1"):t},o.rulesForCssText=function(t){var e=document.implementation.createHTMLDocument(""),r=document.createElement("style");return r.textContent=t,e.body.appendChild(r),r=r.sheet.cssRules,Array.prototype.slice.call(r)},o.cssRulesToText=function(t){return t.reduce(function(t,e){return t+e.cssText},"")},o.exchangeRule=function(t,e,r){e=t.indexOf(e);t[e]=o.rulesForCssText(r)[0]},o.changeFontFaceRuleSrc=function(t,e,r){var n="@font-face { font-family: "+e.style.getPropertyValue("font-family")+"; ";e.style.getPropertyValue("font-style")&&(n+="font-style: "+e.style.getPropertyValue("font-style")+"; "),e.style.getPropertyValue("font-weight")&&(n+="font-weight: "+e.style.getPropertyValue("font-weight")+"; "),e.style.getPropertyValue("unicode-range")&&(n+="unicode-range: "+e.style.getPropertyValue("unicode-range")+"; "),n+="src: "+r+"}",o.exchangeRule(t,e,n)}},{}],10:[function(t,e,o){"use strict";function r(r){return r.map(function(t,e){return e===r.length-1&&(t={baseUrl:(e=t.baseUrl,c.joinUrl(e,"."))}),JSON.stringify(t)})}function u(t,e){return!1!==e.cache&&"none"!==e.cache&&e.cacheBucket?c.memoize(t,r,e.cacheBucket):t}function i(n,t,e){var o=l.rulesForCssText(n);return a.loadCSSImportsForRules(o,t,e).then(function(r){return a.loadAndInlineCSSResourcesForRules(o,e).then(function(t){var e=r.errors.concat(t.errors),t=r.hasChanges||t.hasChanges;return t&&(n=l.cssRulesToText(o)),{hasChanges:t,content:n,errors:e}})})}var c=t("./util"),n=t("./inlineImage"),s=t("./inlineScript"),a=t("./inlineCss"),l=t("./cssSupport");o.loadAndInlineStyles=function(t,e){var r=function(t){t=t.getElementsByTagName("style");return Array.prototype.filter.call(t,function(t){return!t.attributes.type||"text/css"===t.attributes.type.value})}(t),o=[],s=[],a=c.clone(e);return a.baseUrl=a.baseUrl||c.getDocumentBaseUrl(t),Promise.all(r.map(function(t){return r=a,n=s,t=(e=t).textContent,u(i,r)(t,n,r).then(function(t){return t.hasChanges&&(e.childNodes[0].nodeValue=t.content),c.cloneArray(t.errors)}).then(function(t){o=o.concat(t)});var e,r,n})).then(function(){return o})};function h(r,t){return c.ajax(r,t).then(function(t){return{content:t,cssRules:l.rulesForCssText(t)}}).then(function(t){var e=a.adjustPathsOfCssResources(r,t.cssRules);return{content:t.content,cssRules:t.cssRules,hasChanges:e}}).then(function(e){return a.loadCSSImportsForRules(e.cssRules,[],t).then(function(t){return{content:e.content,cssRules:e.cssRules,hasChanges:e.hasChanges||t.hasChanges,errors:t.errors}})}).then(function(e){return a.loadAndInlineCSSResourcesForRules(e.cssRules,t).then(function(t){return{content:e.content,cssRules:e.cssRules,hasChanges:e.hasChanges||t.hasChanges,errors:e.errors.concat(t.errors)}})}).then(function(t){var e=t.content;return t.hasChanges&&(e=l.cssRulesToText(t.cssRules)),{content:e,errors:t.errors}})}o.loadAndInlineCssLinks=function(t,o){var t=function(t){t=t.getElementsByTagName("link");return Array.prototype.filter.call(t,function(t){return t.attributes.rel&&"stylesheet"===t.attributes.rel.value&&(!t.attributes.type||"text/css"===t.attributes.type.value)})}(t),a=[];return Promise.all(t.map(function(s){return e=o,r=(t=s).attributes.href.value,n=c.getDocumentBaseUrl(t.ownerDocument),!(t=c.clone(e)).baseUrl&&n&&(t.baseUrl=n),u(h,e)(r,t).then(function(t){return{content:t.content,errors:c.cloneArray(t.errors)}}).then(function(t){var e,r,n,o;e=s,r=t.content+"\n",o=e.parentNode,(r=r.trim())&&((n=e.ownerDocument.createElement("style")).type="text/css",n.appendChild(e.ownerDocument.createTextNode(r)),o.insertBefore(n,e)),o.removeChild(e),a=a.concat(t.errors)},function(t){a.push({resourceType:"stylesheet",url:t.url,msg:"Unable to load stylesheet "+t.url})});var t,e,r,n})).then(function(){return a})},o.loadAndInlineImages=n.inline,o.loadAndInlineScript=s.inline,o.inlineReferences=function(e,r){var n=[],t=[o.loadAndInlineImages,o.loadAndInlineStyles,o.loadAndInlineCssLinks];return!1!==r.inlineScripts&&t.push(o.loadAndInlineScript),Promise.all(t.map(function(t){return t(e,r).then(function(t){n=n.concat(t)})})).then(function(){return n})}},{"./cssSupport":9,"./inlineCss":11,"./inlineImage":12,"./inlineScript":13,"./util":14}],11:[function(t,e,h){"use strict";function i(t,e,r){t.style.setProperty(e,r,t.style.getPropertyPriority(e))}function r(t){return t.filter(function(t){return t.type===window.CSSRule.STYLE_RULE&&(t.style.getPropertyValue("background-image")||t.style.getPropertyValue("background"))})}function n(t){var e=[];return t.forEach(function(t){t.style.getPropertyValue("background-image")?e.push({property:"background-image",value:t.style.getPropertyValue("background-image"),rule:t}):t.style.getPropertyValue("background")&&e.push({property:"background",value:t.style.getPropertyValue("background"),rule:t})}),e}function u(t){return t.filter(function(t){return t.type===window.CSSRule.FONT_FACE_RULE&&t.style.getPropertyValue("src")})}function f(t){return t.filter(function(t){return t.type===window.CSSRule.IMPORT_RULE&&t.href})}function c(t){var r=[];return t.forEach(function(t,e){t.url&&!p.isDataUri(t.url)&&r.push(e)}),r}function l(t){var r=[];return t.forEach(function(t,e){t.url&&!p.isDataUri(t.url)&&r.push(e)}),r}var p=t("./util"),g=t("./cssSupport"),m=t("./backgroundValueParser"),d=t("css-font-face-src");h.adjustPathsOfCssResources=function(o,s){var t=r(s),t=n(t),a=!1;return t.forEach(function(t){var r=m.parse(t.value),e=c(r);0<e.length&&(e.forEach(function(t){var e=r[t].url,e=p.joinUrl(o,e);r[t].url=e}),e=m.serialize(r),i(t.rule,t.property,e),a=!0)}),u(s).forEach(function(t){var r,e,n=t.style.getPropertyValue("src");try{r=d.parse(n)}catch(t){return}0<(e=l(r)).length&&(e.forEach(function(t){var e=r[t].url,e=p.joinUrl(o,e);r[t].url=e}),g.changeFontFaceRuleSrc(s,t,d.serialize(r)),a=!0)}),f(s).forEach(function(t){var e=t.href,e=p.joinUrl(o,e);g.exchangeRule(s,t,"@import url("+e+");"),a=!0}),a};function y(r,t,e){var n=r.indexOf(t);r.splice(n,1),e.forEach(function(t,e){r.splice(n+e,0,t)})}h.loadCSSImportsForRules=function(e,u,i){var t=f(e),c=[],l=!1;return Promise.all(t.map(function(t){return r=e,o=u,s=i,a=(n=t).href,a=g.unquoteString(a),t=p.joinUrl(s.baseUrl,a),(0<=o.indexOf(t)?(y(r,n,[]),Promise.resolve([])):(o.push(t),p.ajax(a,s).then(function(t){var e=g.rulesForCssText(t);return h.loadCSSImportsForRules(e,o,s).then(function(t){return h.adjustPathsOfCssResources(a,e),y(r,n,e),t.errors})},function(t){throw{resourceType:"stylesheet",url:t.url,msg:"Unable to load stylesheet "+t.url}}))).then(function(t){c=c.concat(t),l=!0},function(t){c.push(t)});var r,n,o,s,a})).then(function(){return{hasChanges:l,errors:c}})};function s(t,s){var t=r(t),t=n(t),a=[],u=!1;return Promise.all(t.map(function(e){return t=e.value,r=s,n=m.parse(t),t=c(n),o=!1,p.collectAndReportErrors(t.map(function(e){var t=n[e].url;return p.getDataURIForImageURL(t,r).then(function(t){n[e].url=t,o=!0},function(t){throw{resourceType:"backgroundImage",url:t.url,msg:"Unable to load background-image "+t.url}})})).then(function(t){return{backgroundValue:m.serialize(n),hasChanges:o,errors:t}}).then(function(t){t.hasChanges&&(i(e.rule,e.property,t.backgroundValue),u=!0),a=a.concat(t.errors)});var t,r,n,o})).then(function(){return{hasChanges:u,errors:a}})}function a(r,t){var e=u(r),n=[],o=!1;return Promise.all(e.map(function(e){return function(t,n){var o,e,s=!1;try{o=d.parse(t)}catch(t){o=[]}return e=l(o),p.collectAndReportErrors(e.map(function(t){var e=o[t],r=e.format||"woff";return p.binaryAjax(e.url,n).then(function(t){t=btoa(t);e.url="data:font/"+r+";base64,"+t,s=!0},function(t){throw{resourceType:"fontFace",url:t.url,msg:"Unable to load font-face "+t.url}})})).then(function(t){return{srcDeclarationValue:d.serialize(o),hasChanges:s,errors:t}})}(e.style.getPropertyValue("src"),t).then(function(t){t.hasChanges&&(g.changeFontFaceRuleSrc(r,e,t.srcDeclarationValue),o=!0),n=n.concat(t.errors)})})).then(function(){return{hasChanges:o,errors:n}})}h.loadAndInlineCSSResourcesForRules=function(e,r){var n=!1,o=[];return Promise.all([s,a].map(function(t){return t(e,r).then(function(t){n=n||t.hasChanges,o=o.concat(t.errors)})})).then(function(){return{hasChanges:n,errors:o}})}},{"./backgroundValueParser":8,"./cssSupport":9,"./util":14,"css-font-face-src":1}],12:[function(t,e,r){"use strict";function o(t){return Array.prototype.slice.call(t)}var s=t("./util");r.inline=function(t,r){var e=o(t.getElementsByTagName("img")),n=o(t.getElementsByTagName("image")),t=(t=t.getElementsByTagName("input"),Array.prototype.filter.call(t,function(t){return"image"===t.type}));e=(e=e.concat(n)).concat(t);e=e.filter(function(t){var e=null;return t.hasAttribute("src")?e=t.getAttribute("src"):t.hasAttributeNS("http://www.w3.org/1999/xlink","href")?e=t.getAttributeNS("http://www.w3.org/1999/xlink","href"):t.hasAttribute("href")&&(e=t.getAttribute("href")),null!==e&&!s.isDataUri(e)});return s.collectAndReportErrors(e.map(function(e){return function(t,e){var r=null;t.hasAttribute("src")?r=t.getAttribute("src"):t.hasAttributeNS("http://www.w3.org/1999/xlink","href")?r=t.getAttributeNS("http://www.w3.org/1999/xlink","href"):t.hasAttribute("href")&&(r=t.getAttribute("href"));t=s.getDocumentBaseUrl(t.ownerDocument),e=s.clone(e);return!e.baseUrl&&t&&(e.baseUrl=t),s.getDataURIForImageURL(r,e).then(function(t){return t},function(t){throw{resourceType:"image",url:t.url,msg:"Unable to load image "+t.url}})}(e,r).then(function(t){e.attributes.src?e.attributes.src.value=t:e.attributes["xlink:href"]?e.attributes["xlink:href"].value=t:e.attributes.href&&(e.attributes.href.value=t)})}))}},{"./util":14}],13:[function(t,e,r){"use strict";var s=t("./util");r.inline=function(t,o){t=function(t){t=t.getElementsByTagName("script");return Array.prototype.filter.call(t,function(t){return!!t.attributes.src})}(t);return s.collectAndReportErrors(t.map(function(r){return e=o,n=(t=r).attributes.src.value,t=s.getDocumentBaseUrl(t.ownerDocument),!(e=s.clone(e)).baseUrl&&t&&(e.baseUrl=t),s.ajax(n,e).catch(function(t){throw{resourceType:"script",url:t.url,msg:"Unable to load script "+t.url}}).then(function(t){var e;e=t,(t=r).attributes.removeNamedItem("src"),t.textContent=e.replace(/<\//g,"<\\/")});var t,e,n}))}},{"./util":14}],14:[function(t,e,l){"use strict";var r=t("url");l.getDocumentBaseUrl=function(t){return"about:blank"!==t.baseURI?t.baseURI:null},l.clone=function(t){var e,r={};for(e in t)t.hasOwnProperty(e)&&(r[e]=t[e]);return r},l.cloneArray=function(t){return Array.prototype.slice.apply(t,[0])},l.joinUrl=function(t,e){return t?r.resolve(t,e):e},l.isDataUri=function(t){return/^data:/.test(t)},l.collectAndReportErrors=function(t){var e=[];return Promise.all(t.map(function(t){return t.catch(function(t){e.push(t)})})).then(function(){return e})};var h=null;l.ajax=function(i,c){return new Promise(function(t,e){function r(){e({msg:"Unable to load url",url:u})}var n,o,s,a=new window.XMLHttpRequest,u=l.joinUrl(c.baseUrl,i);o=u,n=!1===(s=c.cache)||"none"===s||"repeated"===s?(null!==h&&"repeated"===s||(h=Date.now()),o+"?_="+h):o,a.addEventListener("load",function(){200===a.status||0===a.status?t(a.response):r()},!1),a.addEventListener("error",r,!1);try{a.open("GET",n,!0),a.overrideMimeType(c.mimeType),a.send(null)}catch(t){r()}})},l.binaryAjax=function(t,e){e=l.clone(e);return e.mimeType="text/plain; charset=x-user-defined",l.ajax(t,e).then(function(t){for(var e="",r=0;r<t.length;r++)e+=String.fromCharCode(255&t.charCodeAt(r));return e})};function n(t){function e(t,e){return t.substring(0,e.length)===e}return e(t,"<?xml")||e(t,"<svg")?"image/svg+xml":"image/png"}l.getDataURIForImageURL=function(t,e){return l.binaryAjax(t,e).then(function(t){var e=btoa(t);return"data:"+n(t)+";base64,"+e})};var a=[];l.memoize=function(n,o,s){if("object"!=typeof s)throw new Error("cacheBucket is not an object");return function(){var t,e=Array.prototype.slice.call(arguments),r=o(e),t=(t=n,a.indexOf(t)<0&&a.push(t),a.indexOf(t));return s[t]&&s[t][r]?s[t][r]:(e=n.apply(null,e),s[t]=s[t]||{},s[t][r]=e)}}},{url:6}]},{},[10])(10)});
\ No newline at end of file
+!function(t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).inlineresources=t()}(function(){return function n(o,s,a){function u(e,t){if(!s[e]){if(!o[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(i)return i(e,!0);throw(t=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",t}r=s[e]={exports:{}},o[e][0].call(r.exports,function(t){return u(o[e][1][t]||t)},r,r.exports,n,o,s,a)}return s[e].exports}for(var i="function"==typeof require&&require,t=0;t<a.length;t++)u(a[t]);return u}({1:[function(c,r,n){!function(e){!function(){!function(t){"object"==typeof n&&void 0!==r?r.exports=t():("undefined"!=typeof window?window:void 0!==e?e:"undefined"!=typeof self?self:this).cssFontFaceSrc=t()}(function(){return function n(o,s,a){function u(r,t){if(!s[r]){if(!o[r]){var e="function"==typeof c&&c;if(!t&&e)return e(r,!0);if(i)return i(r,!0);t=new Error("Cannot find module '"+r+"'");throw t.code="MODULE_NOT_FOUND",t}e=s[r]={exports:{}};o[r][0].call(e.exports,function(t){var e=o[r][1][t];return u(e||t)},e,e.exports,n,o,s,a)}return s[r].exports}for(var i="function"==typeof c&&c,t=0;t<a.length;t++)u(a[t]);return u}({1:[function(M,t,e){"use strict";function H(t,e,r,n){this.message=t,this.expected=e,this.found=r,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,H)}function r(){this.constructor=n}var n,o;n=H,o=Error,r.prototype=o.prototype,n.prototype=new r,H.buildMessage=function(t,e){var s={literal:function(t){return'"'+n(t.text)+'"'},class:function(t){for(var e="",r=0;r<t.parts.length;r++)e+=t.parts[r]instanceof Array?o(t.parts[r][0])+"-"+o(t.parts[r][1]):o(t.parts[r]);return"["+(t.inverted?"^":"")+e+"]"},any:function(t){return"any character"},end:function(t){return"end of input"},other:function(t){return t.description}};function r(t){return t.charCodeAt(0).toString(16).toUpperCase()}function n(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(t){return"\\x0"+r(t)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(t){return"\\x"+r(t)})}function o(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(t){return"\\x0"+r(t)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(t){return"\\x"+r(t)})}return"Expected "+function(t){for(var e,r,n=new Array(t.length),o=0;o<t.length;o++)n[o]=(r=t[o],s[r.type](r));if(n.sort(),0<n.length){for(e=o=1;o<n.length;o++)n[o-1]!==n[o]&&(n[e]=n[o],e++);n.length=e}switch(n.length){case 1:return n[0];case 2:return n[0]+" or "+n[1];default:return n.slice(0,-1).join(", ")+", or "+n[n.length-1]}}(t)+" but "+((t=e)?'"'+n(t)+'"':"end of input")+" found."},t.exports={SyntaxError:H,parse:function(u,t){var i={},e={start:F},r=F,n="",o=function(){return[]},c=",",l=j(",",!1),h=function(t,e){return[t].concat(e)},f=function(t){return[t]},s=function(t,e){return{url:t,format:e}},a=function(t){return{url:t}},p="url(",g=j("url(",!1),m=")",d=j(")",!1),y="format(",N=j("format(",!1),v="local(",D=j("local(",!1),V=function(t){return{local:t}},b=/^[^)]/,x=S([")"],!0,!1),L=function(t){return _.extractValue(t.join(""))},$=/^[ \t\r\n\f]/,B=S([" ","\t","\r","\n","\f"],!1,!1),w=0,C=[{line:1,column:1}],A=0,R=[],U=0;if("startRule"in(t=void 0!==t?t:{})){if(!(t.startRule in e))throw new Error("Can't start parsing from rule \""+t.startRule+'".');r=e[t.startRule]}function j(t,e){return{type:"literal",text:t,ignoreCase:e}}function S(t,e,r){return{type:"class",parts:t,inverted:e,ignoreCase:r}}function O(t){var e,r=C[t];if(r)return r;for(e=t-1;!C[e];)e--;for(r={line:(r=C[e]).line,column:r.column};e<t;)10===u.charCodeAt(e)?(r.line++,r.column=1):r.column++,e++;return C[t]=r}function E(t,e){var r=O(t),n=O(e);return{start:{offset:t,line:r.line,column:r.column},end:{offset:e,line:n.line,column:n.column}}}function I(t){w<A||(A<w&&(A=w,R=[]),R.push(t))}function z(t,e,r){return new H(H.buildMessage(t,e),t,e,r)}function F(){var t,e=function t(){var e,r,n,o,s,a;e=w;r=P();if(r!==i){for(n=[],o=q();o!==i;)n.push(o),o=q();if(n!==i)if(44===u.charCodeAt(w)?(o=c,w++):(o=i,0===U&&I(l)),o!==i){for(s=[],a=q();a!==i;)s.push(a),a=q();e=s!==i&&(a=t())!==i?r=h(r,a):(w=e,i)}else w=e,e=i;else w=e,e=i}else w=e,e=i;e===i&&(e=w,(r=P())!==i&&(r=f(r)),e=r);return e}();return e===i&&(e=w,(t=n)!==i&&(t=o()),e=t),e}function P(){var t=function(){var t,e,r,n;if(t=w,(e=T())!==i){if(r=[],(n=q())!==i)for(;n!==i;)r.push(n),n=q();else r=i;t=r!==i&&(n=function(){var t,e,r,n;t=w,u.substr(w,7)===y?(e=y,w+=7):(e=i,0===U&&I(N));t=e!==i&&(r=k(),r!==i)&&(41===u.charCodeAt(w)?(n=m,w++):(n=i,0===U&&I(d)),n!==i)?e=r:(w=t,i);return t}())!==i?e=s(e,n):(w=t,i)}else w=t,t=i;t===i&&(t=w,(e=T())!==i&&(e=a(e)),t=e);return t}();return t=t===i?function(){var t,e,r,n;t=w,u.substr(w,6)===v?(e=v,w+=6):(e=i,0===U&&I(D));t=e!==i&&(r=k(),r!==i)&&(41===u.charCodeAt(w)?(n=m,w++):(n=i,0===U&&I(d)),n!==i)?e=V(r):(w=t,i);return t}():t}function T(){var t,e,r,n=w;return u.substr(w,4)===p?(t=p,w+=4):(t=i,0===U&&I(g)),n=t!==i&&(e=k())!==i&&(41===u.charCodeAt(w)?(r=m,w++):(r=i,0===U&&I(d)),r!==i)?t=e:(w=n,i)}function k(){var t,e=w,r=[];if(b.test(u.charAt(w))?(t=u.charAt(w),w++):(t=i,0===U&&I(x)),t!==i)for(;t!==i;)r.push(t),b.test(u.charAt(w))?(t=u.charAt(w),w++):(t=i,0===U&&I(x));else r=i;return r!==i&&(r=L(r)),r}function q(){var t;return $.test(u.charAt(w))?(t=u.charAt(w),w++):(t=i,0===U&&I(B)),t}var _=M("../util");if((e=r())!==i&&w===u.length)return e;throw e!==i&&w<u.length&&I({type:"end"}),z(R,A<u.length?u.charAt(A):null,A<u.length?E(A,A+1):E(A,A))}}},{"../util":3}],2:[function(t,e,r){var n=t("./grammar");r.SyntaxError=function(t,e){this.message=t,this.offset=e},r.parse=function(t){try{return n.parse(t)}catch(t){throw new r.SyntaxError(t.message,t.offset)}},r.serialize=function(t){return t.map(function(t){var e;return t.url?(e='url("'+t.url+'")',t.format&&(e+=' format("'+t.format+'")')):e='local("'+t.local+'")',e}).join(", ")}},{"./grammar":1}],3:[function(t,e,r){r.extractValue=function(t){return t=t.replace(/^[\t\r\f\n ]*(.+?)[\t\r\f\n ]*$/,"$1"),r=/^'(.*)'$/,(e=/^"(.*)"$/).test(t)?t.replace(e,"$1"):r.test(t)?t.replace(r,"$1"):t;var e,r}},{}]},{},[2])(2)})}.call(this)}.call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(t,O,E){!function(S){!function(){var t=this,e="object"==typeof E&&E&&!E.nodeType&&E,r="object"==typeof O&&O&&!O.nodeType&&O,n="object"==typeof S&&S;n.global!==n&&n.window!==n&&n.self!==n||(t=n);var o,s,d=2147483647,y=36,v=26,a=38,u=700,i=/^xn--/,c=/[^\x20-\x7E]/,l=/[\x2E\u3002\uFF0E\uFF61]/g,h={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},f=y-1,b=Math.floor,x=String.fromCharCode;function w(t){throw new RangeError(h[t])}function p(t,e){for(var r=t.length,n=[];r--;)n[r]=e(t[r]);return n}function g(t,e){var r=t.split("@"),n="",r=(1<r.length&&(n=r[0]+"@",t=r[1]),(t=t.replace(l,".")).split("."));return n+p(r,e).join(".")}function C(t){for(var e,r,n=[],o=0,s=t.length;o<s;)55296<=(e=t.charCodeAt(o++))&&e<=56319&&o<s?56320==(64512&(r=t.charCodeAt(o++)))?n.push(((1023&e)<<10)+(1023&r)+65536):(n.push(e),o--):n.push(e);return n}function m(t){return p(t,function(t){var e="";return 65535<t&&(e+=x((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+=x(t)}).join("")}function A(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function R(t,e,r){var n=0;for(t=r?b(t/u):t>>1,t+=b(t/e);f*v>>1<t;n+=y)t=b(t/f);return b(n+(f+1)*t/(t+a))}function U(t){var e,r,n,o,s,a,u,i=[],c=t.length,l=0,h=128,f=72,p=t.lastIndexOf("-");for(p<0&&(p=0),r=0;r<p;++r)128<=t.charCodeAt(r)&&w("not-basic"),i.push(t.charCodeAt(r));for(n=0<p?p+1:0;n<c;){for(o=l,s=1,a=y;c<=n&&w("invalid-input"),u=t.charCodeAt(n++),(y<=(u=u-48<10?u-22:u-65<26?u-65:u-97<26?u-97:y)||u>b((d-l)/s))&&w("overflow"),l+=u*s,!(u<(u=a<=f?1:f+v<=a?v:a-f));a+=y)s>b(d/(u=y-u))&&w("overflow"),s*=u;f=R(l-o,e=i.length+1,0==o),b(l/e)>d-h&&w("overflow"),h+=b(l/e),l%=e,i.splice(l++,0,h)}return m(i)}function j(t){for(var e,r,n,o,s,a,u,i,c,l,h=[],f=(t=C(t)).length,p=128,g=72,m=e=0;m<f;++m)(u=t[m])<128&&h.push(x(u));for(r=n=h.length,n&&h.push("-");r<f;){for(o=d,m=0;m<f;++m)p<=(u=t[m])&&u<o&&(o=u);for(o-p>b((d-e)/(i=r+1))&&w("overflow"),e+=(o-p)*i,p=o,m=0;m<f;++m)if((u=t[m])<p&&++e>d&&w("overflow"),u==p){for(s=e,a=y;!(s<(c=a<=g?1:g+v<=a?v:a-g));a+=y)h.push(x(A(c+(l=s-c)%(c=y-c),0))),s=b(l/c);h.push(x(A(s,0))),g=R(e,i,r==n),e=0,++r}++e,++p}return h.join("")}if(o={version:"1.4.1",ucs2:{decode:C,encode:m},decode:U,encode:j,toASCII:function(t){return g(t,function(t){return c.test(t)?"xn--"+j(t):t})},toUnicode:function(t){return g(t,function(t){return i.test(t)?U(t.slice(4).toLowerCase()):t})}},e&&r)if(O.exports==e)r.exports=o;else for(s in o)o.hasOwnProperty(s)&&(e[s]=o[s]);else t.punycode=o}.call(this)}.call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],3:[function(t,e,r){"use strict";e.exports=function(t,e,r,n){e=e||"&",r=r||"=";var o={};if("string"==typeof t&&0!==t.length){var s=/\+/g,e=(t=t.split(e),1e3),a=(n&&"number"==typeof n.maxKeys&&(e=n.maxKeys),t.length);0<e&&e<a&&(a=e);for(var u=0;u<a;++u){var i,c=t[u].replace(s,"%20"),l=c.indexOf(r),l=0<=l?(i=c.substr(0,l),c.substr(l+1)):(i=c,""),c=decodeURIComponent(i),l=decodeURIComponent(l);Object.prototype.hasOwnProperty.call(o,c)?h(o[c])?o[c].push(l):o[c]=[o[c],l]:o[c]=l}}return o};var h=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},{}],4:[function(t,e,r){"use strict";function s(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}}e.exports=function(r,n,o,t){return n=n||"&",o=o||"=","object"==typeof(r=null===r?void 0:r)?u(i(r),function(t){var e=encodeURIComponent(s(t))+o;return a(r[t])?u(r[t],function(t){return e+encodeURIComponent(s(t))}).join(n):e+encodeURIComponent(s(r[t]))}).join(n):t?encodeURIComponent(s(t))+o+encodeURIComponent(s(r)):""};var a=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function u(t,e){if(t.map)return t.map(e);for(var r=[],n=0;n<t.length;n++)r.push(e(t[n],n));return r}var i=Object.keys||function(t){var e,r=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&r.push(e);return r}},{}],5:[function(t,e,r){"use strict";r.decode=r.parse=t("./decode"),r.encode=r.stringify=t("./encode")},{"./decode":3,"./encode":4}],6:[function(t,e,r){"use strict";var A=t("punycode"),R=t("./util");function w(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}r.parse=o,r.resolve=function(t,e){return o(t,!1,!0).resolve(e)},r.resolveObject=function(t,e){return t?o(t,!1,!0).resolveObject(e):e},r.format=function(t){R.isString(t)&&(t=o(t));return t instanceof w?t.format():w.prototype.format.call(t)},r.Url=w;var U=/^([a-z0-9.+-]+:)/i,n=/:[0-9]*$/,j=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,r=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),S=["'"].concat(r),O=["%","/","?",";","#"].concat(S),E=["/","?","#"],I=/^[+a-z0-9A-Z_-]{0,63}$/,F=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,P={javascript:!0,"javascript:":!0},T={javascript:!0,"javascript:":!0},k={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},q=t("querystring");function o(t,e,r){var n;return t&&R.isObject(t)&&t instanceof w?t:((n=new w).parse(t,e,r),n)}w.prototype.parse=function(t,e,r){if(!R.isString(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var n=t.indexOf("?"),n=-1!==n&&n<t.indexOf("#")?"?":"#",o=t.split(n);o[0]=o[0].replace(/\\/g,"/");var s=(s=t=o.join(n)).trim();if(!r&&1===t.split("#").length){o=j.exec(s);if(o)return this.path=s,this.href=s,this.pathname=o[1],o[2]?(this.search=o[2],this.query=e?q.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var a,n=U.exec(s);if(n&&(a=(n=n[0]).toLowerCase(),this.protocol=a,s=s.substr(n.length)),!(r||n||s.match(/^\/\/[^@\/]+@[^@\/]+/))||!(x="//"===s.substr(0,2))||n&&T[n]||(s=s.substr(2),this.slashes=!0),!T[n]&&(x||n&&!k[n])){for(var u=-1,i=0;i<E.length;i++)-1!==(c=s.indexOf(E[i]))&&(-1===u||c<u)&&(u=c);-1!==(t=-1===u?s.lastIndexOf("@"):s.lastIndexOf("@",u))&&(o=s.slice(0,t),s=s.slice(t+1),this.auth=decodeURIComponent(o));for(var c,u=-1,i=0;i<O.length;i++)-1!==(c=s.indexOf(O[i]))&&(-1===u||c<u)&&(u=c);-1===u&&(u=s.length),this.host=s.slice(0,u),s=s.slice(u),this.parseHost(),this.hostname=this.hostname||"";r="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!r)for(var l=this.hostname.split(/\./),i=0,h=l.length;i<h;i++){var f=l[i];if(f&&!f.match(I)){for(var p="",g=0,m=f.length;g<m;g++)127<f.charCodeAt(g)?p+="x":p+=f[g];if(!p.match(I)){var d=l.slice(0,i),y=l.slice(i+1),v=f.match(F);v&&(d.push(v[1]),y.unshift(v[2])),y.length&&(s="/"+y.join(".")+s),this.hostname=d.join(".");break}}}255<this.hostname.length?this.hostname="":this.hostname=this.hostname.toLowerCase(),r||(this.hostname=A.toASCII(this.hostname));var b=this.port?":"+this.port:"",x=this.hostname||"";this.host=x+b,this.href+=this.host,r&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==s[0])&&(s="/"+s)}if(!P[a])for(i=0,h=S.length;i<h;i++){var w,C=S[i];-1!==s.indexOf(C)&&((w=encodeURIComponent(C))===C&&(w=escape(C)),s=s.split(C).join(w))}n=s.indexOf("#"),-1!==n&&(this.hash=s.substr(n),s=s.slice(0,n)),t=s.indexOf("?");return-1!==t?(this.search=s.substr(t),this.query=s.substr(t+1),e&&(this.query=q.parse(this.query)),s=s.slice(0,t)):e&&(this.search="",this.query={}),s&&(this.pathname=s),k[a]&&this.hostname&&!this.pathname&&(this.pathname="/"),(this.pathname||this.search)&&(b=this.pathname||"",o=this.search||"",this.path=b+o),this.href=this.format(),this},w.prototype.format=function(){var t=this.auth||"",e=(t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@"),this.protocol||""),r=this.pathname||"",n=this.hash||"",o=!1,s="",t=(this.host?o=t+this.host:this.hostname&&(o=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port)&&(o+=":"+this.port),this.query&&R.isObject(this.query)&&Object.keys(this.query).length&&(s=q.stringify(this.query)),this.search||s&&"?"+s||"");return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||k[e])&&!1!==o?(o="//"+(o||""),r&&"/"!==r.charAt(0)&&(r="/"+r)):o=o||"",n&&"#"!==n.charAt(0)&&(n="#"+n),t&&"?"!==t.charAt(0)&&(t="?"+t),e+o+(r=r.replace(/[?#]/g,function(t){return encodeURIComponent(t)}))+(t=t.replace("#","%23"))+n},w.prototype.resolve=function(t){return this.resolveObject(o(t,!1,!0)).format()},w.prototype.resolveObject=function(t){R.isString(t)&&((f=new w).parse(t,!1,!0),t=f);for(var e=new w,r=Object.keys(this),n=0;n<r.length;n++){var o=r[n];e[o]=this[o]}if(e.hash=t.hash,""!==t.href)if(t.slashes&&!t.protocol){for(var s=Object.keys(t),a=0;a<s.length;a++){var u=s[a];"protocol"!==u&&(e[u]=t[u])}k[e.protocol]&&e.hostname&&!e.pathname&&(e.path=e.pathname="/")}else if(t.protocol&&t.protocol!==e.protocol)if(k[t.protocol]){if(e.protocol=t.protocol,t.host||T[t.protocol])e.pathname=t.pathname;else{for(var i=(t.pathname||"").split("/");i.length&&!(t.host=i.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==i[0]&&i.unshift(""),i.length<2&&i.unshift(""),e.pathname=i.join("/")}e.search=t.search,e.query=t.query,e.host=t.host||"",e.auth=t.auth,e.hostname=t.hostname||t.host,e.port=t.port,(e.pathname||e.search)&&(f=e.pathname||"",p=e.search||"",e.path=f+p),e.slashes=e.slashes||t.slashes}else for(var c=Object.keys(t),l=0;l<c.length;l++){var h=c[l];e[h]=t[h]}else{var f=e.pathname&&"/"===e.pathname.charAt(0),p=t.host||t.pathname&&"/"===t.pathname.charAt(0),f=p||f||e.host&&t.pathname,g=f,m=e.pathname&&e.pathname.split("/")||[],i=t.pathname&&t.pathname.split("/")||[],d=e.protocol&&!k[e.protocol];if(d&&(e.hostname="",e.port=null,e.host&&(""===m[0]?m[0]=e.host:m.unshift(e.host)),e.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===i[0]?i[0]=t.host:i.unshift(t.host)),t.host=null),f=f&&(""===i[0]||""===m[0])),p)e.host=(t.host||""===t.host?t:e).host,e.hostname=(t.hostname||""===t.hostname?t:e).hostname,e.search=t.search,e.query=t.query,m=i;else if(i.length)(m=m||[]).pop(),m=m.concat(i),e.search=t.search,e.query=t.query;else if(!R.isNullOrUndefined(t.search))return d&&(e.hostname=e.host=m.shift(),x=!!(e.host&&0<e.host.indexOf("@"))&&e.host.split("@"))&&(e.auth=x.shift(),e.host=e.hostname=x.shift()),e.search=t.search,e.query=t.query,R.isNull(e.pathname)&&R.isNull(e.search)||(e.path=(e.pathname||"")+(e.search||"")),e.href=e.format(),e;if(m.length){for(var y=m.slice(-1)[0],p=(e.host||t.host||1<m.length)&&("."===y||".."===y)||""===y,v=0,b=m.length;0<=b;b--)"."===(y=m[b])?m.splice(b,1):".."===y?(m.splice(b,1),v++):v&&(m.splice(b,1),v--);if(!f&&!g)for(;v--;)m.unshift("..");!f||""===m[0]||m[0]&&"/"===m[0].charAt(0)||m.unshift(""),p&&"/"!==m.join("/").substr(-1)&&m.push("");var x,g=""===m[0]||m[0]&&"/"===m[0].charAt(0);d&&(e.hostname=e.host=!g&&m.length?m.shift():"",x=!!(e.host&&0<e.host.indexOf("@"))&&e.host.split("@"))&&(e.auth=x.shift(),e.host=e.hostname=x.shift()),(f=f||e.host&&m.length)&&!g&&m.unshift(""),m.length?e.pathname=m.join("/"):(e.pathname=null,e.path=null),R.isNull(e.pathname)&&R.isNull(e.search)||(e.path=(e.pathname||"")+(e.search||"")),e.auth=t.auth||e.auth,e.slashes=e.slashes||t.slashes}else e.pathname=null,e.search?e.path="/"+e.search:e.path=null}return e.href=e.format(),e},w.prototype.parseHost=function(){var t=this.host,e=n.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)}},{"./util":7,punycode:2,querystring:5}],7:[function(t,e,r){"use strict";e.exports={isString:function(t){return"string"==typeof t},isObject:function(t){return"object"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}}},{}],8:[function(t,e,r){"use strict";function n(t){var e,o="(url\\(\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*\\)|[^,\\s]+)",r="(?:\\s*"+o+")+",n=new RegExp(r,"g"),s=[];if(t.match(new RegExp("^\\s*((?:\\s*(url\\(\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*\\)|[^,\\s]+))+)(?:\\s*,\\s*((?:\\s*(url\\(\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*\\)|[^,\\s]+))+))*\\s*$"))){for(e=n.exec(t);e;)s.push(function(t){for(var e=new RegExp(o,"g"),r=[],n=e.exec(t);n;)r.push(n[1]),n=e.exec(t);return r}(e[0])),e=n.exec(t);return s}return[]}var o=t("./cssSupport");r.extractCssUrl=function(t){var e=/^url\(("[^"]+"|'[^']+'|[^\)]+)\)/;if(e.test(t))return e=e.exec(t)[1],o.unquoteString(e.replace(/^[\t\r\f\n ]*(.+?)[\t\r\f\n ]*$/,"$1"));throw new Error("Invalid url")};r.parse=function(t){return n(t).map(function(t){var e=function(t){for(var e=0;e<t.length;e++)try{return{url:r.extractCssUrl(t[e]),idx:e}}catch(t){}}(t);return e?{preUrl:t.slice(0,e.idx),url:e.url,postUrl:t.slice(e.idx+1)}:{preUrl:t}})},r.serialize=function(t){return t.map(function(t){var e=[].concat(t.preUrl);return t.url&&e.push('url("'+t.url+'")'),(e=t.postUrl?e.concat(t.postUrl):e).join(" ")}).join(", ")}},{"./cssSupport":9}],9:[function(t,e,s){"use strict";s.unquoteString=function(t){var e=/^"(.*)"$/,r=/^'(.*)'$/;return e.test(t)?t.replace(e,"$1"):r.test(t)?t.replace(r,"$1"):t},s.rulesForCssText=function(t,e){var r=document.implementation.createHTMLDocument(""),n=document.createElement("style");return n.textContent=t,e&&e.nonce?n.nonce=e.nonce:e&&e.integrity&&n.setAttribute("integrity",e.integrity),r.body.appendChild(n),t=n.sheet.cssRules,Array.prototype.slice.call(t)},s.cssRulesToText=function(t){return t.reduce(function(t,e){return t+e.cssText},"")},s.exchangeRule=function(t,e,r,n){e=t.indexOf(e);t[e]=s.rulesForCssText(r,n)[0]},s.changeFontFaceRuleSrc=function(t,e,r,n){var o="@font-face { font-family: "+e.style.getPropertyValue("font-family")+"; ";e.style.getPropertyValue("font-style")&&(o+="font-style: "+e.style.getPropertyValue("font-style")+"; "),e.style.getPropertyValue("font-weight")&&(o+="font-weight: "+e.style.getPropertyValue("font-weight")+"; "),e.style.getPropertyValue("unicode-range")&&(o+="unicode-range: "+e.style.getPropertyValue("unicode-range")+"; "),s.exchangeRule(t,e,o+="src: "+r+"}",n)}},{}],10:[function(t,e,o){"use strict";function u(t,e){return!1!==e.cache&&"none"!==e.cache&&e.cacheBucket?l.memoize(t,h,e.cacheBucket):t}function i(n,t,e){var o=a.rulesForCssText(n,e);return s.loadCSSImportsForRules(o,t,e).then(function(r){return s.loadAndInlineCSSResourcesForRules(o,e).then(function(t){var e=r.errors.concat(t.errors),t=r.hasChanges||t.hasChanges;return{hasChanges:t,content:n=t?a.cssRulesToText(o):n,errors:e}})})}function c(r,n){return l.ajax(r,n).then(function(t){return{content:t,cssRules:a.rulesForCssText(t,n)}}).then(function(t){var e=s.adjustPathsOfCssResources(r,t.cssRules,n);return{content:t.content,cssRules:t.cssRules,hasChanges:e}}).then(function(e){return s.loadCSSImportsForRules(e.cssRules,[],n).then(function(t){return{content:e.content,cssRules:e.cssRules,hasChanges:e.hasChanges||t.hasChanges,errors:t.errors}})}).then(function(e){return s.loadAndInlineCSSResourcesForRules(e.cssRules,n).then(function(t){return{content:e.content,cssRules:e.cssRules,hasChanges:e.hasChanges||t.hasChanges,errors:e.errors.concat(t.errors)}})}).then(function(t){var e=t.content;return{content:e=t.hasChanges?a.cssRulesToText(t.cssRules):e,errors:t.errors}})}var l=t("./util"),r=t("./inlineImage"),n=t("./inlineScript"),s=t("./inlineCss"),a=t("./cssSupport"),h=function(r){return r.map(function(t,e){return e===r.length-1&&(t={baseUrl:(e=t.baseUrl,l.joinUrl(e,"."))}),JSON.stringify(t)})};o.loadAndInlineStyles=function(t,e){var r=function(t){t=t.getElementsByTagName("style");return Array.prototype.filter.call(t,function(t){return!t.attributes.type||"text/css"===t.attributes.type.value})}(t),o=[],s=[],a=l.clone(e);return a.baseUrl=a.baseUrl||l.getDocumentBaseUrl(t),Promise.all(r.map(function(t){return r=a,n=s,t=(e=t).textContent,u(i,r)(t,n,r).then(function(t){return t.hasChanges&&(e.childNodes[0].nodeValue=t.content),l.cloneArray(t.errors)}).then(function(t){o=o.concat(t)});var e,r,n})).then(function(){return o})};o.loadAndInlineCssLinks=function(t,o){var t=function(t){t=t.getElementsByTagName("link");return Array.prototype.filter.call(t,function(t){return t.attributes.rel&&"stylesheet"===t.attributes.rel.value&&(!t.attributes.type||"text/css"===t.attributes.type.value)})}(t),a=[];return Promise.all(t.map(function(s){return e=o,r=(t=s).attributes.href.value,t=l.getDocumentBaseUrl(t.ownerDocument),!(n=l.clone(e)).baseUrl&&t&&(n.baseUrl=t),u(c,e)(r,n).then(function(t){return{content:t.content,errors:l.cloneArray(t.errors)}}).then(function(t){var e,r,n,o;e=s,r=t.content+"\n",o=e.parentNode,(r=r.trim())&&((n=e.ownerDocument.createElement("style")).type="text/css",n.appendChild(e.ownerDocument.createTextNode(r)),o.insertBefore(n,e)),o.removeChild(e),a=a.concat(t.errors)},function(t){a.push({resourceType:"stylesheet",url:t.url,msg:"Unable to load stylesheet "+t.url})});var t,e,r,n})).then(function(){return a})},o.loadAndInlineImages=r.inline,o.loadAndInlineScript=n.inline,o.inlineReferences=function(e,r){var n=[],t=[o.loadAndInlineImages,o.loadAndInlineStyles,o.loadAndInlineCssLinks];return!1!==r.inlineScripts&&t.push(o.loadAndInlineScript),Promise.all(t.map(function(t){return t(e,r).then(function(t){n=n.concat(t)})})).then(function(){return n})}},{"./cssSupport":9,"./inlineCss":11,"./inlineImage":12,"./inlineScript":13,"./util":14}],11:[function(t,e,h){"use strict";function i(t,e,r){t.style.setProperty(e,r,t.style.getPropertyPriority(e))}function r(t){return t.filter(function(t){return t.type===window.CSSRule.STYLE_RULE&&(t.style.getPropertyValue("background-image")||t.style.getPropertyValue("background"))})}function c(t){var e=[];return t.forEach(function(t){t.style.getPropertyValue("background-image")?e.push({property:"background-image",value:t.style.getPropertyValue("background-image"),rule:t}):t.style.getPropertyValue("background")&&e.push({property:"background",value:t.style.getPropertyValue("background"),rule:t})}),e}function u(t){return t.filter(function(t){return t.type===window.CSSRule.FONT_FACE_RULE&&t.style.getPropertyValue("src")})}function f(t){return t.filter(function(t){return t.type===window.CSSRule.IMPORT_RULE&&t.href})}function p(r,t,e){var n=r.indexOf(t);r.splice(n,1),e.forEach(function(t,e){r.splice(n+e,0,t)})}function s(t,s){var t=r(t),t=c(t),a=[],u=!1;return Promise.all(t.map(function(e){return t=e.value,r=s,n=l.parse(t),t=y(n),o=!1,g.collectAndReportErrors(t.map(function(e){var t=n[e].url;return g.getDataURIForImageURL(t,r).then(function(t){n[e].url=t,o=!0},function(t){throw{resourceType:"backgroundImage",url:t.url,msg:"Unable to load background-image "+t.url}})})).then(function(t){return{backgroundValue:l.serialize(n),hasChanges:o,errors:t}}).then(function(t){t.hasChanges&&(i(e.rule,e.property,t.backgroundValue),u=!0),a=a.concat(t.errors)});var t,r,n,o})).then(function(){return{hasChanges:u,errors:a}})}function a(r,n){var t=u(r),o=[],s=!1;return Promise.all(t.map(function(e){return function(t,n){var o,s=!1;try{o=d.parse(t)}catch(t){o=[]}return t=v(o),g.collectAndReportErrors(t.map(function(t){var e=o[t],r=e.format||"woff";return g.binaryAjax(e.url,n).then(function(t){t=btoa(t);e.url="data:font/"+r+";base64,"+t,s=!0},function(t){throw{resourceType:"fontFace",url:t.url,msg:"Unable to load font-face "+t.url}})})).then(function(t){return{srcDeclarationValue:d.serialize(o),hasChanges:s,errors:t}})}(e.style.getPropertyValue("src"),n).then(function(t){t.hasChanges&&(m.changeFontFaceRuleSrc(r,e,t.srcDeclarationValue,n),s=!0),o=o.concat(t.errors)})})).then(function(){return{hasChanges:s,errors:o}})}var g=t("./util"),m=t("./cssSupport"),l=t("./backgroundValueParser"),d=t("css-font-face-src"),y=function(t){var r=[];return t.forEach(function(t,e){t.url&&!g.isDataUri(t.url)&&r.push(e)}),r},v=function(t){var r=[];return t.forEach(function(t,e){t.url&&!g.isDataUri(t.url)&&r.push(e)}),r};h.adjustPathsOfCssResources=function(n,o,s){var t=r(o),t=c(t),a=!1;return t.forEach(function(t){var r=l.parse(t.value),e=y(r);0<e.length&&(e.forEach(function(t){var e=r[t].url,e=g.joinUrl(n,e);r[t].url=e}),e=l.serialize(r),i(t.rule,t.property,e),a=!0)}),u(o).forEach(function(t){var r,e=t.style.getPropertyValue("src");try{r=d.parse(e)}catch(t){return}0<(e=v(r)).length&&(e.forEach(function(t){var e=r[t].url,e=g.joinUrl(n,e);r[t].url=e}),m.changeFontFaceRuleSrc(o,t,d.serialize(r,s),s),a=!0)}),f(o).forEach(function(t){var e=t.href,e=g.joinUrl(n,e);m.exchangeRule(o,t,"@import url("+e+");",s),a=!0}),a},h.loadCSSImportsForRules=function(e,u,i){var t=f(e),c=[],l=!1;return Promise.all(t.map(function(t){return r=e,o=u,s=i,a=(n=t).href,a=m.unquoteString(a),t=g.joinUrl(s.baseUrl,a),(0<=o.indexOf(t)?(p(r,n,[]),Promise.resolve([])):(o.push(t),g.ajax(a,s).then(function(t){var e=m.rulesForCssText(t,s);return h.loadCSSImportsForRules(e,o,s).then(function(t){return h.adjustPathsOfCssResources(a,e,s),p(r,n,e),t.errors})},function(t){throw{resourceType:"stylesheet",url:t.url,msg:"Unable to load stylesheet "+t.url}}))).then(function(t){c=c.concat(t),l=!0},function(t){c.push(t)});var r,n,o,s,a})).then(function(){return{hasChanges:l,errors:c}})};h.loadAndInlineCSSResourcesForRules=function(e,r){var n=!1,o=[];return Promise.all([s,a].map(function(t){return t(e,r).then(function(t){n=n||t.hasChanges,o=o.concat(t.errors)})})).then(function(){return{hasChanges:n,errors:o}})}},{"./backgroundValueParser":8,"./cssSupport":9,"./util":14,"css-font-face-src":1}],12:[function(t,e,r){"use strict";function n(t){return Array.prototype.slice.call(t)}var s=t("./util");r.inline=function(t,o){var e=n(t.getElementsByTagName("img")),r=n(t.getElementsByTagName("image")),t=(t=t.getElementsByTagName("input"),Array.prototype.filter.call(t,function(t){return"image"===t.type})),r=(e=(e=e.concat(r)).concat(t)).filter(function(t){var e=null;return t.hasAttribute("src")?e=t.getAttribute("src"):t.hasAttributeNS("http://www.w3.org/1999/xlink","href")?e=t.getAttributeNS("http://www.w3.org/1999/xlink","href"):t.hasAttribute("href")&&(e=t.getAttribute("href")),null!==e&&!s.isDataUri(e)});return s.collectAndReportErrors(r.map(function(e){return r=o,n=null,(t=e).hasAttribute("src")?n=t.getAttribute("src"):t.hasAttributeNS("http://www.w3.org/1999/xlink","href")?n=t.getAttributeNS("http://www.w3.org/1999/xlink","href"):t.hasAttribute("href")&&(n=t.getAttribute("href")),t=s.getDocumentBaseUrl(t.ownerDocument),!(r=s.clone(r)).baseUrl&&t&&(r.baseUrl=t),s.getDataURIForImageURL(n,r).then(function(t){return t},function(t){throw{resourceType:"image",url:t.url,msg:"Unable to load image "+t.url}}).then(function(t){e.attributes.src?e.attributes.src.value=t:e.attributes["xlink:href"]?e.attributes["xlink:href"].value=t:e.attributes.href&&(e.attributes.href.value=t)});var t,r,n}))}},{"./util":14}],13:[function(t,e,r){"use strict";var s=t("./util");r.inline=function(t,o){t=function(t){t=t.getElementsByTagName("script");return Array.prototype.filter.call(t,function(t){return!!t.attributes.src})}(t);return s.collectAndReportErrors(t.map(function(r){return e=o,n=(t=r).attributes.src.value,t=s.getDocumentBaseUrl(t.ownerDocument),!(e=s.clone(e)).baseUrl&&t&&(e.baseUrl=t),s.ajax(n,e).catch(function(t){throw{resourceType:"script",url:t.url,msg:"Unable to load script "+t.url}}).then(function(t){var e;t=t,(e=r).attributes.removeNamedItem("src"),e.textContent=t.replace(/<\//g,"<\\/")});var t,e,n}))}},{"./util":14}],14:[function(t,e,c){"use strict";function r(t){function e(t,e){return t.substring(0,e.length)===e}return e(t,"<?xml")||e(t,"<svg")?"image/svg+xml":"image/png"}var n=t("url"),l=(c.getDocumentBaseUrl=function(t){return"about:blank"!==t.baseURI?t.baseURI:null},c.clone=function(t){var e,r={};for(e in t)t.hasOwnProperty(e)&&(r[e]=t[e]);return r},c.cloneArray=function(t){return Array.prototype.slice.apply(t,[0])},c.joinUrl=function(t,e){return t?n.resolve(t,e):e},c.isDataUri=function(t){return/^data:/.test(t)},c.collectAndReportErrors=function(t){var e=[];return Promise.all(t.map(function(t){return t.catch(function(t){e.push(t)})})).then(function(){return e})},null),a=(c.ajax=function(u,i){return new Promise(function(t,e){function r(){e({msg:"Unable to load url",url:a})}var n,o,s=new window.XMLHttpRequest,a=c.joinUrl(i.baseUrl,u);n=a,o=!1===(o=i.cache)||"none"===o||"repeated"===o?n+"?_="+(l=null!==l&&"repeated"===o?l:Date.now()):n,s.addEventListener("load",function(){200===s.status||0===s.status?t(s.response):r()},!1),s.addEventListener("error",r,!1);try{s.open("GET",o,!0),s.overrideMimeType(i.mimeType),s.send(null)}catch(t){r()}})},c.binaryAjax=function(t,e){e=c.clone(e);return e.mimeType="text/plain; charset=x-user-defined",c.ajax(t,e).then(function(t){for(var e="",r=0;r<t.length;r++)e+=String.fromCharCode(255&t.charCodeAt(r));return e})},c.getDataURIForImageURL=function(t,e){return c.binaryAjax(t,e).then(function(t){var e=btoa(t);return"data:"+r(t)+";base64,"+e})},[]);c.memoize=function(n,o,s){if("object"!=typeof s)throw new Error("cacheBucket is not an object");return function(){var t=Array.prototype.slice.call(arguments),e=o(t),r=(a.indexOf(r=n)<0&&a.push(r),a.indexOf(r));return s[r]&&s[r][e]?s[r][e]:(t=n.apply(null,t),s[r]=s[r]||{},s[r][e]=t)}}},{url:6}]},{},[10])(10)});
\ No newline at end of file
diff --git a/dist/inlineresources.js b/dist/inlineresources.js
index 07b922d587839e8f5c2fbc23a1cbcdd3ac330be7..09a5086be3b7f7818d6779e876755425ace9bbe0 100644
--- a/dist/inlineresources.js
+++ b/dist/inlineresources.js
@@ -1,6 +1,6 @@
-/*! inlineresources - v1.0.0 - 2020-10-25
+/*! inlineresources - v1.0.1 - 2025-10-28
 * http://www.github.com/cburgmer/inlineresources
-* Copyright (c) 2020 Christoph Burgmer; Licensed MIT */
+* Copyright (c) 2025 Christoph Burgmer; Licensed MIT */
 // UMD header
 (function (root, factory) {
     if (typeof define === 'function' && define.amd) {
@@ -26,456 +26,481 @@
 var cssSupport = _dereq_("./cssSupport");
 
 var trimCSSWhitespace = function (url) {
-  var whitespaceRegex = /^[\t\r\f\n ]*(.+?)[\t\r\f\n ]*$/;
+    var whitespaceRegex = /^[\t\r\f\n ]*(.+?)[\t\r\f\n ]*$/;
 
-  return url.replace(whitespaceRegex, "$1");
+    return url.replace(whitespaceRegex, "$1");
 };
 
 // TODO exporting this for the sake of unit testing. Should rather test the background value parser explicitly.
 exports.extractCssUrl = function (cssUrl) {
-  var urlRegex = /^url\(("[^"]+"|'[^']+'|[^\)]+)\)/,
-    quotedUrl;
+    var urlRegex = /^url\(("[^"]+"|'[^']+'|[^\)]+)\)/,
+        quotedUrl;
 
-  if (!urlRegex.test(cssUrl)) {
-    throw new Error("Invalid url");
-  }
+    if (!urlRegex.test(cssUrl)) {
+        throw new Error("Invalid url");
+    }
 
-  quotedUrl = urlRegex.exec(cssUrl)[1];
-  return cssSupport.unquoteString(trimCSSWhitespace(quotedUrl));
+    quotedUrl = urlRegex.exec(cssUrl)[1];
+    return cssSupport.unquoteString(trimCSSWhitespace(quotedUrl));
 };
 
 var sliceBackgroundDeclaration = function (backgroundDeclarationText) {
-  var functionParamRegexS = "\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*",
-    valueRegexS =
-      "(" + "url\\(" + functionParamRegexS + "\\)" + "|" + "[^,\\s]+" + ")",
-    simpleSingularBackgroundRegexS = "(?:\\s*" + valueRegexS + ")+",
-    simpleBackgroundRegexS =
-      "^\\s*(" +
-      simpleSingularBackgroundRegexS +
-      ")" +
-      "(?:\\s*,\\s*(" +
-      simpleSingularBackgroundRegexS +
-      "))*" +
-      "\\s*$",
-    simpleSingularBackgroundRegex = new RegExp(
-      simpleSingularBackgroundRegexS,
-      "g"
-    ),
-    outerRepeatedMatch,
-    backgroundLayers = [],
-    getValues = function (singularBackgroundDeclaration) {
-      var valueRegex = new RegExp(valueRegexS, "g"),
-        backgroundValues = [],
-        repeatedMatch;
-
-      repeatedMatch = valueRegex.exec(singularBackgroundDeclaration);
-      while (repeatedMatch) {
-        backgroundValues.push(repeatedMatch[1]);
-        repeatedMatch = valueRegex.exec(singularBackgroundDeclaration);
-      }
-      return backgroundValues;
-    };
+    var functionParamRegexS = "\\s*(?:\"[^\"]*\"|'[^']*'|[^\\(]+)\\s*",
+        valueRegexS =
+            "(" +
+            "url\\(" +
+            functionParamRegexS +
+            "\\)" +
+            "|" +
+            "[^,\\s]+" +
+            ")",
+        simpleSingularBackgroundRegexS = "(?:\\s*" + valueRegexS + ")+",
+        simpleBackgroundRegexS =
+            "^\\s*(" +
+            simpleSingularBackgroundRegexS +
+            ")" +
+            "(?:\\s*,\\s*(" +
+            simpleSingularBackgroundRegexS +
+            "))*" +
+            "\\s*$",
+        simpleSingularBackgroundRegex = new RegExp(
+            simpleSingularBackgroundRegexS,
+            "g"
+        ),
+        outerRepeatedMatch,
+        backgroundLayers = [],
+        getValues = function (singularBackgroundDeclaration) {
+            var valueRegex = new RegExp(valueRegexS, "g"),
+                backgroundValues = [],
+                repeatedMatch;
+
+            repeatedMatch = valueRegex.exec(singularBackgroundDeclaration);
+            while (repeatedMatch) {
+                backgroundValues.push(repeatedMatch[1]);
+                repeatedMatch = valueRegex.exec(singularBackgroundDeclaration);
+            }
+            return backgroundValues;
+        };
+
+    if (backgroundDeclarationText.match(new RegExp(simpleBackgroundRegexS))) {
+        outerRepeatedMatch = simpleSingularBackgroundRegex.exec(
+            backgroundDeclarationText
+        );
+        while (outerRepeatedMatch) {
+            backgroundLayers.push(getValues(outerRepeatedMatch[0]));
+            outerRepeatedMatch = simpleSingularBackgroundRegex.exec(
+                backgroundDeclarationText
+            );
+        }
 
-  if (backgroundDeclarationText.match(new RegExp(simpleBackgroundRegexS))) {
-    outerRepeatedMatch = simpleSingularBackgroundRegex.exec(
-      backgroundDeclarationText
-    );
-    while (outerRepeatedMatch) {
-      backgroundLayers.push(getValues(outerRepeatedMatch[0]));
-      outerRepeatedMatch = simpleSingularBackgroundRegex.exec(
-        backgroundDeclarationText
-      );
+        return backgroundLayers;
     }
-
-    return backgroundLayers;
-  }
-  return [];
+    return [];
 };
 
 var findBackgroundImageUrlInValues = function (values) {
-  var i, url;
-
-  for (i = 0; i < values.length; i++) {
-    try {
-      url = exports.extractCssUrl(values[i]);
-      return {
-        url: url,
-        idx: i,
-      };
-    } catch (e) {}
-  }
+    var i, url;
+
+    for (i = 0; i < values.length; i++) {
+        try {
+            url = exports.extractCssUrl(values[i]);
+            return {
+                url: url,
+                idx: i,
+            };
+        } catch (e) {}
+    }
 };
 
 exports.parse = function (backgroundValue) {
-  var backgroundLayers = sliceBackgroundDeclaration(backgroundValue);
+    var backgroundLayers = sliceBackgroundDeclaration(backgroundValue);
 
-  return backgroundLayers.map(function (backgroundLayerValues) {
-    var urlMatch = findBackgroundImageUrlInValues(backgroundLayerValues);
+    return backgroundLayers.map(function (backgroundLayerValues) {
+        var urlMatch = findBackgroundImageUrlInValues(backgroundLayerValues);
 
-    if (urlMatch) {
-      return {
-        preUrl: backgroundLayerValues.slice(0, urlMatch.idx),
-        url: urlMatch.url,
-        postUrl: backgroundLayerValues.slice(urlMatch.idx + 1),
-      };
-    } else {
-      return {
-        preUrl: backgroundLayerValues,
-      };
-    }
-  });
+        if (urlMatch) {
+            return {
+                preUrl: backgroundLayerValues.slice(0, urlMatch.idx),
+                url: urlMatch.url,
+                postUrl: backgroundLayerValues.slice(urlMatch.idx + 1),
+            };
+        } else {
+            return {
+                preUrl: backgroundLayerValues,
+            };
+        }
+    });
 };
 
 exports.serialize = function (parsedBackground) {
-  var backgroundLayers = parsedBackground.map(function (backgroundLayer) {
-    var values = [].concat(backgroundLayer.preUrl);
+    var backgroundLayers = parsedBackground.map(function (backgroundLayer) {
+        var values = [].concat(backgroundLayer.preUrl);
 
-    if (backgroundLayer.url) {
-      values.push('url("' + backgroundLayer.url + '")');
-    }
-    if (backgroundLayer.postUrl) {
-      values = values.concat(backgroundLayer.postUrl);
-    }
+        if (backgroundLayer.url) {
+            values.push('url("' + backgroundLayer.url + '")');
+        }
+        if (backgroundLayer.postUrl) {
+            values = values.concat(backgroundLayer.postUrl);
+        }
 
-    return values.join(" ");
-  });
+        return values.join(" ");
+    });
 
-  return backgroundLayers.join(", ");
+    return backgroundLayers.join(", ");
 };
 
 },{"./cssSupport":2}],2:[function(_dereq_,module,exports){
 "use strict";
 
 exports.unquoteString = function (quotedUrl) {
-  var doubleQuoteRegex = /^"(.*)"$/,
-    singleQuoteRegex = /^'(.*)'$/;
-
-  if (doubleQuoteRegex.test(quotedUrl)) {
-    return quotedUrl.replace(doubleQuoteRegex, "$1");
-  } else {
-    if (singleQuoteRegex.test(quotedUrl)) {
-      return quotedUrl.replace(singleQuoteRegex, "$1");
+    var doubleQuoteRegex = /^"(.*)"$/,
+        singleQuoteRegex = /^'(.*)'$/;
+
+    if (doubleQuoteRegex.test(quotedUrl)) {
+        return quotedUrl.replace(doubleQuoteRegex, "$1");
     } else {
-      return quotedUrl;
+        if (singleQuoteRegex.test(quotedUrl)) {
+            return quotedUrl.replace(singleQuoteRegex, "$1");
+        } else {
+            return quotedUrl;
+        }
     }
-  }
 };
 
-exports.rulesForCssText = function (styleContent) {
-  var doc = document.implementation.createHTMLDocument(""),
-    styleElement = document.createElement("style"),
-    rules;
+exports.rulesForCssText = function (styleContent, options) {
+    var doc = document.implementation.createHTMLDocument(""),
+        styleElement = document.createElement("style"),
+        rules;
+
+    styleElement.textContent = styleContent;
+
+    if (options && options.nonce) {
+        styleElement.nonce = options.nonce;
+    } else if (options && options.integrity) {
+        styleElement.setAttribute("integrity", options.integrity);
+    }
 
-  styleElement.textContent = styleContent;
-  // the style will only be parsed once it is added to a document
-  doc.body.appendChild(styleElement);
-  rules = styleElement.sheet.cssRules;
+    // the style will only be parsed once it is added to a document
+    doc.body.appendChild(styleElement);
+    rules = styleElement.sheet.cssRules;
 
-  return Array.prototype.slice.call(rules);
+    return Array.prototype.slice.call(rules);
 };
 
 exports.cssRulesToText = function (cssRules) {
-  return cssRules.reduce(function (cssText, rule) {
-    return cssText + rule.cssText;
-  }, "");
+    return cssRules.reduce(function (cssText, rule) {
+        return cssText + rule.cssText;
+    }, "");
 };
 
-exports.exchangeRule = function (cssRules, rule, newRuleText) {
-  var ruleIdx = cssRules.indexOf(rule);
+exports.exchangeRule = function (cssRules, rule, newRuleText, options) {
+    var ruleIdx = cssRules.indexOf(rule);
 
-  // We create a new document and stylesheet to parse the rule,
-  // instead of relying on rule.parentStyleSheet, because
-  // rule.parentStyleSheet may be null
-  // (https://github.com/cburgmer/inlineresources/issues/3)
-  cssRules[ruleIdx] = exports.rulesForCssText(newRuleText)[0];
+    // We create a new document and stylesheet to parse the rule,
+    // instead of relying on rule.parentStyleSheet, because
+    // rule.parentStyleSheet may be null
+    // (https://github.com/cburgmer/inlineresources/issues/3)
+    cssRules[ruleIdx] = exports.rulesForCssText(newRuleText, options)[0];
 };
 
 // Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=443978
-exports.changeFontFaceRuleSrc = function (cssRules, rule, newSrc) {
-  var newRuleText =
-    "@font-face { font-family: " +
-    rule.style.getPropertyValue("font-family") +
-    "; ";
-
-  if (rule.style.getPropertyValue("font-style")) {
-    newRuleText +=
-      "font-style: " + rule.style.getPropertyValue("font-style") + "; ";
-  }
-
-  if (rule.style.getPropertyValue("font-weight")) {
-    newRuleText +=
-      "font-weight: " + rule.style.getPropertyValue("font-weight") + "; ";
-  }
-
-  if (rule.style.getPropertyValue("unicode-range")) {
-    newRuleText +=
-      "unicode-range: " + rule.style.getPropertyValue("unicode-range") + "; ";
-  }
-
-  newRuleText += "src: " + newSrc + "}";
-  exports.exchangeRule(cssRules, rule, newRuleText);
+exports.changeFontFaceRuleSrc = function (cssRules, rule, newSrc, options) {
+    var newRuleText =
+        "@font-face { font-family: " +
+        rule.style.getPropertyValue("font-family") +
+        "; ";
+
+    if (rule.style.getPropertyValue("font-style")) {
+        newRuleText +=
+            "font-style: " + rule.style.getPropertyValue("font-style") + "; ";
+    }
+
+    if (rule.style.getPropertyValue("font-weight")) {
+        newRuleText +=
+            "font-weight: " + rule.style.getPropertyValue("font-weight") + "; ";
+    }
+
+    if (rule.style.getPropertyValue("unicode-range")) {
+        newRuleText +=
+            "unicode-range: " +
+            rule.style.getPropertyValue("unicode-range") +
+            "; ";
+    }
+
+    newRuleText += "src: " + newSrc + "}";
+    exports.exchangeRule(cssRules, rule, newRuleText, options);
 };
 
 },{}],3:[function(_dereq_,module,exports){
 "use strict";
 
 var util = _dereq_("./util"),
-  inlineImage = _dereq_("./inlineImage"),
-  inlineScript = _dereq_("./inlineScript"),
-  inlineCss = _dereq_("./inlineCss"),
-  cssSupport = _dereq_("./cssSupport");
+    inlineImage = _dereq_("./inlineImage"),
+    inlineScript = _dereq_("./inlineScript"),
+    inlineCss = _dereq_("./inlineCss"),
+    cssSupport = _dereq_("./cssSupport");
 
 var getUrlBasePath = function (url) {
-  return util.joinUrl(url, ".");
+    return util.joinUrl(url, ".");
 };
 
 var parameterHashFunction = function (params) {
-  // HACK JSON.stringify is poor man's hashing;
-  // same objects might not receive same result as key order is not guaranteed
-  var a = params.map(function (param, idx) {
-    // Only include options relevant for method
-    if (idx === params.length - 1) {
-      param = {
-        // Two different HTML pages on the same path level have the same base path, but a different URL
-        baseUrl: getUrlBasePath(param.baseUrl),
-      };
-    }
-    return JSON.stringify(param);
-  });
-  return a;
+    // HACK JSON.stringify is poor man's hashing;
+    // same objects might not receive same result as key order is not guaranteed
+    var a = params.map(function (param, idx) {
+        // Only include options relevant for method
+        if (idx === params.length - 1) {
+            param = {
+                // Two different HTML pages on the same path level have the same base path, but a different URL
+                baseUrl: getUrlBasePath(param.baseUrl),
+            };
+        }
+        return JSON.stringify(param);
+    });
+    return a;
 };
 
 var memoizeFunctionOnCaching = function (func, options) {
-  if (
-    options.cache !== false &&
-    options.cache !== "none" &&
-    options.cacheBucket
-  ) {
-    return util.memoize(func, parameterHashFunction, options.cacheBucket);
-  } else {
-    return func;
-  }
+    if (
+        options.cache !== false &&
+        options.cache !== "none" &&
+        options.cacheBucket
+    ) {
+        return util.memoize(func, parameterHashFunction, options.cacheBucket);
+    } else {
+        return func;
+    }
 };
 
 /* Style inlining */
 
 var requestExternalsForStylesheet = function (
-  styleContent,
-  alreadyLoadedCssUrls,
-  options
+    styleContent,
+    alreadyLoadedCssUrls,
+    options
 ) {
-  var cssRules = cssSupport.rulesForCssText(styleContent);
-
-  return inlineCss
-    .loadCSSImportsForRules(cssRules, alreadyLoadedCssUrls, options)
-    .then(function (cssImportResult) {
-      return inlineCss
-        .loadAndInlineCSSResourcesForRules(cssRules, options)
-        .then(function (cssResourcesResult) {
-          var errors = cssImportResult.errors.concat(cssResourcesResult.errors),
-            hasChanges =
-              cssImportResult.hasChanges || cssResourcesResult.hasChanges;
-
-          if (hasChanges) {
-            styleContent = cssSupport.cssRulesToText(cssRules);
-          }
-
-          return {
-            hasChanges: hasChanges,
-            content: styleContent,
-            errors: errors,
-          };
+    var cssRules = cssSupport.rulesForCssText(styleContent, options);
+
+    return inlineCss
+        .loadCSSImportsForRules(cssRules, alreadyLoadedCssUrls, options)
+        .then(function (cssImportResult) {
+            return inlineCss
+                .loadAndInlineCSSResourcesForRules(cssRules, options)
+                .then(function (cssResourcesResult) {
+                    var errors = cssImportResult.errors.concat(
+                            cssResourcesResult.errors
+                        ),
+                        hasChanges =
+                            cssImportResult.hasChanges ||
+                            cssResourcesResult.hasChanges;
+
+                    if (hasChanges) {
+                        styleContent = cssSupport.cssRulesToText(cssRules);
+                    }
+
+                    return {
+                        hasChanges: hasChanges,
+                        content: styleContent,
+                        errors: errors,
+                    };
+                });
         });
-    });
 };
 
 var loadAndInlineCssForStyle = function (style, options, alreadyLoadedCssUrls) {
-  var styleContent = style.textContent,
-    processExternals = memoizeFunctionOnCaching(
-      requestExternalsForStylesheet,
-      options
-    );
+    var styleContent = style.textContent,
+        processExternals = memoizeFunctionOnCaching(
+            requestExternalsForStylesheet,
+            options
+        );
 
-  return processExternals(styleContent, alreadyLoadedCssUrls, options).then(
-    function (result) {
-      if (result.hasChanges) {
-        style.childNodes[0].nodeValue = result.content;
-      }
+    return processExternals(styleContent, alreadyLoadedCssUrls, options).then(
+        function (result) {
+            if (result.hasChanges) {
+                style.childNodes[0].nodeValue = result.content;
+            }
 
-      return util.cloneArray(result.errors);
-    }
-  );
+            return util.cloneArray(result.errors);
+        }
+    );
 };
 
 var getCssStyleElements = function (doc) {
-  var styles = doc.getElementsByTagName("style");
+    var styles = doc.getElementsByTagName("style");
 
-  return Array.prototype.filter.call(styles, function (style) {
-    return !style.attributes.type || style.attributes.type.value === "text/css";
-  });
+    return Array.prototype.filter.call(styles, function (style) {
+        return (
+            !style.attributes.type || style.attributes.type.value === "text/css"
+        );
+    });
 };
 
 exports.loadAndInlineStyles = function (doc, options) {
-  var styles = getCssStyleElements(doc),
-    allErrors = [],
-    alreadyLoadedCssUrls = [],
-    inlineOptions;
-
-  inlineOptions = util.clone(options);
-  inlineOptions.baseUrl = inlineOptions.baseUrl || util.getDocumentBaseUrl(doc);
-
-  return Promise.all(
-    styles.map(function (style) {
-      return loadAndInlineCssForStyle(
-        style,
-        inlineOptions,
-        alreadyLoadedCssUrls
-      ).then(function (errors) {
-        allErrors = allErrors.concat(errors);
-      });
-    })
-  ).then(function () {
-    return allErrors;
-  });
+    var styles = getCssStyleElements(doc),
+        allErrors = [],
+        alreadyLoadedCssUrls = [],
+        inlineOptions;
+
+    inlineOptions = util.clone(options);
+    inlineOptions.baseUrl =
+        inlineOptions.baseUrl || util.getDocumentBaseUrl(doc);
+
+    return Promise.all(
+        styles.map(function (style) {
+            return loadAndInlineCssForStyle(
+                style,
+                inlineOptions,
+                alreadyLoadedCssUrls
+            ).then(function (errors) {
+                allErrors = allErrors.concat(errors);
+            });
+        })
+    ).then(function () {
+        return allErrors;
+    });
 };
 
 /* CSS link inlining */
 
 var substituteLinkWithInlineStyle = function (oldLinkNode, styleContent) {
-  var parent = oldLinkNode.parentNode,
-    styleNode;
-
-  styleContent = styleContent.trim();
-  if (styleContent) {
-    styleNode = oldLinkNode.ownerDocument.createElement("style");
-    styleNode.type = "text/css";
-    styleNode.appendChild(
-      oldLinkNode.ownerDocument.createTextNode(styleContent)
-    );
+    var parent = oldLinkNode.parentNode,
+        styleNode;
+
+    styleContent = styleContent.trim();
+    if (styleContent) {
+        styleNode = oldLinkNode.ownerDocument.createElement("style");
+        styleNode.type = "text/css";
+        styleNode.appendChild(
+            oldLinkNode.ownerDocument.createTextNode(styleContent)
+        );
 
-    parent.insertBefore(styleNode, oldLinkNode);
-  }
+        parent.insertBefore(styleNode, oldLinkNode);
+    }
 
-  parent.removeChild(oldLinkNode);
+    parent.removeChild(oldLinkNode);
 };
 
 var requestStylesheetAndInlineResources = function (url, options) {
-  return util
-    .ajax(url, options)
-    .then(function (content) {
-      var cssRules = cssSupport.rulesForCssText(content);
-
-      return {
-        content: content,
-        cssRules: cssRules,
-      };
-    })
-    .then(function (result) {
-      var hasChangesFromPathAdjustment = inlineCss.adjustPathsOfCssResources(
-        url,
-        result.cssRules
-      );
-
-      return {
-        content: result.content,
-        cssRules: result.cssRules,
-        hasChanges: hasChangesFromPathAdjustment,
-      };
-    })
-    .then(function (result) {
-      return inlineCss
-        .loadCSSImportsForRules(result.cssRules, [], options)
-        .then(function (cssImportResult) {
-          return {
-            content: result.content,
-            cssRules: result.cssRules,
-            hasChanges: result.hasChanges || cssImportResult.hasChanges,
-            errors: cssImportResult.errors,
-          };
-        });
-    })
-    .then(function (result) {
-      return inlineCss
-        .loadAndInlineCSSResourcesForRules(result.cssRules, options)
-        .then(function (cssResourcesResult) {
-          return {
-            content: result.content,
-            cssRules: result.cssRules,
-            hasChanges: result.hasChanges || cssResourcesResult.hasChanges,
-            errors: result.errors.concat(cssResourcesResult.errors),
-          };
+    return util
+        .ajax(url, options)
+        .then(function (content) {
+            var cssRules = cssSupport.rulesForCssText(content, options);
+
+            return {
+                content: content,
+                cssRules: cssRules,
+            };
+        })
+        .then(function (result) {
+            var hasChangesFromPathAdjustment =
+                inlineCss.adjustPathsOfCssResources(
+                    url,
+                    result.cssRules,
+                    options
+                );
+
+            return {
+                content: result.content,
+                cssRules: result.cssRules,
+                hasChanges: hasChangesFromPathAdjustment,
+            };
+        })
+        .then(function (result) {
+            return inlineCss
+                .loadCSSImportsForRules(result.cssRules, [], options)
+                .then(function (cssImportResult) {
+                    return {
+                        content: result.content,
+                        cssRules: result.cssRules,
+                        hasChanges:
+                            result.hasChanges || cssImportResult.hasChanges,
+                        errors: cssImportResult.errors,
+                    };
+                });
+        })
+        .then(function (result) {
+            return inlineCss
+                .loadAndInlineCSSResourcesForRules(result.cssRules, options)
+                .then(function (cssResourcesResult) {
+                    return {
+                        content: result.content,
+                        cssRules: result.cssRules,
+                        hasChanges:
+                            result.hasChanges || cssResourcesResult.hasChanges,
+                        errors: result.errors.concat(cssResourcesResult.errors),
+                    };
+                });
+        })
+        .then(function (result) {
+            var content = result.content;
+            if (result.hasChanges) {
+                content = cssSupport.cssRulesToText(result.cssRules);
+            }
+            return {
+                content: content,
+                errors: result.errors,
+            };
         });
-    })
-    .then(function (result) {
-      var content = result.content;
-      if (result.hasChanges) {
-        content = cssSupport.cssRulesToText(result.cssRules);
-      }
-      return {
-        content: content,
-        errors: result.errors,
-      };
-    });
 };
 
 var loadLinkedCSS = function (link, options) {
-  var cssHref = link.attributes.href.value,
-    documentBaseUrl = util.getDocumentBaseUrl(link.ownerDocument),
-    ajaxOptions = util.clone(options);
+    var cssHref = link.attributes.href.value,
+        documentBaseUrl = util.getDocumentBaseUrl(link.ownerDocument),
+        ajaxOptions = util.clone(options);
 
-  if (!ajaxOptions.baseUrl && documentBaseUrl) {
-    ajaxOptions.baseUrl = documentBaseUrl;
-  }
+    if (!ajaxOptions.baseUrl && documentBaseUrl) {
+        ajaxOptions.baseUrl = documentBaseUrl;
+    }
 
-  var processStylesheet = memoizeFunctionOnCaching(
-    requestStylesheetAndInlineResources,
-    options
-  );
+    var processStylesheet = memoizeFunctionOnCaching(
+        requestStylesheetAndInlineResources,
+        options
+    );
 
-  return processStylesheet(cssHref, ajaxOptions).then(function (result) {
-    return {
-      content: result.content,
-      errors: util.cloneArray(result.errors),
-    };
-  });
+    return processStylesheet(cssHref, ajaxOptions).then(function (result) {
+        return {
+            content: result.content,
+            errors: util.cloneArray(result.errors),
+        };
+    });
 };
 
 var getCssStylesheetLinks = function (doc) {
-  var links = doc.getElementsByTagName("link");
+    var links = doc.getElementsByTagName("link");
 
-  return Array.prototype.filter.call(links, function (link) {
-    return (
-      link.attributes.rel &&
-      link.attributes.rel.value === "stylesheet" &&
-      (!link.attributes.type || link.attributes.type.value === "text/css")
-    );
-  });
+    return Array.prototype.filter.call(links, function (link) {
+        return (
+            link.attributes.rel &&
+            link.attributes.rel.value === "stylesheet" &&
+            (!link.attributes.type || link.attributes.type.value === "text/css")
+        );
+    });
 };
 
 exports.loadAndInlineCssLinks = function (doc, options) {
-  var links = getCssStylesheetLinks(doc),
-    errors = [];
-
-  return Promise.all(
-    links.map(function (link) {
-      return loadLinkedCSS(link, options).then(
-        function (result) {
-          substituteLinkWithInlineStyle(link, result.content + "\n");
-
-          errors = errors.concat(result.errors);
-        },
-        function (e) {
-          errors.push({
-            resourceType: "stylesheet",
-            url: e.url,
-            msg: "Unable to load stylesheet " + e.url,
-          });
-        }
-      );
-    })
-  ).then(function () {
-    return errors;
-  });
+    var links = getCssStylesheetLinks(doc),
+        errors = [];
+
+    return Promise.all(
+        links.map(function (link) {
+            return loadLinkedCSS(link, options).then(
+                function (result) {
+                    substituteLinkWithInlineStyle(link, result.content + "\n");
+
+                    errors = errors.concat(result.errors);
+                },
+                function (e) {
+                    errors.push({
+                        resourceType: "stylesheet",
+                        url: e.url,
+                        msg: "Unable to load stylesheet " + e.url,
+                    });
+                }
+            );
+        })
+    ).then(function () {
+        return errors;
+    });
 };
 
 /* Main */
@@ -484,449 +509,473 @@ exports.loadAndInlineImages = inlineImage.inline;
 exports.loadAndInlineScript = inlineScript.inline;
 
 exports.inlineReferences = function (doc, options) {
-  var allErrors = [],
-    inlineFuncs = [
-      exports.loadAndInlineImages,
-      exports.loadAndInlineStyles,
-      exports.loadAndInlineCssLinks,
-    ];
-
-  if (options.inlineScripts !== false) {
-    inlineFuncs.push(exports.loadAndInlineScript);
-  }
-
-  return Promise.all(
-    inlineFuncs.map(function (func) {
-      return func(doc, options).then(function (errors) {
-        allErrors = allErrors.concat(errors);
-      });
-    })
-  ).then(function () {
-    return allErrors;
-  });
+    var allErrors = [],
+        inlineFuncs = [
+            exports.loadAndInlineImages,
+            exports.loadAndInlineStyles,
+            exports.loadAndInlineCssLinks,
+        ];
+
+    if (options.inlineScripts !== false) {
+        inlineFuncs.push(exports.loadAndInlineScript);
+    }
+
+    return Promise.all(
+        inlineFuncs.map(function (func) {
+            return func(doc, options).then(function (errors) {
+                allErrors = allErrors.concat(errors);
+            });
+        })
+    ).then(function () {
+        return allErrors;
+    });
 };
 
 },{"./cssSupport":2,"./inlineCss":4,"./inlineImage":5,"./inlineScript":6,"./util":7}],4:[function(_dereq_,module,exports){
 "use strict";
 
 var util = _dereq_("./util"),
-  cssSupport = _dereq_("./cssSupport"),
-  backgroundValueParser = _dereq_("./backgroundValueParser"),
-  fontFaceSrcValueParser = _dereq_("css-font-face-src");
+    cssSupport = _dereq_("./cssSupport"),
+    backgroundValueParser = _dereq_("./backgroundValueParser"),
+    fontFaceSrcValueParser = _dereq_("css-font-face-src");
 
 var updateCssPropertyValue = function (rule, property, value) {
-  rule.style.setProperty(
-    property,
-    value,
-    rule.style.getPropertyPriority(property)
-  );
+    rule.style.setProperty(
+        property,
+        value,
+        rule.style.getPropertyPriority(property)
+    );
 };
 
 var findBackgroundImageRules = function (cssRules) {
-  return cssRules.filter(function (rule) {
-    return (
-      rule.type === window.CSSRule.STYLE_RULE &&
-      (rule.style.getPropertyValue("background-image") ||
-        rule.style.getPropertyValue("background"))
-    );
-  });
+    return cssRules.filter(function (rule) {
+        return (
+            rule.type === window.CSSRule.STYLE_RULE &&
+            (rule.style.getPropertyValue("background-image") ||
+                rule.style.getPropertyValue("background"))
+        );
+    });
 };
 
 var findBackgroundDeclarations = function (rules) {
-  var backgroundDeclarations = [];
-
-  rules.forEach(function (rule) {
-    if (rule.style.getPropertyValue("background-image")) {
-      backgroundDeclarations.push({
-        property: "background-image",
-        value: rule.style.getPropertyValue("background-image"),
-        rule: rule,
-      });
-    } else if (rule.style.getPropertyValue("background")) {
-      backgroundDeclarations.push({
-        property: "background",
-        value: rule.style.getPropertyValue("background"),
-        rule: rule,
-      });
-    }
-  });
+    var backgroundDeclarations = [];
+
+    rules.forEach(function (rule) {
+        if (rule.style.getPropertyValue("background-image")) {
+            backgroundDeclarations.push({
+                property: "background-image",
+                value: rule.style.getPropertyValue("background-image"),
+                rule: rule,
+            });
+        } else if (rule.style.getPropertyValue("background")) {
+            backgroundDeclarations.push({
+                property: "background",
+                value: rule.style.getPropertyValue("background"),
+                rule: rule,
+            });
+        }
+    });
 
-  return backgroundDeclarations;
+    return backgroundDeclarations;
 };
 
 var findFontFaceRules = function (cssRules) {
-  return cssRules.filter(function (rule) {
-    return (
-      rule.type === window.CSSRule.FONT_FACE_RULE &&
-      rule.style.getPropertyValue("src")
-    );
-  });
+    return cssRules.filter(function (rule) {
+        return (
+            rule.type === window.CSSRule.FONT_FACE_RULE &&
+            rule.style.getPropertyValue("src")
+        );
+    });
 };
 
 var findCSSImportRules = function (cssRules) {
-  return cssRules.filter(function (rule) {
-    return rule.type === window.CSSRule.IMPORT_RULE && rule.href;
-  });
+    return cssRules.filter(function (rule) {
+        return rule.type === window.CSSRule.IMPORT_RULE && rule.href;
+    });
 };
 
 var findExternalBackgroundUrls = function (parsedBackground) {
-  var matchIndices = [];
+    var matchIndices = [];
 
-  parsedBackground.forEach(function (backgroundLayer, i) {
-    if (backgroundLayer.url && !util.isDataUri(backgroundLayer.url)) {
-      matchIndices.push(i);
-    }
-  });
+    parsedBackground.forEach(function (backgroundLayer, i) {
+        if (backgroundLayer.url && !util.isDataUri(backgroundLayer.url)) {
+            matchIndices.push(i);
+        }
+    });
 
-  return matchIndices;
+    return matchIndices;
 };
 
 var findExternalFontFaceUrls = function (parsedFontFaceSources) {
-  var sourceIndices = [];
-  parsedFontFaceSources.forEach(function (sourceItem, i) {
-    if (sourceItem.url && !util.isDataUri(sourceItem.url)) {
-      sourceIndices.push(i);
-    }
-  });
-  return sourceIndices;
+    var sourceIndices = [];
+    parsedFontFaceSources.forEach(function (sourceItem, i) {
+        if (sourceItem.url && !util.isDataUri(sourceItem.url)) {
+            sourceIndices.push(i);
+        }
+    });
+    return sourceIndices;
 };
 
-exports.adjustPathsOfCssResources = function (baseUrl, cssRules) {
-  var backgroundRules = findBackgroundImageRules(cssRules),
-    backgroundDeclarations = findBackgroundDeclarations(backgroundRules),
-    change = false;
+exports.adjustPathsOfCssResources = function (baseUrl, cssRules, options) {
+    var backgroundRules = findBackgroundImageRules(cssRules),
+        backgroundDeclarations = findBackgroundDeclarations(backgroundRules),
+        change = false;
 
-  backgroundDeclarations.forEach(function (declaration) {
-    var parsedBackground = backgroundValueParser.parse(declaration.value),
-      externalBackgroundIndices = findExternalBackgroundUrls(parsedBackground),
-      backgroundValue;
+    backgroundDeclarations.forEach(function (declaration) {
+        var parsedBackground = backgroundValueParser.parse(declaration.value),
+            externalBackgroundIndices =
+                findExternalBackgroundUrls(parsedBackground),
+            backgroundValue;
 
-    if (externalBackgroundIndices.length > 0) {
-      externalBackgroundIndices.forEach(function (backgroundLayerIndex) {
-        var relativeUrl = parsedBackground[backgroundLayerIndex].url,
-          url = util.joinUrl(baseUrl, relativeUrl);
-        parsedBackground[backgroundLayerIndex].url = url;
-      });
-
-      backgroundValue = backgroundValueParser.serialize(parsedBackground);
-
-      updateCssPropertyValue(
-        declaration.rule,
-        declaration.property,
-        backgroundValue
-      );
-
-      change = true;
-    }
-  });
-  findFontFaceRules(cssRules).forEach(function (rule) {
-    var fontFaceSrcDeclaration = rule.style.getPropertyValue("src"),
-      parsedFontFaceSources,
-      externalFontFaceUrlIndices;
+        if (externalBackgroundIndices.length > 0) {
+            externalBackgroundIndices.forEach(function (backgroundLayerIndex) {
+                var relativeUrl = parsedBackground[backgroundLayerIndex].url,
+                    url = util.joinUrl(baseUrl, relativeUrl);
+                parsedBackground[backgroundLayerIndex].url = url;
+            });
 
-    try {
-      parsedFontFaceSources = fontFaceSrcValueParser.parse(
-        fontFaceSrcDeclaration
-      );
-    } catch (e) {
-      return;
-    }
-    externalFontFaceUrlIndices = findExternalFontFaceUrls(
-      parsedFontFaceSources
-    );
+            backgroundValue = backgroundValueParser.serialize(parsedBackground);
 
-    if (externalFontFaceUrlIndices.length > 0) {
-      externalFontFaceUrlIndices.forEach(function (fontFaceUrlIndex) {
-        var relativeUrl = parsedFontFaceSources[fontFaceUrlIndex].url,
-          url = util.joinUrl(baseUrl, relativeUrl);
+            updateCssPropertyValue(
+                declaration.rule,
+                declaration.property,
+                backgroundValue
+            );
 
-        parsedFontFaceSources[fontFaceUrlIndex].url = url;
-      });
+            change = true;
+        }
+    });
+    findFontFaceRules(cssRules).forEach(function (rule) {
+        var fontFaceSrcDeclaration = rule.style.getPropertyValue("src"),
+            parsedFontFaceSources,
+            externalFontFaceUrlIndices;
+
+        try {
+            parsedFontFaceSources = fontFaceSrcValueParser.parse(
+                fontFaceSrcDeclaration
+            );
+        } catch (e) {
+            return;
+        }
+        externalFontFaceUrlIndices = findExternalFontFaceUrls(
+            parsedFontFaceSources
+        );
 
-      cssSupport.changeFontFaceRuleSrc(
-        cssRules,
-        rule,
-        fontFaceSrcValueParser.serialize(parsedFontFaceSources)
-      );
+        if (externalFontFaceUrlIndices.length > 0) {
+            externalFontFaceUrlIndices.forEach(function (fontFaceUrlIndex) {
+                var relativeUrl = parsedFontFaceSources[fontFaceUrlIndex].url,
+                    url = util.joinUrl(baseUrl, relativeUrl);
+
+                parsedFontFaceSources[fontFaceUrlIndex].url = url;
+            });
+
+            cssSupport.changeFontFaceRuleSrc(
+                cssRules,
+                rule,
+                fontFaceSrcValueParser.serialize(
+                    parsedFontFaceSources,
+                    options
+                ),
+                options
+            );
 
-      change = true;
-    }
-  });
-  findCSSImportRules(cssRules).forEach(function (rule) {
-    var cssUrl = rule.href,
-      url = util.joinUrl(baseUrl, cssUrl);
+            change = true;
+        }
+    });
+    findCSSImportRules(cssRules).forEach(function (rule) {
+        var cssUrl = rule.href,
+            url = util.joinUrl(baseUrl, cssUrl);
 
-    cssSupport.exchangeRule(cssRules, rule, "@import url(" + url + ");");
+        cssSupport.exchangeRule(
+            cssRules,
+            rule,
+            "@import url(" + url + ");",
+            options
+        );
 
-    change = true;
-  });
+        change = true;
+    });
 
-  return change;
+    return change;
 };
 
 /* CSS import inlining */
 
 var substituteRule = function (cssRules, rule, newCssRules) {
-  var position = cssRules.indexOf(rule);
+    var position = cssRules.indexOf(rule);
 
-  cssRules.splice(position, 1);
+    cssRules.splice(position, 1);
 
-  newCssRules.forEach(function (newRule, i) {
-    cssRules.splice(position + i, 0, newRule);
-  });
+    newCssRules.forEach(function (newRule, i) {
+        cssRules.splice(position + i, 0, newRule);
+    });
 };
 
 var loadAndInlineCSSImport = function (
-  cssRules,
-  rule,
-  alreadyLoadedCssUrls,
-  options
+    cssRules,
+    rule,
+    alreadyLoadedCssUrls,
+    options
 ) {
-  var url = rule.href,
-    cssHrefRelativeToDoc;
-
-  url = cssSupport.unquoteString(url);
+    var url = rule.href,
+        cssHrefRelativeToDoc;
 
-  cssHrefRelativeToDoc = util.joinUrl(options.baseUrl, url);
+    url = cssSupport.unquoteString(url);
 
-  if (alreadyLoadedCssUrls.indexOf(cssHrefRelativeToDoc) >= 0) {
-    // Remove URL by adding empty string
-    substituteRule(cssRules, rule, []);
-    return Promise.resolve([]);
-  } else {
-    alreadyLoadedCssUrls.push(cssHrefRelativeToDoc);
-  }
+    cssHrefRelativeToDoc = util.joinUrl(options.baseUrl, url);
 
-  return util.ajax(url, options).then(
-    function (cssText) {
-      var externalCssRules = cssSupport.rulesForCssText(cssText);
-
-      // Recursively follow @import statements
-      return exports
-        .loadCSSImportsForRules(externalCssRules, alreadyLoadedCssUrls, options)
-        .then(function (result) {
-          exports.adjustPathsOfCssResources(url, externalCssRules);
-
-          substituteRule(cssRules, rule, externalCssRules);
-
-          return result.errors;
-        });
-    },
-    function (e) {
-      throw {
-        resourceType: "stylesheet",
-        url: e.url,
-        msg: "Unable to load stylesheet " + e.url,
-      };
+    if (alreadyLoadedCssUrls.indexOf(cssHrefRelativeToDoc) >= 0) {
+        // Remove URL by adding empty string
+        substituteRule(cssRules, rule, []);
+        return Promise.resolve([]);
+    } else {
+        alreadyLoadedCssUrls.push(cssHrefRelativeToDoc);
     }
-  );
-};
 
-exports.loadCSSImportsForRules = function (
-  cssRules,
-  alreadyLoadedCssUrls,
-  options
-) {
-  var rulesToInline = findCSSImportRules(cssRules),
-    errors = [],
-    hasChanges = false;
-
-  return Promise.all(
-    rulesToInline.map(function (rule) {
-      return loadAndInlineCSSImport(
-        cssRules,
-        rule,
-        alreadyLoadedCssUrls,
-        options
-      ).then(
-        function (moreErrors) {
-          errors = errors.concat(moreErrors);
-
-          hasChanges = true;
+    return util.ajax(url, options).then(
+        function (cssText) {
+            var externalCssRules = cssSupport.rulesForCssText(cssText, options);
+
+            // Recursively follow @import statements
+            return exports
+                .loadCSSImportsForRules(
+                    externalCssRules,
+                    alreadyLoadedCssUrls,
+                    options
+                )
+                .then(function (result) {
+                    exports.adjustPathsOfCssResources(
+                        url,
+                        externalCssRules,
+                        options
+                    );
+
+                    substituteRule(cssRules, rule, externalCssRules);
+
+                    return result.errors;
+                });
         },
         function (e) {
-          errors.push(e);
+            throw {
+                resourceType: "stylesheet",
+                url: e.url,
+                msg: "Unable to load stylesheet " + e.url,
+            };
         }
-      );
-    })
-  ).then(function () {
-    return {
-      hasChanges: hasChanges,
-      errors: errors,
-    };
-  });
+    );
+};
+
+exports.loadCSSImportsForRules = function (
+    cssRules,
+    alreadyLoadedCssUrls,
+    options
+) {
+    var rulesToInline = findCSSImportRules(cssRules),
+        errors = [],
+        hasChanges = false;
+
+    return Promise.all(
+        rulesToInline.map(function (rule) {
+            return loadAndInlineCSSImport(
+                cssRules,
+                rule,
+                alreadyLoadedCssUrls,
+                options
+            ).then(
+                function (moreErrors) {
+                    errors = errors.concat(moreErrors);
+
+                    hasChanges = true;
+                },
+                function (e) {
+                    errors.push(e);
+                }
+            );
+        })
+    ).then(function () {
+        return {
+            hasChanges: hasChanges,
+            errors: errors,
+        };
+    });
 };
 
 /* CSS linked resource inlining */
 
 var loadAndInlineBackgroundImages = function (backgroundValue, options) {
-  var parsedBackground = backgroundValueParser.parse(backgroundValue),
-    externalBackgroundLayerIndices = findExternalBackgroundUrls(
-      parsedBackground
-    ),
-    hasChanges = false;
-
-  return util
-    .collectAndReportErrors(
-      externalBackgroundLayerIndices.map(function (backgroundLayerIndex) {
-        var url = parsedBackground[backgroundLayerIndex].url;
-
-        return util.getDataURIForImageURL(url, options).then(
-          function (dataURI) {
-            parsedBackground[backgroundLayerIndex].url = dataURI;
-
-            hasChanges = true;
-          },
-          function (e) {
-            throw {
-              resourceType: "backgroundImage",
-              url: e.url,
-              msg: "Unable to load background-image " + e.url,
+    var parsedBackground = backgroundValueParser.parse(backgroundValue),
+        externalBackgroundLayerIndices =
+            findExternalBackgroundUrls(parsedBackground),
+        hasChanges = false;
+
+    return util
+        .collectAndReportErrors(
+            externalBackgroundLayerIndices.map(function (backgroundLayerIndex) {
+                var url = parsedBackground[backgroundLayerIndex].url;
+
+                return util.getDataURIForImageURL(url, options).then(
+                    function (dataURI) {
+                        parsedBackground[backgroundLayerIndex].url = dataURI;
+
+                        hasChanges = true;
+                    },
+                    function (e) {
+                        throw {
+                            resourceType: "backgroundImage",
+                            url: e.url,
+                            msg: "Unable to load background-image " + e.url,
+                        };
+                    }
+                );
+            })
+        )
+        .then(function (errors) {
+            return {
+                backgroundValue:
+                    backgroundValueParser.serialize(parsedBackground),
+                hasChanges: hasChanges,
+                errors: errors,
             };
-          }
-        );
-      })
-    )
-    .then(function (errors) {
-      return {
-        backgroundValue: backgroundValueParser.serialize(parsedBackground),
-        hasChanges: hasChanges,
-        errors: errors,
-      };
-    });
+        });
 };
 
 var iterateOverRulesAndInlineBackgroundImages = function (cssRules, options) {
-  var rulesToInline = findBackgroundImageRules(cssRules),
-    backgroundDeclarations = findBackgroundDeclarations(rulesToInline),
-    errors = [],
-    cssHasChanges = false;
-
-  return Promise.all(
-    backgroundDeclarations.map(function (declaration) {
-      return loadAndInlineBackgroundImages(declaration.value, options).then(
-        function (result) {
-          if (result.hasChanges) {
-            updateCssPropertyValue(
-              declaration.rule,
-              declaration.property,
-              result.backgroundValue
-            );
-
-            cssHasChanges = true;
-          }
-
-          errors = errors.concat(result.errors);
-        }
-      );
-    })
-  ).then(function () {
-    return {
-      hasChanges: cssHasChanges,
-      errors: errors,
-    };
-  });
+    var rulesToInline = findBackgroundImageRules(cssRules),
+        backgroundDeclarations = findBackgroundDeclarations(rulesToInline),
+        errors = [],
+        cssHasChanges = false;
+
+    return Promise.all(
+        backgroundDeclarations.map(function (declaration) {
+            return loadAndInlineBackgroundImages(
+                declaration.value,
+                options
+            ).then(function (result) {
+                if (result.hasChanges) {
+                    updateCssPropertyValue(
+                        declaration.rule,
+                        declaration.property,
+                        result.backgroundValue
+                    );
+
+                    cssHasChanges = true;
+                }
+
+                errors = errors.concat(result.errors);
+            });
+        })
+    ).then(function () {
+        return {
+            hasChanges: cssHasChanges,
+            errors: errors,
+        };
+    });
 };
 
 var loadAndInlineFontFace = function (srcDeclarationValue, options) {
-  var hasChanges = false,
-    parsedFontFaceSources,
-    externalFontFaceUrlIndices;
-
-  try {
-    parsedFontFaceSources = fontFaceSrcValueParser.parse(srcDeclarationValue);
-  } catch (e) {
-    parsedFontFaceSources = [];
-  }
-  externalFontFaceUrlIndices = findExternalFontFaceUrls(parsedFontFaceSources);
-
-  return util
-    .collectAndReportErrors(
-      externalFontFaceUrlIndices.map(function (urlIndex) {
-        var fontSrc = parsedFontFaceSources[urlIndex],
-          format = fontSrc.format || "woff";
-
-        return util.binaryAjax(fontSrc.url, options).then(
-          function (content) {
-            var base64Content = btoa(content);
-            fontSrc.url = "data:font/" + format + ";base64," + base64Content;
-
-            hasChanges = true;
-          },
-          function (e) {
-            throw {
-              resourceType: "fontFace",
-              url: e.url,
-              msg: "Unable to load font-face " + e.url,
+    var hasChanges = false,
+        parsedFontFaceSources,
+        externalFontFaceUrlIndices;
+
+    try {
+        parsedFontFaceSources =
+            fontFaceSrcValueParser.parse(srcDeclarationValue);
+    } catch (e) {
+        parsedFontFaceSources = [];
+    }
+    externalFontFaceUrlIndices = findExternalFontFaceUrls(
+        parsedFontFaceSources
+    );
+
+    return util
+        .collectAndReportErrors(
+            externalFontFaceUrlIndices.map(function (urlIndex) {
+                var fontSrc = parsedFontFaceSources[urlIndex],
+                    format = fontSrc.format || "woff";
+
+                return util.binaryAjax(fontSrc.url, options).then(
+                    function (content) {
+                        var base64Content = btoa(content);
+                        fontSrc.url =
+                            "data:font/" + format + ";base64," + base64Content;
+
+                        hasChanges = true;
+                    },
+                    function (e) {
+                        throw {
+                            resourceType: "fontFace",
+                            url: e.url,
+                            msg: "Unable to load font-face " + e.url,
+                        };
+                    }
+                );
+            })
+        )
+        .then(function (errors) {
+            return {
+                srcDeclarationValue: fontFaceSrcValueParser.serialize(
+                    parsedFontFaceSources
+                ),
+                hasChanges: hasChanges,
+                errors: errors,
             };
-          }
-        );
-      })
-    )
-    .then(function (errors) {
-      return {
-        srcDeclarationValue: fontFaceSrcValueParser.serialize(
-          parsedFontFaceSources
-        ),
-        hasChanges: hasChanges,
-        errors: errors,
-      };
-    });
+        });
 };
 
 var iterateOverRulesAndInlineFontFace = function (cssRules, options) {
-  var rulesToInline = findFontFaceRules(cssRules),
-    errors = [],
-    hasChanges = false;
-
-  return Promise.all(
-    rulesToInline.map(function (rule) {
-      var srcDeclarationValue = rule.style.getPropertyValue("src");
-
-      return loadAndInlineFontFace(srcDeclarationValue, options).then(function (
-        result
-      ) {
-        if (result.hasChanges) {
-          cssSupport.changeFontFaceRuleSrc(
-            cssRules,
-            rule,
-            result.srcDeclarationValue
-          );
-
-          hasChanges = true;
-        }
-
-        errors = errors.concat(result.errors);
-      });
-    })
-  ).then(function () {
-    return {
-      hasChanges: hasChanges,
-      errors: errors,
-    };
-  });
+    var rulesToInline = findFontFaceRules(cssRules),
+        errors = [],
+        hasChanges = false;
+
+    return Promise.all(
+        rulesToInline.map(function (rule) {
+            var srcDeclarationValue = rule.style.getPropertyValue("src");
+
+            return loadAndInlineFontFace(srcDeclarationValue, options).then(
+                function (result) {
+                    if (result.hasChanges) {
+                        cssSupport.changeFontFaceRuleSrc(
+                            cssRules,
+                            rule,
+                            result.srcDeclarationValue,
+                            options
+                        );
+
+                        hasChanges = true;
+                    }
+
+                    errors = errors.concat(result.errors);
+                }
+            );
+        })
+    ).then(function () {
+        return {
+            hasChanges: hasChanges,
+            errors: errors,
+        };
+    });
 };
 
 exports.loadAndInlineCSSResourcesForRules = function (cssRules, options) {
-  var hasChanges = false,
-    errors = [];
-
-  return Promise.all(
-    [
-      iterateOverRulesAndInlineBackgroundImages,
-      iterateOverRulesAndInlineFontFace,
-    ].map(function (func) {
-      return func(cssRules, options).then(function (result) {
-        hasChanges = hasChanges || result.hasChanges;
-        errors = errors.concat(result.errors);
-      });
-    })
-  ).then(function () {
-    return {
-      hasChanges: hasChanges,
-      errors: errors,
-    };
-  });
+    var hasChanges = false,
+        errors = [];
+
+    return Promise.all(
+        [
+            iterateOverRulesAndInlineBackgroundImages,
+            iterateOverRulesAndInlineFontFace,
+        ].map(function (func) {
+            return func(cssRules, options).then(function (result) {
+                hasChanges = hasChanges || result.hasChanges;
+                errors = errors.concat(result.errors);
+            });
+        })
+    ).then(function () {
+        return {
+            hasChanges: hasChanges,
+            errors: errors,
+        };
+    });
 };
 
 },{"./backgroundValueParser":1,"./cssSupport":2,"./util":7,"css-font-face-src":"css-font-face-src"}],5:[function(_dereq_,module,exports){
@@ -935,82 +984,88 @@ exports.loadAndInlineCSSResourcesForRules = function (cssRules, options) {
 var util = _dereq_("./util");
 
 var encodeImageAsDataURI = function (image, options) {
-  var url = null;
-  if (image.hasAttribute("src")) {
-    url = image.getAttribute("src");
-  } else if (image.hasAttributeNS("http://www.w3.org/1999/xlink", "href")) {
-    url = image.getAttributeNS("http://www.w3.org/1999/xlink", "href");
-  } else if (image.hasAttribute("href")) {
-    url = image.getAttribute("href");
-  }
-  var documentBase = util.getDocumentBaseUrl(image.ownerDocument),
-    ajaxOptions = util.clone(options);
-
-  if (!ajaxOptions.baseUrl && documentBase) {
-    ajaxOptions.baseUrl = documentBase;
-  }
-
-  return util.getDataURIForImageURL(url, ajaxOptions).then(
-    function (dataURI) {
-      return dataURI;
-    },
-    function (e) {
-      throw {
-        resourceType: "image",
-        url: e.url,
-        msg: "Unable to load image " + e.url,
-      };
-    }
-  );
-};
-
-var filterExternalImages = function (images) {
-  return images.filter(function (image) {
     var url = null;
     if (image.hasAttribute("src")) {
-      url = image.getAttribute("src");
+        url = image.getAttribute("src");
     } else if (image.hasAttributeNS("http://www.w3.org/1999/xlink", "href")) {
-      url = image.getAttributeNS("http://www.w3.org/1999/xlink", "href");
+        url = image.getAttributeNS("http://www.w3.org/1999/xlink", "href");
     } else if (image.hasAttribute("href")) {
-      url = image.getAttribute("href");
+        url = image.getAttribute("href");
     }
+    var documentBase = util.getDocumentBaseUrl(image.ownerDocument),
+        ajaxOptions = util.clone(options);
 
-    return url !== null && !util.isDataUri(url);
-  });
+    if (!ajaxOptions.baseUrl && documentBase) {
+        ajaxOptions.baseUrl = documentBase;
+    }
+
+    return util.getDataURIForImageURL(url, ajaxOptions).then(
+        function (dataURI) {
+            return dataURI;
+        },
+        function (e) {
+            throw {
+                resourceType: "image",
+                url: e.url,
+                msg: "Unable to load image " + e.url,
+            };
+        }
+    );
+};
+
+var filterExternalImages = function (images) {
+    return images.filter(function (image) {
+        var url = null;
+        if (image.hasAttribute("src")) {
+            url = image.getAttribute("src");
+        } else if (
+            image.hasAttributeNS("http://www.w3.org/1999/xlink", "href")
+        ) {
+            url = image.getAttributeNS("http://www.w3.org/1999/xlink", "href");
+        } else if (image.hasAttribute("href")) {
+            url = image.getAttribute("href");
+        }
+
+        return url !== null && !util.isDataUri(url);
+    });
 };
 
 var filterInputsForImageType = function (inputs) {
-  return Array.prototype.filter.call(inputs, function (input) {
-    return input.type === "image";
-  });
+    return Array.prototype.filter.call(inputs, function (input) {
+        return input.type === "image";
+    });
 };
 
 var toArray = function (arrayLike) {
-  return Array.prototype.slice.call(arrayLike);
+    return Array.prototype.slice.call(arrayLike);
 };
 
 exports.inline = function (doc, options) {
-  var images = toArray(doc.getElementsByTagName("img")),
-    svgImages = toArray(doc.getElementsByTagName("image")),
-    imageInputs = filterInputsForImageType(doc.getElementsByTagName("input"));
-
-  images = images.concat(svgImages);
-  images = images.concat(imageInputs);
-  var externalImages = filterExternalImages(images);
-
-  return util.collectAndReportErrors(
-    externalImages.map(function (image) {
-      return encodeImageAsDataURI(image, options).then(function (dataURI) {
-        if (!!image.attributes.src) {
-          image.attributes.src.value = dataURI;
-        } else if (!!image.attributes["xlink:href"]) {
-          image.attributes["xlink:href"].value = dataURI;
-        } else if (!!image.attributes.href) {
-          image.attributes.href.value = dataURI;
-        }
-      });
-    })
-  );
+    var images = toArray(doc.getElementsByTagName("img")),
+        svgImages = toArray(doc.getElementsByTagName("image")),
+        imageInputs = filterInputsForImageType(
+            doc.getElementsByTagName("input")
+        );
+
+    images = images.concat(svgImages);
+    images = images.concat(imageInputs);
+    var externalImages = filterExternalImages(images);
+
+    return util.collectAndReportErrors(
+        externalImages.map(function (image) {
+            return encodeImageAsDataURI(image, options).then(function (
+                dataURI
+            ) {
+                if (!!image.attributes.src) {
+                    image.attributes.src.value = dataURI;
+                } else if (!!image.attributes["xlink:href"]) {
+                    image.attributes["xlink:href"].value = dataURI;
+                } else if (!!image.attributes.href) {
+                    image.attributes.href.value = dataURI;
+                }
+            });
+        })
+    );
 };
 
 },{"./util":7}],6:[function(_dereq_,module,exports){
@@ -1019,51 +1074,51 @@ exports.inline = function (doc, options) {
 var util = _dereq_("./util");
 
 var loadLinkedScript = function (script, options) {
-  var src = script.attributes.src.value,
-    documentBase = util.getDocumentBaseUrl(script.ownerDocument),
-    ajaxOptions = util.clone(options);
-
-  if (!ajaxOptions.baseUrl && documentBase) {
-    ajaxOptions.baseUrl = documentBase;
-  }
-
-  return util.ajax(src, ajaxOptions).catch(function (e) {
-    throw {
-      resourceType: "script",
-      url: e.url,
-      msg: "Unable to load script " + e.url,
-    };
-  });
+    var src = script.attributes.src.value,
+        documentBase = util.getDocumentBaseUrl(script.ownerDocument),
+        ajaxOptions = util.clone(options);
+
+    if (!ajaxOptions.baseUrl && documentBase) {
+        ajaxOptions.baseUrl = documentBase;
+    }
+
+    return util.ajax(src, ajaxOptions).catch(function (e) {
+        throw {
+            resourceType: "script",
+            url: e.url,
+            msg: "Unable to load script " + e.url,
+        };
+    });
 };
 
 var escapeClosingTags = function (text) {
-  // http://stackoverflow.com/questions/9246382/escaping-script-tag-inside-javascript
-  return text.replace(/<\//g, "<\\/");
+    // http://stackoverflow.com/questions/9246382/escaping-script-tag-inside-javascript
+    return text.replace(/<\//g, "<\\/");
 };
 
 var substituteExternalScriptWithInline = function (scriptNode, jsCode) {
-  scriptNode.attributes.removeNamedItem("src");
-  scriptNode.textContent = escapeClosingTags(jsCode);
+    scriptNode.attributes.removeNamedItem("src");
+    scriptNode.textContent = escapeClosingTags(jsCode);
 };
 
 var getScripts = function (doc) {
-  var scripts = doc.getElementsByTagName("script");
+    var scripts = doc.getElementsByTagName("script");
 
-  return Array.prototype.filter.call(scripts, function (script) {
-    return !!script.attributes.src;
-  });
+    return Array.prototype.filter.call(scripts, function (script) {
+        return !!script.attributes.src;
+    });
 };
 
 exports.inline = function (doc, options) {
-  var scripts = getScripts(doc);
-
-  return util.collectAndReportErrors(
-    scripts.map(function (script) {
-      return loadLinkedScript(script, options).then(function (jsCode) {
-        substituteExternalScriptWithInline(script, jsCode);
-      });
-    })
-  );
+    var scripts = getScripts(doc);
+
+    return util.collectAndReportErrors(
+        scripts.map(function (script) {
+            return loadLinkedScript(script, options).then(function (jsCode) {
+                substituteExternalScriptWithInline(script, jsCode);
+            });
+        })
+    );
 };
 
 },{"./util":7}],7:[function(_dereq_,module,exports){
@@ -1072,174 +1127,174 @@ exports.inline = function (doc, options) {
 var url = _dereq_("url");
 
 exports.getDocumentBaseUrl = function (doc) {
-  if (doc.baseURI !== "about:blank") {
-    return doc.baseURI;
-  }
+    if (doc.baseURI !== "about:blank") {
+        return doc.baseURI;
+    }
 
-  return null;
+    return null;
 };
 
 exports.clone = function (object) {
-  var theClone = {},
-    i;
-  for (i in object) {
-    if (object.hasOwnProperty(i)) {
-      theClone[i] = object[i];
+    var theClone = {},
+        i;
+    for (i in object) {
+        if (object.hasOwnProperty(i)) {
+            theClone[i] = object[i];
+        }
     }
-  }
-  return theClone;
+    return theClone;
 };
 
 exports.cloneArray = function (nodeList) {
-  return Array.prototype.slice.apply(nodeList, [0]);
+    return Array.prototype.slice.apply(nodeList, [0]);
 };
 
 exports.joinUrl = function (baseUrl, relUrl) {
-  if (!baseUrl) {
-    return relUrl;
-  }
-  return url.resolve(baseUrl, relUrl);
+    if (!baseUrl) {
+        return relUrl;
+    }
+    return url.resolve(baseUrl, relUrl);
 };
 
 exports.isDataUri = function (url) {
-  return /^data:/.test(url);
+    return /^data:/.test(url);
 };
 
 exports.collectAndReportErrors = function (promises) {
-  var errors = [];
-
-  return Promise.all(
-    promises.map(function (promise) {
-      return promise.catch(function (e) {
-        errors.push(e);
-      });
-    })
-  ).then(function () {
-    return errors;
-  });
+    var errors = [];
+
+    return Promise.all(
+        promises.map(function (promise) {
+            return promise.catch(function (e) {
+                errors.push(e);
+            });
+        })
+    ).then(function () {
+        return errors;
+    });
 };
 
 var lastCacheDate = null;
 
 var getUncachableURL = function (url, cache) {
-  if (cache === false || cache === "none" || cache === "repeated") {
-    if (lastCacheDate === null || cache !== "repeated") {
-      lastCacheDate = Date.now();
+    if (cache === false || cache === "none" || cache === "repeated") {
+        if (lastCacheDate === null || cache !== "repeated") {
+            lastCacheDate = Date.now();
+        }
+        return url + "?_=" + lastCacheDate;
+    } else {
+        return url;
     }
-    return url + "?_=" + lastCacheDate;
-  } else {
-    return url;
-  }
 };
 
 exports.ajax = function (url, options) {
-  return new Promise(function (resolve, reject) {
-    var ajaxRequest = new window.XMLHttpRequest(),
-      joinedUrl = exports.joinUrl(options.baseUrl, url),
-      augmentedUrl;
-
-    var doReject = function () {
-      reject({
-        msg: "Unable to load url",
-        url: joinedUrl,
-      });
-    };
+    return new Promise(function (resolve, reject) {
+        var ajaxRequest = new window.XMLHttpRequest(),
+            joinedUrl = exports.joinUrl(options.baseUrl, url),
+            augmentedUrl;
+
+        var doReject = function () {
+            reject({
+                msg: "Unable to load url",
+                url: joinedUrl,
+            });
+        };
+
+        augmentedUrl = getUncachableURL(joinedUrl, options.cache);
+
+        ajaxRequest.addEventListener(
+            "load",
+            function () {
+                if (ajaxRequest.status === 200 || ajaxRequest.status === 0) {
+                    resolve(ajaxRequest.response);
+                } else {
+                    doReject();
+                }
+            },
+            false
+        );
 
-    augmentedUrl = getUncachableURL(joinedUrl, options.cache);
+        ajaxRequest.addEventListener("error", doReject, false);
 
-    ajaxRequest.addEventListener(
-      "load",
-      function () {
-        if (ajaxRequest.status === 200 || ajaxRequest.status === 0) {
-          resolve(ajaxRequest.response);
-        } else {
-          doReject();
+        try {
+            ajaxRequest.open("GET", augmentedUrl, true);
+            ajaxRequest.overrideMimeType(options.mimeType);
+            ajaxRequest.send(null);
+        } catch (e) {
+            doReject();
         }
-      },
-      false
-    );
-
-    ajaxRequest.addEventListener("error", doReject, false);
-
-    try {
-      ajaxRequest.open("GET", augmentedUrl, true);
-      ajaxRequest.overrideMimeType(options.mimeType);
-      ajaxRequest.send(null);
-    } catch (e) {
-      doReject();
-    }
-  });
+    });
 };
 
 exports.binaryAjax = function (url, options) {
-  var ajaxOptions = exports.clone(options);
+    var ajaxOptions = exports.clone(options);
 
-  ajaxOptions.mimeType = "text/plain; charset=x-user-defined";
+    ajaxOptions.mimeType = "text/plain; charset=x-user-defined";
 
-  return exports.ajax(url, ajaxOptions).then(function (content) {
-    var binaryContent = "";
+    return exports.ajax(url, ajaxOptions).then(function (content) {
+        var binaryContent = "";
 
-    for (var i = 0; i < content.length; i++) {
-      binaryContent += String.fromCharCode(content.charCodeAt(i) & 0xff);
-    }
+        for (var i = 0; i < content.length; i++) {
+            binaryContent += String.fromCharCode(content.charCodeAt(i) & 0xff);
+        }
 
-    return binaryContent;
-  });
+        return binaryContent;
+    });
 };
 
 var detectMimeType = function (content) {
-  var startsWith = function (string, substring) {
-    return string.substring(0, substring.length) === substring;
-  };
-
-  if (startsWith(content, "<?xml") || startsWith(content, "<svg")) {
-    return "image/svg+xml";
-  }
-  return "image/png";
+    var startsWith = function (string, substring) {
+        return string.substring(0, substring.length) === substring;
+    };
+
+    if (startsWith(content, "<?xml") || startsWith(content, "<svg")) {
+        return "image/svg+xml";
+    }
+    return "image/png";
 };
 
 exports.getDataURIForImageURL = function (url, options) {
-  return exports.binaryAjax(url, options).then(function (content) {
-    var base64Content = btoa(content),
-      mimeType = detectMimeType(content);
+    return exports.binaryAjax(url, options).then(function (content) {
+        var base64Content = btoa(content),
+            mimeType = detectMimeType(content);
 
-    return "data:" + mimeType + ";base64," + base64Content;
-  });
+        return "data:" + mimeType + ";base64," + base64Content;
+    });
 };
 
 var uniqueIdList = [];
 
 var constantUniqueIdFor = function (element) {
-  // HACK, using a list results in O(n), but how do we hash a function?
-  if (uniqueIdList.indexOf(element) < 0) {
-    uniqueIdList.push(element);
-  }
-  return uniqueIdList.indexOf(element);
+    // HACK, using a list results in O(n), but how do we hash a function?
+    if (uniqueIdList.indexOf(element) < 0) {
+        uniqueIdList.push(element);
+    }
+    return uniqueIdList.indexOf(element);
 };
 
 exports.memoize = function (func, hasher, memo) {
-  if (typeof memo !== "object") {
-    throw new Error("cacheBucket is not an object");
-  }
+    if (typeof memo !== "object") {
+        throw new Error("cacheBucket is not an object");
+    }
 
-  return function () {
-    var args = Array.prototype.slice.call(arguments);
+    return function () {
+        var args = Array.prototype.slice.call(arguments);
 
-    var argumentHash = hasher(args),
-      funcHash = constantUniqueIdFor(func),
-      retValue;
+        var argumentHash = hasher(args),
+            funcHash = constantUniqueIdFor(func),
+            retValue;
 
-    if (memo[funcHash] && memo[funcHash][argumentHash]) {
-      return memo[funcHash][argumentHash];
-    } else {
-      retValue = func.apply(null, args);
+        if (memo[funcHash] && memo[funcHash][argumentHash]) {
+            return memo[funcHash][argumentHash];
+        } else {
+            retValue = func.apply(null, args);
 
-      memo[funcHash] = memo[funcHash] || {};
-      memo[funcHash][argumentHash] = retValue;
+            memo[funcHash] = memo[funcHash] || {};
+            memo[funcHash][argumentHash] = retValue;
 
-      return retValue;
-    }
-  };
+            return retValue;
+        }
+    };
 };
 
 },{"url":"url"}]},{},[3])(3)
